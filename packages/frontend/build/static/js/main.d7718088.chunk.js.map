{"version":3,"sources":["utils/apollo-client.js","store/message.js","store/auth.js","store/store.js","theme.js","components/App/GlobalStyles.js","graphql/post.js","graphql/user.js","graphql/messages.js","graphql/notification.js","components/icons/UserIcon.js","components/icons/CloseIcon.js","components/icons/UploadImageIcon.js","components/icons/LikeIcon.js","components/icons/PostCommentIcon.js","components/icons/ExploreIcon.js","components/icons/NotificationIcon.js","components/icons/MenuIcon.js","components/icons/HomeIcon.js","components/icons/PeopleIcon.js","components/icons/SearchIcon.js","components/icons/DotsIcon.js","components/icons/InfoIcon.js","components/icons/WarningIcon.js","components/icons/ErrorIcon.js","components/icons/SuccessIcon.js","components/icons/EmptyIcon.js","components/icons/NotFoundIcon.js","components/icons/EnvelopeIcon.js","components/icons/EnvelopeOpenIcon.js","components/icons/SendIcon.js","components/icons/PencilIcon.js","components/Layout.js","components/Form.js","constants/MessageType.js","components/Message.js","components/Loading.js","components/Text.js","routes.js","pages/Auth/SignIn.js","pages/Auth/AuthHeader.js","components/Head.js","pages/Auth/SignUp.js","pages/Auth/ForgotPassword.js","pages/Auth/ResetPassword.js","pages/Auth/background.jpeg","pages/Auth/AuthLayout.js","components/NotFound.js","components/Avatar.js","components/Search/SearchInput.js","components/Search/SearchResult.js","hooks/useClickOutside.js","components/Search/Search.js","hooks/useDebounce.js","components/App/SignOut.js","components/App/Header/HeaderUserDropDown.js","components/App/Notification.js","components/App/Header/HeaderNotificationDropDown.js","utils/date.js","components/App/Header/HeaderMessageDropdown.js","components/App/Header/HeaderDropDowns.js","constants/Layout.js","components/App/Header/Header.js","components/App/Navigation.js","components/App/SideBar.js","components/App/UserSuggestions.js","graphql/comment.js","constants/NotificationType.js","hooks/useNotifications.js","components/CreateComment.js","graphql/follow.js","components/Follow.js","constants/DataLimit.js","components/PostPopup/PostPopupInfo.js","components/Comment.js","components/PostPopup/PostPopupComments.js","graphql/like.js","components/Like.js","components/PostPopup/PostPopupOptions.js","components/PostPopup/PostPopup.js","components/Confirm.js","components/Modal.js","components/PostCard/PostCardOption.js","components/PostCard/PostCard.js","components/InfiniteScroll.js","components/Skeleton.js","pages/Home/PostImageUpload.js","constants/ImageSize.js","hooks/useGlobalMessage.js","components/CreatePost.js","pages/Home/Home.js","pages/Profile/ProfileImageUpload.js","pages/Profile/background.jpg","pages/Profile/ProfileCoverUpload.js","pages/Profile/ProfileInfo.js","components/Empty.js","pages/Profile/ProfilePosts.js","pages/Profile/Profile.js","pages/Explore/ExploreCard.js","pages/Explore/Explore.js","pages/People/PeopleCard.js","pages/People/People.js","pages/Notifications/Notifications.js","pages/Post/Post.js","pages/Messages/MessagesUsers.js","pages/Messages/MessagesChatConversation.js","pages/Messages/MessagesChatHeading.js","pages/Messages/MessagesChat.js","pages/Messages/Messages.js","components/App/AppLayout.js","hooks/useWindowSize.js","components/App/ScrollToTop.js","components/App/App.js","index.js"],"names":["createAuthLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","token","localStorage","getItem","setContext","headers","authorization","request","subscribe","next","bind","error","complete","catch","unsubscribe","SET_MESSAGE","CLEAR_MESSAGE","messageInitialState","content","type","text","autoClose","messageReducer","state","action","payload","SET_AUTH_USER","CLEAR_AUTH_USER","authInitialState","user","authReducer","StoreContext","createContext","store","message","auth","reducers","StoreProvider","children","Provider","value","useReducer","useStore","useContext","font","family","weight","light","normal","bold","size","tiny","xxs","xs","sm","md","lg","xl","colors","black","white","success","body","primary","main","dark","contrastText","secondary","disabled","hint","border","warning","info","grey","50","100","200","300","400","500","600","700","800","900","shadows","screen","spacing","none","radius","zIndex","GlobalStyle","createGlobalStyle","theme","postCommentsPayload","postAuthorPayload","postLikesPayload","CREATE_POST","gql","GET_FOLLOWED_POSTS","GET_POSTS","GET_POST","DELETE_POST","userPayload","GET_USER","GET_USER_POSTS","GET_AUTH_USER","GET_USERS","SEARCH_USERS","UPLOAD_PHOTO","SIGN_UP","SIGN_IN","REQUEST_PASSWORD_RESET","VERIFY_RESET_PASSWORD_TOKEN","RESET_PASSWORD","USER_SUGGESTIONS","GET_CONVERSATIONS","IS_USER_ONLINE_SUBSCRIPTION","GET_MESSAGES","GET_MESSAGES_SUBSCRIPTION","CREATE_MESSAGE","GET_NEW_CONVERSATIONS_SUBSCRIPTION","UPDATE_MESSAGE_SEEN","notificationPayload","CREATE_NOTIFICATION","DELETE_NOTIFICATION","GET_USER_NOTIFICATION","UPDATE_NOTIFICATION_SEEN","NOTIFICATION_CREATED_OR_DELETED","UserIcon","width","color","DEFAULT_COLOR","xmlns","viewBox","d","fill","CloseIcon","UploadImageIcon","LikeIcon","get","PostCommentIcon","ExploreIcon","NotificationIcon","MenuIcon","HomeIcon","PeopleIcon","SearchIcon","DotsIcon","cx","cy","r","InfoIcon","WarningIcon","ErrorIcon","SuccessIcon","EmptyIcon","height","fillRule","transform","fillOpacity","rx","ry","NotFoundIcon","EnvelopeIcon","EnvelopeOpenIcon","SendIcon","PencilIcon","Container","styled","div","p","marginTop","maxWidth","padding","Content","Spacing","top","right","bottom","left","inline","hideOnSm","Overlay","transparency","Button","button","ghost","fullWidth","InputText","input","borderColor","Textarea","textarea","MessageType","form","SUCCESS","INFO","WARNING","ERROR","fade","Object","keys","keyframes","Root","Close","Message","dispatch","useEffect","timer","setTimeout","clearTimeout","Colors","onClick","defaultProps","Load","Round","Loading","LoadingDots","A","Link","Error","getHeadingStyles","css","H1","h1","H2","h2","H3","h3","HOME","FORGOT_PASSWORD","USER_PROFILE","EXPLORE","PEOPLE","NOTIFICATIONS","MESSAGES","POST","NEW_ID_VALUE","InputContainer","ErrorMessage","ForgotPassword","withRouter","history","location","refetch","useState","emailOrUsername","password","values","setValues","setError","useMutation","signin","loading","pathname","handleChange","e","target","name","handleSubmit","a","preventDefault","variables","response","setItem","data","push","Routes","graphQLErrors","onSubmit","autoFocus","onChange","placeholder","to","StyledContainer","Logo","SignInContainer","AuthHeader","SiteInfo","Head","title","Helmet","Welcome","Heading","Form","fullName","username","email","signup","validate","length","test","String","toLowerCase","Text","setEmail","setMessage","requestResetPassword","requestPasswordReset","confirmPassword","mutationError","setMutationError","url","URLSearchParams","search","useQuery","queryLoading","queryError","resetPassword","mutationLoading","backgroundImage","Pages","AuthLayout","exact","path","render","component","NotFound","showHomePageLink","Image","img","Avatar","image","src","IconContainer","Input","hideIcon","backgroundColor","SearchInput","onFocus","inputRef","ref","StyledA","Item","Name","UserName","NoSearchResult","SearchResult","users","forMessage","map","generatePath","userId","id","useClickOutside","handler","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","StyledLoading","Search","others","client","useApolloClient","isOpenSearchResult","setIsOpenSearchResult","searchQuery","setSearchQuery","setUsers","setLoading","useRef","debounceSearchQuery","delay","debouncedValue","setDebouncedValue","useDebounce","query","searchUsers","handleInputChange","replace","removeItem","resetStore","CSS","HeaderUserDropDown","userRef","NotificationItem","LeftSide","Action","PostImage","Notification","notification","close","React","mutate","mutation","refetchQueries","updateNotificationSeen","newNotifications","follow","like","comment","author","post","Empty","HeaderNotificationDropDown","notificationRef","dropdownData","closeDropDown","timeAgo","unixTimestamp","date","Date","parseInt","seconds","Math","floor","interval","currentDate","month","getMonth","day","getDay","year","getFullYear","time","toLocaleString","hour","minute","hour12","User","NavLink","Info","FullName","LastMessage","CreatedAt","HeaderMessageDropdown","messageRef","lastMessage","lastMessageCreatedAt","HeaderDropDowns","dropdownOpen","USER","NOTIFICATION","MESSAGE","HEADER_HEIGHT","Wrapper","Hamburger","RightSide","countCSS","NotificationCount","span","MessageCount","toggleSideBar","setDropdownOpen","setDropdownData","closeOnClickOutside","handleIconClick","dropdownType","newConversations","List","ul","ListItem","li","Navigation","activeClassName","isOpen","active","sideBarRef","isAuthUsersProfilePage","substring","UserSuggestions","matchPath","suggestPeople","CREATE_COMMENT","DELETE_COMMENT","NotificationType","useNotifications","console","create","postId","notificationType","notificationTypeId","authorId","remove","notificationId","toggle","hasDone","isNotified","notifications","find","n","options","delete","CreateComment","focus","setComment","buttonEl","TextareaEl","authUserId","createComment","onKeyDown","keyCode","click","CREATE_FOLLOW","DELETE_FOLLOW","isFollowing","Follow","following","f","followerId","skip","limit","handleClickFollow","createFollow","Author","PostPopupInfo","DeleteButton","CommentSection","Comment","postAuthor","deleteComment","handleDeleteComment","Comments","usedInModal","PostPopupComments","comments","CREATE_LIKE","DELETE_LIKE","StyledButton","Like","likes","withText","hasLiked","l","handleButtonClick","createLike","Icons","Count","PostPopupOptions","postLikes","Left","Right","CloseModal","Title","PostPopup","closeModal","getPost","ButtonContainer","Confirm","onCancel","onOk","cancelText","okText","Modal","open","onClose","otherProps","FollowItem","PostCardOption","closeOption","deletePost","navigator","clipboard","writeText","process","TopRow","Poster","BottomRow","CountAndIcons","CommentLine","PostCard","imagePublicId","createdAt","openModal","isCommentOpen","setIsCommentOpen","isOptionOpen","setIsOptionOpen","InfiniteScroll","dataKey","fetchMore","count","handleScroll","useMemo","loadMore","updateQuery","prev","fetchMoreResult","previousData","fetchMoreData","setWith","clone","uniqBy","windowHeight","window","innerHeight","scrollTop","documentElement","offsetHeight","scrolled","propTypes","PropTypes","array","isRequired","string","number","func","object","Skeleton","skeleton","i","loopSkeleton","Label","label","PostImageUpload","accept","htmlFor","MAX_POST_IMAGE_SIZE","MAX_USER_COVER_IMAGE_SIZE","MAX_USER_PROFILE_IMAGE_SIZE","useGlobalMessage","dispatchAction","messageType","ImagePreviewContainer","ImagePreview","Options","Buttons","CreatePost","setTitle","setImage","isFocused","setIsFocused","apiError","setApiError","createPost","handleReset","handlePostImageUpload","file","files","isShareDisabled","URL","createObjectURL","Home","modalPostId","setModalPostId","notifyOnNetworkStatusChange","networkStatus","pushState","getFollowedPosts","posts","showNextLoading","renderContent","authUser","ProfileImageUpload","handleImageChange","alt","defaultBackgroundImage","ProfileCoverUpload","coverImagePublicId","coverImage","isCover","ProfileImage","FollowAndMessage","Online","ProfileInfo","useSubscription","isUserOnline","isOnline","followers","ProfilePosts","isPostPopupOpen","setIsPostPopupOpen","getUserPosts","match","params","getUser","Photo","ExploreCard","openPostPopup","countLikes","countComments","imageLoaded","setImageLoaded","onload","style","PostsContainer","Explore","getPosts","ImageContainer","InitialLetters","PeopleCard","setColor","randomColor","random","split","slice","join","charAt","PeopleContainer","People","getUsers","Notifications","getUserNotifications","HeadingContainer","NewMessage","SearchContainer","UserContainer","seen","FullNameUnSeen","UnSeen","subscribeToMore","subscriptionData","newConversation","oldConversations","getConversations","some","u","unseen","lastMessageSender","Conversation","MessageDate","userMessage","MessageWrapper","StyledTextarea","SendButton","MessagesChatConversation","messages","chatUser","bottomRef","messageText","setMessageText","createMessage","scrollIntoView","sendMessage","sender","receiver","isFirstMessage","isAuthUserReceiver","shiftKey","To","MessagesChat","fetchPolicy","messagesLoading","updateMessageSeen","useCallback","newMessage","messageCreated","getMessages","Messages","isDesktop","isClient","getSize","innerWidth","undefined","windowSize","setWindowSize","handleResize","useWindowSize","isSideBarOpen","setIsSidebarOpen","Profile","Post","scrollTo","App","oldNotifications","getAuthUser","notificationCreatedOrDeleted","href","index","findIndex","splice","mergeConversations","API_URL","apolloClient","apiUrl","websocketApiUrl","cache","InMemoryCache","errorLink","onError","networkError","locations","log","authLink","uploadLink","createUploadLink","uri","authToken","wsLink","WebSocketLink","timeout","reconnect","connectionParams","subscriptionClient","maxConnectTimeGenerator","duration","max","terminatingLink","getMainDefinition","kind","ApolloClient","link","from","createApolloClient","WEBSOCKET_API_URL","ApolloProvider","getElementById"],"mappings":"0WASMA,GAAiB,WAUrB,OAAO,IAAIC,cACT,SAACC,EAAWC,GAAZ,OACE,IAAIC,KAAW,SAACC,GACd,IAAIC,EAYJ,OAXAC,QAAQC,QAAQN,GACbO,MAAK,SAACC,GAAD,OAdE,SAACR,GACf,IAAMS,EAAQC,aAAaC,QAAQ,SACnCX,EAAUY,WAAW,CACnBC,QAAS,CACPC,cAAeL,KAUGM,CAAQP,MACvBD,MAAK,WACJH,EAASH,EAAQD,GAAWgB,UAAU,CACpCC,KAAMd,EAASc,KAAKC,KAAKf,GACzBgB,MAAOhB,EAASgB,MAAMD,KAAKf,GAC3BiB,SAAUjB,EAASiB,SAASF,KAAKf,QAGpCkB,MAAMlB,EAASgB,MAAMD,KAAKf,IAEtB,WACDC,GAAQA,EAAOkB,sB,SChChBC,GAAc,cACdC,GAAgB,gBAKhBC,GAAsB,CACjCC,QAAS,CACPC,KAAM,GACNC,KAAM,GACNC,WAAW,IAOFC,GAAiB,WAA0C,IAAzCC,EAAwC,uDAAhCN,GAAqBO,EAAW,uCACrE,OAAQA,EAAOL,MACb,KAAKJ,GACH,OAAO,6BACFQ,GADL,IAEEL,QAAS,CACPC,KAAMK,EAAOC,QAAQN,KACrBC,KAAMI,EAAOC,QAAQL,KACrBC,UAAWG,EAAOC,QAAQJ,aAGhC,KAAKL,GACH,OAAO,6BACFO,GACAN,IAIP,QACE,OAAOM,ICpCAG,GAAgB,gBAChBC,GAAkB,kBAKlBC,GAAmB,CAC9BC,KAAM,MAMKC,GAAc,WAAuC,IAAtCP,EAAqC,uDAA7BK,GAAkBJ,EAAW,uCAC/D,OAAQA,EAAOL,MACb,KAAKO,GACH,OAAO,6BACFH,GADL,IAEEM,KAAML,EAAOC,UAEjB,KAAKE,GACH,OAAO,6BACFJ,GACAK,IAIP,QACE,OAAOL,I,QCxBPQ,GAAeC,0BAKfC,GAAQ,CACZC,QAASjB,GACTkB,KAAMP,IAMFQ,GAAW,SAACH,EAAOT,GAAR,MAAoB,CACnCU,QAASZ,GAAeW,EAAMC,QAASV,GACvCW,KAAML,GAAYG,EAAME,KAAMX,KAMnBa,GAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC3B,eAACP,GAAaQ,SAAd,CAAuBC,MAAOC,qBAAWL,GAAUH,IAAnD,SAA4DK,KAMjDI,GAAW,kBAAMC,qBAAWZ,KC/B1B,I,OAAA,CAIba,KAAM,CACJC,OAAQ,0BACRC,OAAQ,CACNC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAERC,KAAM,CACJC,KAAM,OACNC,IAAK,OACLC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,SAORC,OAAQ,CACNC,MAAO,UACPC,MAAO,OACPC,QAAS,UACTC,KAAM,UAENC,QAAS,CACPhB,MAAO,UACPiB,KAAM,UACNC,KAAM,UACNC,aAAc,QAGhBC,UAAW,CACTpB,MAAO,UACPiB,KAAM,UACNC,KAAM,UACNC,aAAc,QAGhB9C,KAAM,CACJ2C,QAAS,sBACTI,UAAW,sBACXC,SAAU,sBACVC,KAAM,uBAGRC,OAAQ,CACNvB,MAAO,UACPiB,KAAM,UACNC,KAAM,WAGRtD,MAAO,CACLoC,MAAO,UACPiB,KAAM,UACNC,KAAM,UACNC,aAAc,QAGhBK,QAAS,UAETC,KAAM,UAENC,KAAM,CACJC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,YAOTC,QAAS,CACP9B,GAAI,yDACJC,GAAI,qCACJC,GAAI,yDACJC,GAAI,4DAMN4B,OAAQ,CACNhC,GAAI,QACJC,GAAI,QACJC,GAAI,SACJC,GAAI,SACJC,GAAI,UAMN6B,QAAS,CACPC,KAAM,EACNnC,IAAK,MACLC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,QAMN+B,OAAQ,CACNlC,GAAI,MACJC,GAAI,MACJC,GAAI,QAMNiC,OAAQ,CACNpC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,M,iFCpIKiC,GAAcC,YAAH,uSAaXC,GAAMlC,OAAOtC,KAAK2C,QACP6B,GAAMlC,OAAOI,M,SCfxB+B,GAAmB,yHAgBnBC,GAAiB,4WAoCjBC,GAAgB,iDAWhBC,GAAcC,aAAH,4HAWXC,GAAqBD,aAAH,mUAUrBH,GACAD,GACAE,IASGI,GAAYF,aAAH,yRAQZH,GACAD,GACAE,IASGK,GAAWH,aAAH,2KAObH,GACAD,GACAE,IAQKM,GAAcJ,aAAH,4HClIlBK,GAAW,uHAeJC,GAAWN,aAAH,sfAGbK,IAkCKE,GAAiBP,aAAH,qUAUjBH,GACAD,GACAE,IASGU,GAAgBR,aAAH,k1BAGlBK,IA0DKI,GAAYT,aAAH,shBAkCTU,GAAeV,aAAH,gLAcZW,GAAeX,aAAH,sIAWZY,GAAUZ,aAAH,uHAWPa,GAAUb,aAAH,uHAWPc,GAAyBd,aAAH,qJAWtBe,GAA8Bf,aAAH,mKAW3BgB,GAAiBhB,aAAH,qIAWdiB,GAAmBjB,aAAH,mKAchBkB,GAAoBlB,aAAH,kRAmBjBmB,GAA8BnB,aAAH,uLC1R3BoB,GAAepB,aAAH,mZA2BZqB,GAA4BrB,aAAH,6ZA2BzBsB,GAAiBtB,aAAH,wJAYduB,GAAqCvB,aAAH,6OAmBlCwB,GAAsBxB,aAAH,uHCrF1ByB,GAAmB,sPA+BZC,GAAsB1B,aAAH,4IAWnB2B,GAAsB3B,aAAH,4IAWnB4B,GAAwB5B,aAAH,6NAKxByB,IASGI,GAA2B7B,aAAH,iIASxB8B,GAAkC9B,aAAH,2JAKlCyB,IC7EGM,GAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,GAAMlC,OAAOe,KAAK,KAExC,OACE,uBAAK2D,MAAM,6BAA6BH,MAAOA,GAJ3B,KAImDI,QAAQ,YAA/E,UACE,uBACEC,EAAE,sgBACFC,KAAK,YAEP,uBACED,EAAE,mjBACFC,KAAM3C,GAAMlC,OAAOwE,IAAUC,QCZxBK,GAAY,SAAC,GAAsB,IAApBP,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE3BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,sBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,oBAJV,SAME,uBAAMC,EAAE,gVCXDG,GAAkB,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAEjCC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,sBAAKiE,MAAM,6BAA6BC,QAAQ,cAAcJ,MAAOA,GAJjD,KAIpB,SACE,uBACEK,EAAE,yfACFC,KAAM3C,GAAMlC,OAAOwE,IAAUC,O,SCPxBO,GAAW,SAAC,GAAsB,IAApBT,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UACxC,OACE,sBACEiE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAMI,eAAI/C,GAAMlC,OAAQwE,IAAUC,EAClCE,QAAQ,sBAJV,SAME,uBAAMC,EAAE,+pBCXDM,GAAkB,SAAC,GAAsB,IAApBX,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAEjCC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,sBAAKiE,MAAM,6BAA6BC,QAAQ,YAAYJ,MAAOA,GAJ/C,KAIpB,SACE,uBACEK,EAAE,sUACFC,KAAM3C,GAAMlC,OAAOwE,IAAUC,OCRxBU,GAAc,SAAC,GAAsB,IAApBZ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE7BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,uBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,sBAJV,UAME,uBAAMC,EAAE,6JACR,uBAAMA,EAAE,23BACR,uBAAMA,EAAE,mKCbDQ,GAAmB,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAElCC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,uBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,sBAJV,UAME,uBAAMC,EAAE,6kCACR,uBAAMA,EAAE,yPCZDS,GAAW,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,sBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,cAJV,SAME,uBAAMC,EAAE,yeCXDU,GAAW,SAAC,GAAsB,IAApBf,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,uBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,cAJV,UAME,uBAAMC,EAAE,8QACR,uBAAMA,EAAE,4jBCZDW,GAAa,SAAC,GAAsB,IAApBhB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE5BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,sBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,kBAJV,SAME,uBAAMC,EAAE,q4CCXDY,GAAa,SAAC,GAAsB,IAApBjB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE5BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,sBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,oBAJV,SAME,uBAAMC,EAAE,+UCXDa,GAAW,SAAC,GAAsB,IAApBlB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,GAAMlC,OAAOtC,KAAK2C,QAExC,OACE,uBACEkE,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,cACRD,MAAM,6BAJR,UAME,yBAAQgB,GAAG,SAASC,GAAG,MAAMC,EAAE,WAC/B,yBAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,WAC5B,yBAAQF,GAAG,UAAUC,GAAG,MAAMC,EAAE,eCbzBC,GAAW,SAAC,GAAsB,IAApBtB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,GAAMlC,OAAOE,MACnC,OACE,uBACEwE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,cAJV,UAME,uBAAMC,EAAE,uNACR,uBAAMA,EAAE,iRCXDkB,GAAc,SAAC,GAAsB,IAApBvB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE7BC,EAAgBvC,GAAMlC,OAAOE,MACnC,OACE,uBACEwE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,cAJV,UAME,uBAAMC,EAAE,0PACR,uBAAMA,EAAE,yHACR,yBAAQc,GAAG,MAAMC,GAAG,SAASC,EAAE,WCZxBG,GAAY,SAAC,GAAsB,IAApBxB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE3BC,EAAgBvC,GAAMlC,OAAOE,MACnC,OACE,uBACEwE,MAAM,6BACNC,QAAQ,sBACRJ,MAAOA,GANW,KAOlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAJ/B,UAME,uBAAMG,EAAE,8GACR,uBAAMA,EAAE,maACR,uBAAMA,EAAE,+QCZDoB,GAAc,SAAC,GAAsB,IAApBzB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE7BC,EAAgBvC,GAAMlC,OAAOE,MACnC,OACE,uBACEwE,MAAM,6BACNH,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,cAJV,UAME,uBAAMC,EAAE,0tBACR,uBAAMA,EAAE,iSCZDqB,GAAY,WACvB,OACE,sBAAK1B,MAAM,MAAM2B,OAAO,MAAMvB,QAAQ,cAAcD,MAAM,6BAA1D,SACE,qBAAGG,KAAK,OAAOsB,SAAS,UAAxB,UACE,qBAAGC,UAAU,sBAAb,UACE,0BAASC,YAAY,KAAKxB,KAAK,UAAUa,GAAG,SAASC,GAAG,SAASW,GAAG,SAASC,GAAG,WAChF,uBACE3B,EAAE,+IACFC,KAAK,YAEP,uBACED,EAAE,2IACFC,KAAK,2BACLuB,UAAU,qBAEZ,uBACExB,EAAE,0FACFC,KAAK,YAEP,uBACED,EAAE,+iBACFC,KAAK,eAGT,uBACED,EAAE,yOACFC,KAAK,YAEP,qBAAGuB,UAAU,2BAA2BvB,KAAK,OAA7C,UACE,0BAASa,GAAG,SAASC,GAAG,QAAQW,GAAG,QAAQC,GAAG,UAC9C,uBAAM3B,EAAE,kECpCL4B,GAAe,WAC1B,OACE,uBAAKjC,MAAM,MAAM2B,OAAO,MAAMxB,MAAM,6BAA6BC,QAAQ,cAAzE,UACE,uBACEC,EAAE,uuBACFC,KAAK,YAEP,uBACED,EAAE,gOACFC,KAAK,YAEP,uBACED,EAAE,+dACFC,KAAK,YAEP,uBACED,EAAE,sTACFC,KAAK,YAEP,uBACED,EAAE,8QACFC,KAAK,YAEP,uBACED,EAAE,6JACFC,KAAK,YAEP,uBACED,EAAE,6JACFC,KAAK,YAEP,uBACED,EAAE,6JACFC,KAAK,YAEP,uBACED,EAAE,+LACFC,KAAK,YAEP,uBACED,EAAE,yIACFC,KAAK,YAEP,uBACED,EAAE,6IACFC,KAAK,YAEP,uBACED,EAAE,wIACFC,KAAK,SAEP,uBACED,EAAE,mIACFC,KAAK,YAEP,uBACED,EAAE,8IACFC,KAAK,YAEP,uBACED,EAAE,0OACFC,KAAK,YAEP,uBACED,EAAE,kJACFC,KAAK,SAEP,uBACED,EAAE,4uIACFC,KAAK,gBC9DA4B,GAAe,SAAC,GAAsB,IAApBlC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE9BC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,sBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,sBAJV,SAME,uBAAMC,EAAE,2tBCXD8B,GAAmB,SAAC,GAAsB,IAApBnC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAElCC,EAAgBvC,GAAMlC,OAAOtC,KAAK+C,UAExC,OACE,uBACE8D,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BC,MAAM,6BACNC,QAAQ,cAJV,UAME,uBAAMC,EAAE,wkBACR,uBAAMA,EAAE,mGCZD+B,GAAW,SAAC,GAAsB,IAApBpC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1BC,EAAgBvC,GAAMlC,OAAOK,QAAQC,KAE3C,OACE,sBACEoE,MAAM,6BACNH,MAAOA,GANW,KAOlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,sBAJV,SAME,uBAAMC,EAAE,8SCXDgC,GAAa,SAAC,GAAsB,IAApBrC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE5BC,EAAgBvC,GAAMlC,OAAOtC,KAAK2C,QAExC,OACE,uBACEkE,MAAOA,GALW,KAMlBM,KAAM3C,GAAMlC,OAAOwE,IAAUC,EAC7BE,QAAQ,mBACRD,MAAM,6BAJR,UAME,uBAAME,EAAE,oWACR,uBAAMA,EAAE,oeCTDiC,GAAYC,IAAOC,IAAV,iNAGN,SAAAC,GAAC,OAAIA,EAAEC,UAAYD,EAAE9E,MAAMN,QAAQoF,EAAEC,WAAa,KAEnD,SAAAD,GAAC,OAAKA,EAAEE,UAAYF,EAAE9E,MAAMP,OAAOqF,EAAEE,aACvC,SAAAF,GAAC,OAAIA,EAAEG,QAAF,YAAiBH,EAAE9E,MAAMN,QAAQoF,EAAEG,UAAnC,YAAqDH,EAAE9E,MAAMN,QAAQhC,OAC1E,SAAAoH,GAAC,OAAIA,EAAEjF,QAAUiF,EAAE9E,MAAMH,OAAOiF,EAAEjF,WACzB,SAAAiF,GAAC,OAAIA,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,UACpC,SAAAwC,GAAC,OAAIA,EAAElF,QAAUkF,EAAE9E,MAAMJ,OAAOkF,EAAElF,WAGxCsF,GAAUN,IAAOC,IAAV,wOAIP,SAACC,GAAD,OAAOA,EAAEjF,QAAUiF,EAAE9E,MAAMH,OAAOiF,EAAEjF,WAG1B,SAACiF,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAChC,SAACmH,GAAD,OAAOA,EAAE9E,MAAMP,OAAOhC,MAGZ,SAACqH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAChC,SAACkH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO/B,MAatByH,GAAUP,IAAOC,IAAV,iHAChB,SAACC,GAAD,OAAOA,EAAEM,KAAF,sBAAwBN,EAAE9E,MAAMN,QAAQoF,EAAEM,SACjD,SAACN,GAAD,OAAOA,EAAEO,OAAF,wBAA4BP,EAAE9E,MAAMN,QAAQoF,EAAEO,WACrD,SAACP,GAAD,OAAOA,EAAEQ,QAAF,yBAA8BR,EAAE9E,MAAMN,QAAQoF,EAAEQ,YACvD,SAACR,GAAD,OAAOA,EAAES,MAAF,uBAA0BT,EAAE9E,MAAMN,QAAQoF,EAAES,UACnD,SAACT,GAAD,OAAOA,EAAEU,QAAF,4BAEY,SAACV,GAAD,OAAOA,EAAE9E,MAAMP,OAAO/B,MACvC,SAACoH,GAAD,OACAA,EAAEW,UAAF,kCAUOC,GAAUd,IAAOC,IAAV,gKAMP,SAACC,GAAD,OAAOA,EAAE9E,MAAMH,OAAOlC,MACC,SAACmH,GAAD,OAAQA,EAAEa,aAAeb,EAAEa,aAAe,SC9DjEC,GAAShB,IAAOiB,OAAV,8aAKR,SAAAf,GAAC,OAAIA,EAAE9E,MAAMlC,OAAOE,SAChB,SAAA8G,GAAC,OAAIA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKG,MACxD,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMJ,OAAOlC,MAC1B,SAAAoH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQjC,MAAM,SAAAqH,GAAC,OAAIA,EAAE9E,MAAMN,QAAQhC,MACvC,SAAAoH,GAAC,OAAIA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOK,QAAQC,QAKrE,SAAA0G,GAAC,OAAKA,EAAE5H,OAAS4H,EAAE9E,MAAMhD,KAAKE,OAAO4H,EAAE5H,QAAU4H,EAAE9E,MAAMhD,KAAKE,OAAOE,UAIlF,SAAA0H,GAAC,OAAIA,EAAEtG,UAAF,kCACesG,EAAE9E,MAAMlC,OAAOe,KAAK,KADnC,sCAKL,SAAAiG,GAAC,OAAKA,EAAEtG,UAAH,2EAOL,SAAAsG,GAAC,OAAIA,EAAEtJ,MAAF,uBACIsJ,EAAExC,MAAQS,eAAI+B,EAAE9E,MAAMlC,OAAQgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOtC,KAAK+C,UADjE,uEAMP,SAAAuG,GAAC,OAAIA,EAAEgB,OAAF,uBACMhB,EAAExC,MAAQS,eAAI+B,EAAE9E,MAAMlC,OAAOgH,EAAExC,QAAUwC,EAAE9E,MAAMlC,OAAOtC,KAAK+C,UADnE,+GAQH,SAAAuG,GAAC,OAAIA,EAAEiB,WAAF,4BAQIC,GAAYpB,IAAOqB,MAAV,2OAKH,SAACnB,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MACvB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MACnB,SAACqH,GAAD,OAAQA,EAAEoB,YAAcpB,EAAE9E,MAAMlC,OAAOgH,EAAEoB,aAAepB,EAAE9E,MAAMlC,OAAOY,OAAON,QACzF,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAGlB,SAACuG,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAOpC+H,GAAWvB,IAAOwB,SAAV,qOAMH,SAACtB,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACxB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAC7B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK4C,QACvB,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAG3B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aC3F3B8H,IDkGOzB,IAAO0B,KAAV,gJAEE,SAACxB,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAC5B,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAAM,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAC3C,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SACtB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QCvGxB,CACzBmI,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,MAAO,UCOHC,IDJyBC,OAAOC,KAAKR,ICI9BS,YAAH,gIAcJC,GAAOnC,IAAOC,IAAV,wSAGM,SAACC,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ7B,MAC1B,SAACmH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACvB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMH,OAAOhC,MAKb,SAACiH,GAAD,OAAOA,EAAExC,OAASwC,EAAExC,QAC3BqE,IACJ,SAAC7B,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAG3BgJ,GAAQpC,YAAOgB,GAAPhB,CAAH,kFASLqC,GAAU,SAAC,GAAmC,IAAjCvK,EAAgC,EAAhCA,SAAUnB,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,UACjC,EAAqBqB,KAAZoK,EAAT,qBAEAC,qBAAU,WACR,GAAI1L,EAAW,CACb,IAAM2L,EAAQC,YAAW,WACvBH,EAAS,CAAE3L,KAAMH,OAChB,KAEH,OAAO,WACLkM,aAAaF,OAGhB,CAACF,EAAUzL,IAEd,MAA0CuE,GAAMlC,OAE1CyJ,EAAS,CACbhB,QAHF,EAAQtI,QAINuI,KAJF,EAAiB5H,KAKf6H,QALF,EAAuB9H,QAMrB+H,MANF,EAAgC3L,MAMjBqD,MAcf,OACE,gBAAC2I,GAAD,CAAMzE,MAAOiF,EAAOhM,GAApB,UAZkB,SAACA,GAQnB,MAPc,CACZgL,QAAS,eAAC,GAAD,IACTC,KAAM,eAAC,GAAD,IACNC,QAAS,eAAC,GAAD,IACTC,MAAO,eAAC,GAAD,KAGInL,GAKV8K,CAAY9K,GACb,eAAC4J,GAAD,CAASI,KAAMhK,GAAQ,KAAvB,SAA8BmB,IAC9B,eAACsK,GAAD,CAAOlB,OAAK,EAAC0B,QAAS,kBAAMN,EAAS,CAAE3L,KAAMH,MAA7C,SACE,eAAC,GAAD,CAAWkH,MAAM,gBAMzB2E,GAAQQ,aAAe,CACrBhM,WAAW,GASEwL,I,sDAAAA,MCzGTS,GAAOZ,YAAH,07BAuBJa,GAAQb,YAAH,yHAYEc,GAAUhD,IAAOC,IAAV,oVAQL6C,GAA4BC,IAE3B,SAAC7C,GAAD,OAAOA,EAAEM,KAAON,EAAE9E,MAAMN,QAAQoF,EAAEM,QAC/B,SAACN,GAAD,OAAOA,EAAEQ,QAAUR,EAAE9E,MAAMN,QAAQoF,EAAEQ,WAC7C,SAACR,GAAD,OAAQA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAC5D,SAACuG,GAAD,OAAQA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKI,MAMjEmK,GAAcjD,IAAOC,IAAV,sVAMX,SAACC,GAAD,OAAQA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAC5D,SAACuG,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKO,MCtD7BiK,GAAIlD,YAAOmD,KAAPnD,CAAH,0MAIH,SAACE,GAAD,OAAQA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAC1D,SAACuG,GAAD,OAAQA,EAAE5H,OAAS4H,EAAE9E,MAAMhD,KAAKE,OAAO4H,EAAE5H,QAAU4H,EAAE9E,MAAMhD,KAAKE,OAAOE,UACzE,SAAC0H,GAAD,OAAQA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGjE,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WAO3B6J,GAAQpD,IAAOC,IAAV,iEACP,SAACC,GAAD,OAAQA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAO/C,MAAMqD,QAC7D,SAAC0G,GAAD,OAAQA,EAAExH,KAAOwH,EAAE9E,MAAMhD,KAAKM,KAAKwH,EAAExH,MAAQwH,EAAE9E,MAAMhD,KAAKM,KAAKI,MAQxEuK,GAAmB,SAAC3K,GAAD,OAAU4K,YAAT,QAAD,2FAEV5K,GACE,SAACwH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOE,UACjC,SAAC0H,GAAD,OAAQA,EAAExC,MAAQwC,EAAE9E,MAAMlC,OAAOgH,EAAExC,OAASwC,EAAE9E,MAAMlC,OAAOtC,KAAK2C,YAG9DgK,GAAKvD,IAAOwD,GAAV,sCACXH,IAAiB,SAACnD,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKO,OAGjCwK,GAAKzD,IAAO0D,GAAV,sCACXL,IAAiB,SAACnD,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKM,OAGjC2K,GAAK3D,IAAO4D,GAAV,sCACXP,IAAiB,SAACnD,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,O,mBCjDjCgL,GAAO,IAEPC,GAAkB,mBAIlBC,GAAe,aAEfC,GAAU,WAEVC,GAAS,UAETC,GAAgB,iBAEhBC,GAAW,oBAEXC,GAAO,YAKPC,GAAe,MCVtBlC,GAAOnC,IAAOC,IAAV,+IAIK,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACxB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGjCwL,GAAiBtE,YAAOO,GAAPP,CAAH,+CAIduE,GAAevE,IAAOC,IAAV,mEAKZuE,GAAiBxE,IAAOC,IAAV,qFACL,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACxB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAC5B,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SA2FlBqL,iBArFA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACnC,EAA4BC,mBAAS,CAAEC,gBAAiB,GAAIC,SAAU,KAAtE,oBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,oBAAO1O,EAAP,KAAc+O,EAAd,KACA,EAA8BC,aAAY7I,IAA1C,oBAAO8I,EAAP,KAAiBC,EAAjB,KAAiBA,QAEjB9C,qBAAU,WACR2C,EAAS,MACR,CAACP,EAASW,WAEb,IAAMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAM1N,EAAd,EAAcA,MACdiN,EAAU,6BAAKD,GAAN,mBAAeU,EAAO1N,MAG3B2N,EAAY,yCAAG,WAAOH,GAAP,gBAAAI,EAAA,yDACnBJ,EAAEK,iBAEGf,GAAoBC,EAHN,uBAIjBG,EAAS,2BAJQ,iCAQnBA,EAAS,IARU,kBAUME,EAAO,CAC5BU,UAAW,CAAEzE,MAAO,CAAEyD,kBAAiBC,eAXxB,cAUXgB,EAVW,OAajBrQ,aAAasQ,QAAQ,QAASD,EAASE,KAAKb,OAAO3P,OAblC,UAcXmP,IAdW,QAejBF,EAAQwB,KAAKC,IAfI,kDAiBjBjB,EAAS,KAAMkB,cAAc,GAAG1O,SAjBf,0DAAH,sDAqBVoN,EAA8BE,EAA9BF,gBAAiBC,EAAaC,EAAbD,SAEzB,OACE,uBAAMsB,SAAUV,EAAhB,SACE,gBAAC,GAAD,WACE,gBAACrB,GAAD,WACGnO,GACC,eAACoO,GAAD,UACE,eAACnB,GAAD,CAAO1K,KAAK,MAAMgF,MAAM,QAAxB,SACGvH,MAKP,eAACiL,GAAD,CACEkF,WAAS,EACT3P,KAAK,OACL+O,KAAK,kBACLV,OAAQF,EACRyB,SAAUhB,EACViB,YAAY,oBACZlF,YAAY,aAIhB,gBAACgD,GAAD,CAAgB3D,KAAK,KAAKF,MAAM,KAAhC,UACE,eAACW,GAAD,CACEzK,KAAK,WACL+O,KAAK,WACLV,OAAQD,EACRwB,SAAUhB,EACViB,YAAY,WACZlF,YAAY,UAEd,eAAC4B,GAAD,CAAGuD,GAAIN,GAAP,SACE,eAAC,GAAD,oCAIJ,eAACnF,GAAD,CAAQpH,SAAUyL,EAAlB,4B,SCvGFlD,GAAOnC,IAAOC,IAAV,+MAYJyG,GAAkB1G,YAAOD,GAAPC,CAAH,yOAMN,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAEf,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvC4N,GAAO3G,YAAOkD,GAAPlD,CAAH,sMAEC,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAClB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKI,MACvB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAG/B,SAACyH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAGZ,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvC6N,GAAkB5G,IAAOC,IAAV,gDAyBN4G,GAlBI,SAAC,GAAiB,IAAfjC,EAAc,EAAdA,QACpB,OACE,eAAC,GAAD,UACE,gBAAC8B,GAAD,CAAiBtG,SAAS,KAA1B,UACE,eAACuG,GAAD,CAAMF,GAAIN,GAAV,SAAwBW,GAASpB,OAEjC,eAACkB,GAAD,UACE,eAAC,GAAD,CAAQhC,QAASA,Y,UCxDrBmC,GAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,eAACC,GAAA,EAAD,UACE,iCAAQD,OAQZD,GAAKlE,aAAe,CAClBmE,MAAOF,GAASpB,MAGHqB,I,uCAAAA,MCTT5E,GAAOnC,YAAOD,GAAPC,CAAH,mPAOa,SAACE,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAMvCmO,GAAUlH,IAAOC,IAAV,sKAGF,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAClB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMP,OAAOhC,MAEd,SAACqH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvCoO,GAAUnH,YAAOuD,GAAPvD,CAAH,sDACM,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGpCsO,GAAOpH,IAAOC,IAAV,6LACG,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ/B,MACjB,SAACmH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAIlB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO/B,MAqJ9B2L,iBA7IA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,QACzB,EAA0BC,mBAAS,IAAnC,oBAAO1O,EAAP,KAAc+O,EAAd,KACA,EAA4BL,mBAAS,CACnCwC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPxC,SAAU,KAJZ,oBAAOC,EAAP,KAAeC,EAAf,KAMA,EAA8BE,aAAY9I,IAA1C,oBAAOmL,EAAP,KAAiBnC,EAAjB,KAAiBA,QAEXE,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAM1N,EAAd,EAAcA,MACdiN,EAAU,6BAAKD,GAAN,mBAAeU,EAAO1N,MAG3ByP,EAAW,WACf,IAAKJ,IAAaE,IAAUD,IAAavC,EACvC,MAAO,0BAGT,GAAIsC,EAASK,OAAS,GACpB,MAAO,uCAIT,IADmB,wJACHC,KAAKC,OAAOL,GAAOM,eACjC,MAAO,+BAIT,MADsB,wCACHF,KAAKL,GAEbA,EAASI,OAAS,GACpB,sCAGL3C,EAAS2C,OAAS,GACb,4BANA,oEAYL/B,EAAY,yCAAG,WAAOH,GAAP,kBAAAI,EAAA,yDACnBJ,EAAEK,mBAEI1P,EAAQsR,KAHK,uBAKjBvC,EAAS/O,GALQ,mBAMV,GANU,gCAUMqR,EAAO,CAC5B1B,UAAW,CAAEzE,MAAO,CAAEgG,WAAUE,QAAOxC,WAAUuC,eAXlC,cAUXvB,EAVW,OAajBrQ,aAAasQ,QAAQ,QAASD,EAASE,KAAKuB,OAAO/R,OAblC,UAcXmP,IAdW,QAejBF,EAAQwB,KAAKC,IAfI,kDAiBjBjB,EAAS,KAAMkB,cAAc,GAAG1O,SAjBf,0DAAH,sDAqBV2P,EAAwCrC,EAAxCqC,SAAUE,EAA8BvC,EAA9BuC,MAAOxC,EAAuBC,EAAvBD,SAAUuC,EAAatC,EAAbsC,SACnC,OACE,gBAAC,GAAD,CAAMlH,SAAS,KAAf,UACE,eAAC,GAAD,IAEA,gBAAC8G,GAAD,WACE,+BACE,eAACC,GAAD,CAASzJ,MAAM,QAAf,8DAGF,2EACA,wDACA,wEAGF,gBAAC,GAAD,WACE,eAAC6C,GAAD,CAASG,OAAO,KAAhB,SACE,eAAC6C,GAAD,+BAGF,wBAAM8C,SAAU,SAACb,GAAD,OAAOG,EAAaH,EAAGgC,IAAvC,UACE,eAACpG,GAAD,CACEzK,KAAK,OACL+O,KAAK,WACLV,OAAQqC,EACRd,SAAUhB,EACViB,YAAY,YACZlF,YAAY,UAEd,eAACf,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACE,eAACU,GAAD,CACEzK,KAAK,OACL+O,KAAK,QACLV,OAAQuC,EACRhB,SAAUhB,EACViB,YAAY,QACZlF,YAAY,YAGhB,eAACF,GAAD,CACEzK,KAAK,OACL+O,KAAK,WACLV,OAAQsC,EACRf,SAAUhB,EACViB,YAAY,WACZlF,YAAY,UAEd,eAACf,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACE,eAACU,GAAD,CACEzK,KAAK,WACL+O,KAAK,WACLV,OAAQD,EACRwB,SAAUhB,EACViB,YAAY,WACZlF,YAAY,YAGfnL,GACC,eAACoK,GAAD,CAASG,OAAO,KAAKF,IAAI,KAAzB,SACE,eAAC4C,GAAD,UAAQjN,MAGZ,eAACoK,GAAD,CAASC,IAAI,OACb,eAACQ,GAAD,CAAQtI,KAAK,QAAQkB,SAAUyL,EAA/B,iCC1KJlD,GAAOnC,IAAOC,IAAV,kDACK,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGhCiH,GAAYC,IAAOC,IAAV,4RAGO,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAC/B,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ/B,MACjB,SAACmH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAIlB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO/B,MAItB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvC+O,GAAO9H,IAAOE,EAAV,wEACK,SAACA,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAwFzB2L,GAjFQ,WACrB,MAA0BK,mBAAS,IAAnC,oBAAO0C,EAAP,KAAcQ,EAAd,KACA,EAA0BlD,mBAAS,IAAnC,oBAAO1O,EAAP,KAAc+O,EAAd,KACA,EAA8BL,mBAAS,IAAvC,oBAAOnN,EAAP,KAAgBsQ,EAAhB,KACA,EAA4C7C,aAAY5I,IAAxD,oBAAO0L,EAAP,KAA+B5C,EAA/B,KAA+BA,QAMzBM,EAAY,yCAAG,WAAOH,GAAP,gBAAAI,EAAA,yDACnBJ,EAAEK,iBAEiB,wJACH8B,KAAKC,OAAOL,GAAOM,eAJhB,uBAKjB3C,EAAS,gCALQ,iCASnBA,EAAS,IACT6C,EAAS,IAVU,mBAYME,EAAqB,CAC1CnC,UAAW,CAAEzE,MAAO,CAAEkG,YAbP,QAYXxB,EAZW,OAejBiC,EAAWjC,EAASE,KAAKiC,qBAAqBxQ,SAf7B,kDAiBjBwN,EAAS,KAAMkB,cAAc,GAAG1O,SAjBf,0DAAH,sDAqBlB,OAAIA,EAEA,eAAC,GAAD,UACE,eAAC,GAAD,UACE,eAAC6I,GAAD,CAASG,OAAO,KAAhB,SACE,eAAC6C,GAAD,UAAK7L,UAQb,gBAAC,GAAD,WACE,eAAC,GAAD,CAAMsP,MAAM,oBAEZ,gBAAC,GAAD,WACE,gBAACzG,GAAD,CAASG,OAAO,KAAhB,UACE,eAAC6C,GAAD,6BACA,eAACuE,GAAD,+HAKF,wBAAMzB,SAAU,SAACb,GAAD,OAAOG,EAAaH,EAAGyC,IAAvC,UACE,eAAC7G,GAAD,CAAWzK,KAAK,OAAO+O,KAAK,QAAQV,OAAQuC,EAAOhB,SAlDjC,SAACf,GACzBuC,EAASvC,EAAEC,OAAOzN,QAiDoEwO,YAAY,UAE3FrQ,GACC,eAACoK,GAAD,CAASG,OAAO,KAAKF,IAAI,KAAzB,SACE,eAAC4C,GAAD,UAAQjN,MAIZ,eAACoK,GAAD,CAASC,IAAI,OAEb,eAACQ,GAAD,CAAQpH,SAAUyL,EAAlB,6BAEA,eAAC9E,GAAD,CAASC,IAAI,KAAb,SACE,eAAC0C,GAAD,CAAGuD,GAAIN,GAAP,gDClGNhE,GAAOnC,IAAOC,IAAV,kDACK,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGhCiH,GAAYC,IAAOC,IAAV,2QAGO,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAC/B,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ/B,MACjB,SAACmH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAGlB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO/B,MAItB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAgH9B0L,iBAxGO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1C,EAA4BC,mBAAS,CAAEE,SAAU,GAAIoD,gBAAiB,KAAtE,oBAAOnD,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,oBAAO1O,EAAP,KAAc+O,EAAd,KACA,EAA0CL,mBAAS,IAAnD,oBAAOuD,EAAP,KAAsBC,EAAtB,KACMC,EAAM,IAAIC,gBAAgB5D,EAAS6D,QACnCjB,EAAQe,EAAInK,IAAI,SAChB1I,EAAQ6S,EAAInK,IAAI,SACtB,EAA4CsK,aAASjM,GAA6B,CAChFsJ,UAAW,CAAEyB,QAAO9R,WADdiT,EAAR,EAAQA,aAAqBC,EAA7B,EAAsBxS,MAGd4O,EAA8BC,EAA9BD,SAAUoD,EAAoBnD,EAApBmD,gBAClB,EAAsDhD,aAAY1I,IAAlE,oBAAOmM,EAAP,KAAiCC,EAAjC,KAAwBxD,QAElBE,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAM1N,EAAd,EAAcA,MACdiN,EAAU,6BAAKD,GAAN,mBAAeU,EAAO1N,MAG3B2N,EAAY,yCAAG,WAAOH,GAAP,gBAAAI,EAAA,yDACnBJ,EAAEK,iBAEGd,GAAaoD,EAHC,uBAIjBjD,EAAS,wCAJQ,+BAMRH,EAAS2C,OAAS,GANV,wBAOjBxC,EAAS,6BAPQ,8BASRH,IAAaoD,EATL,wBAUjBjD,EAAS,0BAVQ,kCAcnBA,EAAS,IACTmD,EAAiB,IAfE,oBAiBMO,EAAc,CACnC9C,UAAW,CAAEzE,MAAO,CAAEkG,QAAOxC,WAAUtP,YAlBxB,eAiBXsQ,EAjBW,OAoBjBrQ,aAAasQ,QAAQ,QAASD,EAASE,KAAK2C,cAAcnT,OApBzC,UAqBXmP,IArBW,QAsBjBF,EAAQwB,KAAKC,IAtBI,mDAwBjBkC,EAAiB,KAAMjC,cAAc,GAAG1O,SAxBvB,2DAAH,sDA4BlB,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAMsP,MAAM,mBAEZ,eAAC,GAAD,UACE,uCACG0B,GAAgB,eAAC1F,GAAD,CAASxC,IAAI,OAC7B4H,GAAiBO,EAChB,eAACpI,GAAD,CAASG,OAAO,KAAhB,SACE,eAAC0C,GAAD,UAAQgF,GAAgCO,EAAWvC,cAAc,GAAG1O,YAGtE,GAGF,eAAC6I,GAAD,CAASG,OAAO,KAAhB,SACE,eAAC6C,GAAD,+BAGF,wBAAM8C,SAAU,SAACb,GAAD,OAAOG,EAAaH,EAAGoD,IAAvC,UACE,eAACxH,GAAD,CACEzK,KAAK,WACL+O,KAAK,WACLV,OAAQD,EACRwB,SAAUhB,EACViB,YAAY,aAGd,eAACjG,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACE,eAACU,GAAD,CACEzK,KAAK,WACL+O,KAAK,kBACLV,OAAQmD,EACR5B,SAAUhB,EACViB,YAAY,uBAIfrQ,GACC,eAACoK,GAAD,CAASG,OAAO,KAAKF,IAAI,KAAzB,SACE,eAAC4C,GAAD,UAAQjN,MAIZ,eAAC6K,GAAD,CAAQpH,SAAUiP,EAAlB,0CCjIG,OAA0B,wCCYnC1G,GAAOnC,IAAOC,IAAV,+GACU6I,IAKd/I,GAAYC,IAAOC,IAAV,uPAIF,SAACC,GAAD,OAAOA,EAAE9E,MAAMH,OAAOjC,MAKZ,SAACkH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvCgQ,GAAQ/I,IAAOC,IAAV,iHAGY,SAACC,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAiC9BiQ,GAzBI,SAAC,GAAiB,IAAfpE,EAAc,EAAdA,QACpB,OACE,gBAAC,GAAD,WACE,eAAC9D,GAAD,CAASC,aAAa,QAEtB,gBAAC,GAAD,WACE,eAAC,GAAD,CAAY6D,QAASA,IAErB,eAACmE,GAAD,UACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOE,OAAK,EAACC,KAAM/C,GAAagD,OAAQ,kBAAM,eAAC,GAAD,CAAQvE,QAASA,OAC/D,eAAC,KAAD,CAAOqE,OAAK,EAACC,KAAM/C,GAAwBiD,UAAW5E,KACtD,eAAC,KAAD,CAAOyE,OAAK,EAACC,KR/CK,kBQ+CwBC,OAAQ,kBAAM,eAAC,GAAD,CAAevE,QAASA,OAChF,eAAC,KAAD,CAAU6B,GAAIN,iBC9CpBhE,GAAOnC,IAAOC,IAAV,kKAIM,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MACxB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAOhCuQ,GAAW,SAAC,GAAD,IAAG3R,EAAH,EAAGA,QAAS4R,EAAZ,EAAYA,iBAAZ,OACf,gBAAC,GAAD,WACE,eAAC/F,GAAD,oBAEA,eAAChD,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACE,eAAC+C,GAAD,UAAK/L,MAGP,eAAC,GAAD,CAAc+F,MAAM,QAEpB,eAAC8C,GAAD,CAASG,OAAO,OAEf4I,GAAoB,eAACpG,GAAD,CAAGuD,GAAIN,GAAP,sCASzBkD,GAASxG,aAAe,CACtBnL,QAAS,qDACT4R,kBAAkB,GAGLD,I,mPAAAA,MC1CTlH,GAAOnC,IAAOC,IAAV,6HACC,SAACC,GAAD,OAAQA,EAAExH,KAAF,UAAYwH,EAAExH,KAAd,MAAyB,UAChC,SAACwH,GAAD,OAAQA,EAAExH,KAAF,UAAYwH,EAAExH,KAAd,MAAyB,UAMvC6Q,GAAQvJ,IAAOwJ,IAAV,sFAkBIC,GATA,SAAC,GAAD,IAAG/Q,EAAH,EAAGA,KAAMgR,EAAT,EAASA,MAAT,OACb,eAAC,GAAD,CAAMhR,KAAMA,EAAZ,SAAmBgR,EAAQ,eAAC,GAAD,CAAOC,IAAKD,IAAY,eAAC,GAAD,CAAUjM,MAAO/E,EAAI,UAAMA,EAAN,MAAiB,Q,mBClBrFyJ,GAAOnC,IAAOC,IAAV,uFAGG,SAACC,GAAD,OAAOA,EAAE9E,MAAMH,OAAOhC,MAG7B2Q,GAAgB5J,IAAOC,IAAV,mFAMb4J,GAAQ7J,IAAOqB,MAAV,mUAKQ,SAACnB,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOjC,MACvB,SAACmH,GAAD,OAAQA,EAAE4J,SAAW5J,EAAE9E,MAAMN,QAAQjC,GAAKqH,EAAE9E,MAAMN,QAAQ9B,MACzD,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAC/B,SAACkH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK4C,QACvB,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAClB,SAACqH,GAAD,OAAQA,EAAE6J,gBAAkB7J,EAAE9E,MAAMlC,OAAOgH,EAAE6J,iBAAmB7J,EAAE9E,MAAMlC,OAAOe,KAAK,QAK3F,SAACiG,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAwD3B+P,GAhDK,SAAC,GAUd,IATLzD,EASI,EATJA,SACA0D,EAQI,EARJA,QACAjS,EAOI,EAPJA,MACAkS,EAMI,EANJA,SACAH,EAKI,EALJA,gBACAvD,EAII,EAJJA,YACAsD,EAGI,EAHJA,SACAhS,EAEI,EAFJA,SACAwO,EACI,EADJA,UAEA,OACE,gBAAC,GAAD,YACIwD,GACA,eAACF,GAAD,UACE,eAAC,GAAD,MAIJ,eAACC,GAAD,CACEtD,SAAUA,EACV0D,QAASA,EACTjS,MAAOA,EACPmS,IAAKD,EACLH,gBAAiBA,EACjBpT,KAAK,OACL6P,YAAaA,EACbsD,SAAUA,EACVxD,UAAWA,IAGZxO,MC7DDqK,GAAOnC,IAAOC,IAAV,mNAOK,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACxB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ9B,MACjB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAGtCgR,GAAUpK,YAAOkD,GAAPlD,CAAH,kGAIW,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAI7CoQ,GAAOrK,IAAOC,IAAV,kIAKG,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAG9ByR,GAAOtK,IAAOC,IAAV,oDACO,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGtC8R,GAAWvK,IAAOC,IAAV,kDACC,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAGlC4R,GAAiBxK,IAAOC,IAAV,sFAEP,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MACzB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK4C,QA6CvBiR,GAvCM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC7B,OAAID,EAAMhD,OAAS,EAEf,eAAC,GAAD,UACE,eAAC8C,GAAD,mCAMJ,eAAC,GAAD,UACGE,EAAME,KAAI,SAACvT,GAAD,OACT,eAAC+S,GAAD,CAEE3D,GACEkE,EACIE,aAAa1E,GAAiB,CAAE2E,OAAQzT,EAAK0T,KAC7CF,aAAa1E,GAAqB,CAAEmB,SAAUjQ,EAAKiQ,WAL3D,SAQE,gBAAC+C,GAAD,WACE,eAAC,GAAD,CAAQX,MAAOrS,EAAKqS,MAAOhR,KAAM,KAEjC,gBAAC6H,GAAD,CAASI,KAAK,KAAd,UACE,eAAC2J,GAAD,UAAOjT,EAAKgQ,WACZ,gBAACkD,GAAD,eAAYlT,EAAKiQ,mBAZhBjQ,EAAK0T,UC7DPC,GAAkB,SAACb,EAAKc,GACnC1I,qBAAU,WAGR,OAFA2I,SAASC,iBAAiB,QAASC,GAAoB,GAEhD,WACLF,SAASG,oBAAoB,QAASD,GAAoB,OAI9D,IAAMA,EAAqB,SAACE,GACtBnB,EAAIoB,UAAYpB,EAAIoB,QAAQC,SAASF,EAAM7F,SAC7CwF,MCLAQ,GAAgBzL,YAAOgD,GAAPhD,CAAH,oFAuFJ0L,GA9EA,SAAC,GAA4F,IAA1F/G,EAAyF,EAAzFA,SAAUmF,EAA+E,EAA/EA,SAAUa,EAAqE,EAArEA,WAAYZ,EAAyD,EAAzDA,gBAAiBvD,EAAwC,EAAxCA,YAAaF,EAA2B,EAA3BA,UAAcqF,EAAa,iGACnGC,EAASC,eAEf,EAAoDhH,oBAAS,GAA7D,oBAAOiH,EAAP,KAA2BC,EAA3B,KACA,EAAsClH,mBAAS,IAA/C,oBAAOmH,EAAP,KAAoBC,EAApB,KACA,EAA0BpH,mBAAS,IAAnC,oBAAO6F,EAAP,KAAcwB,EAAd,KACA,EAA8BrH,oBAAS,GAAvC,oBAAOQ,EAAP,KAAgB8G,EAAhB,KAGMjC,EAAWkC,iBAAO,MACxBpB,GAAgBd,GAAU,kBAAM6B,GAAsB,MAGtD,IAAMM,EC/BmB,SAACrU,EAAOsU,GACjC,MAA4CzH,mBAAS7M,GAArD,oBAAOuU,EAAP,KAAuBC,EAAvB,KAYA,OAVAjK,qBAAU,WACR,IAAM0I,EAAUxI,YAAW,WACzB+J,EAAkBxU,KACjBsU,GAEH,OAAO,WACL5J,aAAauI,MAEd,CAACjT,EAAOsU,IAEJC,EDkBqBE,CAAYT,EAAa,KAErDzJ,qBAAU,WAER0J,EAAe,MACd,CAACtH,EAASW,WAEb/C,qBAAU,WAgBR,OAFA8J,EAbY,yCAAG,+BAAAzG,EAAA,sEACUgG,EAAOc,MAAM,CAClCA,MAAOvQ,GACP2J,UAAW,CAAEkG,YAAaK,KAHf,gBACLpG,EADK,EACLA,KAKRiG,EAASjG,EAAK0G,aACdR,GAAW,GAGXJ,EADiD,KAAxBM,GATZ,2CAAH,oDAaU7D,GAAWuD,GAAsB,GAEhD,kBAAMI,GAAW,MACvB,CAACE,EAAqBT,IAEzB,IAAMgB,EAAiB,yCAAG,WAAOpH,GAAP,gBAAAI,EAAA,sDAElB5N,EAAQwN,EAAEC,OAAOzN,MAAM6U,QAAQ,QAAS,IAC9CZ,EAAejU,GACXA,GACFmU,GAAW,GALW,2CAAH,sDAWvB,OACE,gBAAC,GAAD,2BACE5F,SAAUqG,EACV3C,QALqB,kBAAM+B,GAAeD,GAAsB,IAMhE/T,MAAOgU,EACP9B,SAAUA,EACV1D,YAAaA,EACbsD,SAAUA,EACVC,gBAAiBA,EACjBzD,UAAWA,GACPqF,GATN,cAWGtG,GAAW,eAACoG,GAAD,CAAe/S,KAAK,QAE/BoT,GAAsB,eAAC,GAAD,CAAcpB,MAAOA,EAAOC,WAAYA,SElDtDlG,iBAtBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACXkH,EAASC,eACf,EAAqB3T,KAAZoK,EAAT,qBASA,OACE,eAACtB,GAAD,CAAQpK,MAAI,EAACgM,QARO,WACpBN,EAAS,CAAE3L,KAAMQ,KACjBzB,aAAaoX,WAAW,SACxBlB,EAAOmB,aACPrI,EAAQwB,KAAKC,KAIb,yBCfEhE,GAAOnC,IAAOC,IAAV,8LAIO,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ/B,MAG3B,SAACmH,GAAD,OAAOA,EAAE9E,MAAMH,OAAOhC,MACnB,SAACiH,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ9B,MAGjCkU,GAAM1J,YAAH,8KAGI,SAACpD,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAAM,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ7B,MAGzC,SAACiH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QACtC,SAACiG,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAIlCwJ,GAAOnD,YAAOkD,GAAPlD,CAAH,sCACNgN,IAGE3C,GAAOrK,IAAOC,IAAV,sCACN+M,IA8BWC,GAxBY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,EAAmBhV,KAAVP,EAAT,qBAASA,KAET,OACE,gBAAC,GAAD,CAAMwS,IAAK+C,EAAX,UACE,eAAC/J,GAAD,CACEsD,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAU3P,EAAKN,KAAKiQ,WAFxB,wBAQA,eAAC,GAAD,UACE,eAAC,GAAD,UCxCF6F,GAAmBnN,IAAOC,IAAV,mRAKT,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MACP,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC3C,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAClB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAOtCgU,GAAWpN,IAAOC,IAAV,iGAMRqK,GAAOtK,IAAOC,IAAV,oDACO,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGtC4U,GAASrN,IAAOC,IAAV,qKAMK,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAGlCyU,GAAYtN,IAAOC,IAAV,qFAMTsJ,GAAQvJ,IAAOwJ,IAAV,yGAsFI+D,GA5EM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACpC,EAAmBvV,KAAVP,EAAT,qBAASA,KACHiU,EAASC,eACT1B,EAAMuD,IAAMtB,OAAO,MAsBzB,OApBApB,GAAgBb,EAAKsD,GAErBlL,qBAAU,YACoB,yCAAG,uBAAAqD,EAAA,+EAErBgG,EAAO+B,OAAO,CAClBC,SAAUtQ,GACVwI,UAAW,CACTzE,MAAO,CACLyJ,OAAQnT,EAAKN,KAAK0T,KAGtB8C,eAAgB,iBAAM,CAAC,CAAEnB,MAAOzQ,QATP,8GAAH,qDAc5B6R,KACC,CAACnW,EAAKN,KAAK0T,GAAIpT,EAAKN,KAAK0W,iBAAiBrG,OAAQkE,IAEhD4B,EAAaQ,QAAWR,EAAaS,MAAST,EAAaU,QAK9D,gBAACf,GAAD,CAAkBhD,IAAKA,EAAvB,UACE,eAACjH,GAAD,CACEuD,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAUkG,EAAaW,OAAO7G,WAFlC,SAKE,gBAAC8F,GAAD,WACE,eAAC,GAAD,CAAQ1D,MAAO8D,EAAaW,OAAOzE,MAAOhR,KAAM,KAEhD,eAAC6H,GAAD,CAASI,KAAK,OAEd,eAAC,GAAD,UAAO6M,EAAaW,OAAO9G,gBAI9BmG,EAAaQ,QAAU,eAACX,GAAD,oCAEvBG,EAAaS,MACZ,gBAACZ,GAAD,8BAEE,eAACnK,GAAD,CAAGuD,GAAIoE,aAAa1E,GAAa,CAAE4E,GAAIyC,EAAaS,KAAKG,KAAKrD,KAA9D,SACE,eAACuC,GAAD,UACE,eAAC,GAAD,CAAO3D,IAAK6D,EAAaS,KAAKG,KAAK1E,eAM1C8D,EAAaU,SACZ,gBAACb,GAAD,qCAEE,eAACnK,GAAD,CAAGuD,GAAIoE,aAAa1E,GAAa,CAAE4E,GAAIyC,EAAaU,QAAQE,KAAKrD,KAAjE,SACE,eAACuC,GAAD,UACE,eAAC,GAAD,CAAO3D,IAAK6D,EAAaU,QAAQE,KAAK1E,kBArCzC,MCzFLvH,GAAOnC,IAAOC,IAAV,qRAQG,SAACC,GAAD,OAAOA,EAAE9E,MAAMH,OAAOhC,MACnB,SAACiH,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ9B,MAEhB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO/B,MAEhC,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAI9BqV,GAAQrO,IAAOC,IAAV,gDACE,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MA0BrByV,GApBoB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,gBAAiBC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACnE,OACE,eAAC,GAAD,CAAMtE,IAAKoE,EAAX,SACIC,EAAa9G,OAGb8G,EAAa5D,KAAI,SAAC4C,GAAD,OACf,eAAC,GAAD,CAAoCA,aAAcA,EAAcC,MAAOgB,GAApDjB,EAAazC,OAHlC,eAAC,GAAD,uCC7BK2D,GAAU,SAACC,GACtB,IAAMC,EAAO,IAAIC,KAAKC,SAASH,IAEzBI,EAAUC,KAAKC,OAAO,IAAIJ,KAASD,GAAQ,KAC7CM,EAAWF,KAAKC,MAAMF,EAAU,SAEpC,OAAIG,EAAW,EACNA,EAAW,UAGpBA,EAAWF,KAAKC,MAAMF,EAAU,SACjB,EACNG,EAAW,WAGpBA,EAAWF,KAAKC,MAAMF,EAAU,QACjB,EACNG,EAAW,SAGpBA,EAAWF,KAAKC,MAAMF,EAAU,OACjB,EACNG,EAAW,UAGpBA,EAAWF,KAAKC,MAAMF,EAAU,KACjB,EACNG,EAAW,QAGbF,KAAKC,MAAMF,GAAW,YAQlBI,GAAc,SAACR,GAC1B,IAAMC,EAAO,IAAIC,KAAKC,SAASH,IAGzBS,EAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExER,EAAKS,WAAa,GACjCC,EAAMV,EAAKW,SACXC,EAAOZ,EAAKa,cACZC,EAAOd,EAAKe,eAAe,QAAS,CACxCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGV,MAAM,GAAN,OAAUV,EAAV,YAAmBE,EAAnB,aAA2BE,EAA3B,YAAmCE,IC5C/BvN,GAAOnC,IAAOC,IAAV,sRAQG,SAACC,GAAD,OAAOA,EAAE9E,MAAMH,OAAOhC,MACnB,SAACiH,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ9B,MAEhB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO/B,MAMvCqO,GAAUnH,IAAOC,IAAV,oJAKA,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAAM,SAACqH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAG3DsK,GAAOnD,YAAOkD,GAAPlD,CAAH,uIACC,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAC1B,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAG3B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAKrCuW,GAAO/P,YAAOgQ,KAAPhQ,CAAH,6RAEG,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAAM,SAACqH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAMtD,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WACZ,SAAC2G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAG/B,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAI7CgW,GAAOjQ,IAAOC,IAAV,uKAEK,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAOhCqX,GAAWlQ,IAAOC,IAAV,2EAKRkQ,GAAcnQ,IAAOC,IAAV,iHACD,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OACxB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAC7B,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAIhCmW,GAAYpQ,IAAOC,IAAV,iEACA,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKC,QAC7B,SAACuH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAuCvB0W,GAjCe,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAY9B,EAAmB,EAAnBA,aAC3C,OACE,gBAAC,GAAD,CAAMrE,IAAKmG,EAAX,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAM7J,GAAIoE,aAAa1E,GAAiB,CAAE2E,OAAQ3E,KAAlD,2BAGDqI,EAAa5D,KAAI,SAACvT,GAAD,OAChB,gBAAC0Y,GAAD,CAAoBtJ,GAAIoE,aAAa1E,GAAiB,CAAE2E,OAAQzT,EAAK0T,KAArE,UACE,gCACE,eAAC,GAAD,CAAQrB,MAAOrS,EAAKqS,MAAOhR,KAAM,OAGnC,gBAACuX,GAAD,WACE,iCACE,eAACC,GAAD,UAAW7Y,EAAKgQ,WAEhB,eAAC8I,GAAD,UAAc9Y,EAAKkZ,iBAGrB,eAACH,GAAD,UAAY1B,GAAQrX,EAAKmZ,6BAZlBnZ,EAAK0T,WCjET0F,GAzBS,SAAC,GAAyF,IAAvFH,EAAsF,EAAtFA,WAAY/B,EAA0E,EAA1EA,gBAAiBrB,EAAyD,EAAzDA,QAASwD,EAAgD,EAAhDA,aAAclC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cAa3F,OAAOiC,EAZW,CAChBC,KAAM,eAAC,GAAD,CAAoBzD,QAASA,IACnC0D,aACE,eAAC,GAAD,CACErC,gBAAiBA,EACjBC,aAAcA,EACdC,cAAeA,IAGnBoC,QAAS,eAAC,GAAD,CAAuBP,WAAYA,EAAY9B,aAAcA,KAGxCkC,GAAgB,MCbrCI,GAAgB,GCYvB3O,GAAOnC,YAAOD,GAAPC,CAAH,oNAGY,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAC/B,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMH,OAAOlC,KACvB+X,IACiB,SAAC5Q,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAEnC,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAC9B,SAACmH,GAAD,OAAOA,EAAE9E,MAAMH,OAAOlC,MAI/BgY,GAAU/Q,IAAOC,IAAV,oQAMD6Q,IAIW,SAAC5Q,GAAD,OAAO4O,SAAS5O,EAAE9E,MAAMP,OAAO7B,GAAI,IAAM,GAAK,QACxD,SAACkH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAI7BoU,GAAWpN,IAAOC,IAAV,iGAMR+Q,GAAYhR,IAAOC,IAAV,2GAGQ,SAACC,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvC4N,GAAO3G,YAAOkD,GAAPlD,CAAH,sMAEC,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QACxB,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAC7B,SAACyH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKI,MAG3B,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGpB,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvCkY,GAAYjR,IAAOC,IAAV,wHAOTiR,GAAW5N,YAAH,gUAQH,SAACpD,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SACX,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAO/C,MAAMqD,QACnC,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAOlCuY,GAAoBnR,IAAOoR,KAAV,sDACnBF,IAIEG,GAAerR,IAAOoR,KAAV,uDACdF,IA4GWzM,iBArGA,SAAC,GAAiC,IAA/BE,EAA8B,EAA9BA,SAAU2M,EAAoB,EAApBA,cAC1B,EAAmBpZ,KAAVP,EAAT,qBAASA,KAET,EAAwCkN,mBAAS,MAAjD,oBAAO6L,EAAP,KAAqBa,EAArB,KACA,EAAwC1M,mBAAS,IAAjD,oBAAO2J,EAAP,KAAqBgD,EAArB,KAEMlB,EAAalE,iBAAO,MACpBmC,EAAkBnC,iBAAO,MACzBc,EAAUd,iBAAO,MAEjBqF,EAAsB,WACtBf,GACFjC,KAIJzD,GAAgBsF,EAAYmB,GAC5BzG,GAAgBuD,EAAiBkD,GACjCzG,GAAgBkC,EAASuE,GAEzB,IAAMhD,EAAgB,WACpB8C,EAAgB,MAChBC,EAAgB,KAGlBjP,qBAAU,WACR,OAAO,kBAAMkM,OACZ,CAAC9J,EAASW,WAEb,IAAMoM,EAAkB,SAACC,GACnBjB,EACFjC,KAEqB,iBAAjBkD,EACFH,EAAgB7Z,EAAKN,KAAK0W,kBACA,YAAjB4D,GACTH,EAAgB7Z,EAAKN,KAAKua,kBAG5BL,EAAgBI,KAIpB,OACE,eAAC,GAAD,UACE,gBAACZ,GAAD,WACE,gBAAC,GAAD,WACE,eAACC,GAAD,CAAWpO,QAAS0O,EAApB,SACE,eAAC,GAAD,MAGF,eAAC,GAAD,CAAM7K,GAAIN,GAAV,SAAwBW,GAASpB,OAEjC,eAACnF,GAAD,CAASI,KAAK,KAAKF,MAAM,KAAzB,SACE,eAAC,GAAD,CAAQkE,SAAUA,EAAU6B,YAAY,gBAI5C,gBAACyK,GAAD,WACE,eAAC1Q,GAAD,CAASE,MAAM,KAAf,SACE,gBAACO,GAAD,CAAQE,OAAK,EAAC0B,QAAS,kBAAM8O,EAAgB,YAA7C,UACG/Z,EAAKN,KAAKua,iBAAiBlK,OAAS,GACnC,eAAC2J,GAAD,UAAe1Z,EAAKN,KAAKua,iBAAiBlK,SAG5C,eAAC,GAAD,SAIJ,eAACnH,GAAD,CAASE,MAAM,KAAf,SACE,gBAACO,GAAD,CAAQE,OAAK,EAAC0B,QAAS,kBAAM8O,EAAgB,iBAA7C,UACG/Z,EAAKN,KAAK0W,iBAAiBrG,OAAS,GACnC,eAACyJ,GAAD,UAAoBxZ,EAAKN,KAAK0W,iBAAiBrG,SAEjD,eAAC,GAAD,SAIJ,eAAC1G,GAAD,CAAQE,OAAK,EAAC0B,QAAS,kBAAM8O,EAAgB,SAA7C,SACE,eAAC,GAAD,CAAQhI,MAAO/R,EAAKN,KAAKqS,aAI7B,eAAC,GAAD,CACE4G,WAAYA,EACZ/B,gBAAiBA,EACjBrB,QAASA,EACTwD,aAAcA,EACdlC,aAAcA,EACdC,cAAeA,YCrMnBtL,GAAOnD,YAAOgQ,KAAPhQ,CAAH,6UAGC,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WAEpB,SAAC2G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAI5B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QACnB,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAGrC,SAACiG,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGnB,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MACrB,SAACmH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAK1CyY,GAAO7R,IAAO8R,GAAV,iHAIK,SAAC5R,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGlCkZ,GAAW/R,IAAOgS,GAAV,iGAMR1H,GAAOtK,IAAOC,IAAV,oDACO,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MA+CzBmZ,GAzCI,WACjB,OACE,gBAACJ,GAAD,WACE,eAAC,GAAD,CAAM5I,OAAK,EAACiJ,gBAAgB,WAAWzL,GAAIN,GAA3C,SACE,gBAAC4L,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,wBAIJ,eAAC,GAAD,CAAM9I,OAAK,EAACiJ,gBAAgB,WAAWzL,GAAIN,GAA3C,SACE,gBAAC4L,GAAD,WACE,eAAC,GAAD,CAAatU,MAAO,KACpB,eAAC,GAAD,2BAIJ,eAAC,GAAD,CAAMwL,OAAK,EAACiJ,gBAAgB,WAAWzL,GAAIN,GAA3C,SACE,gBAAC4L,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,0BAIJ,eAAC,GAAD,CAAM9I,OAAK,EAACiJ,gBAAgB,WAAWzL,GAAIN,GAA3C,SACE,gBAAC4L,GAAD,WACE,eAAC,GAAD,CAAkBtU,MAAO,KACzB,eAAC,GAAD,iCAIJ,eAAC,GAAD,CAAMwL,OAAK,EAACiJ,gBAAgB,WAAWzL,GAAIoE,aAAa1E,GAAiB,CAAE2E,OAAQ3E,KAAnF,SACE,gBAAC4L,GAAD,WACE,eAAC,GAAD,CAActU,MAAO,KACrB,eAAC,GAAD,gCCrEJ0E,GAAOnC,IAAOC,IAAV,ojBAIO6Q,IHbmB,KGiBrB,SAAC5Q,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAC3B,SAACsH,GAAD,OAAOA,EAAE9E,MAAMH,OAAOnC,MACb,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAChB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAElC,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAI1B,SAACmH,GAAD,OAAQA,EAAEiS,OAAS,EAAX,WH5BU,IG4BV,QH5BU,KGoCd,SAACjS,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAC1B,SAACmH,GAAD,OAAQA,EAAEiS,OAAS,EAAX,WHnCS,IGmCT,SAIrBpC,GAAO/P,YAAOgQ,KAAPhQ,CAAH,mTAKG,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAKZ,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAE1B,SAACiG,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MACrB,SAACmH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAK1C8W,GAAWlQ,IAAOC,IAAV,mEACG,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QACjC,SAACyH,GAAD,OAAQA,EAAEkS,OAASlS,EAAE9E,MAAMlC,OAAOK,QAAQC,KAAO0G,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WAiCjEkL,iBA3BC,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,SAAUwN,EAAyB,EAAzBA,OAAQE,EAAiB,EAAjBA,WACnC,EAAmBna,KAAVP,EAAT,qBAASA,KAEH2a,EAAyB3a,EAAKN,KAAKiQ,WAAa3C,EAASW,SAASiN,UAAU,GAElF,OACE,gBAAC,GAAD,CAAMJ,OAAQA,EAAQhI,IAAKkI,EAA3B,UACE,gBAAC,GAAD,CAAMpJ,OAAK,EAACxC,GAAIoE,aAAa1E,GAAqB,CAAEmB,SAAU3P,EAAKN,KAAKiQ,WAAa4K,gBAAgB,WAArG,UACE,eAAC,GAAD,CAAQxI,MAAO/R,EAAKN,KAAKqS,MAAOhR,KAAM,KAEtC,eAAC6H,GAAD,CAASI,KAAK,MAAd,SACE,eAAC,GAAD,CAAUyR,OAAQE,EAAlB,SAA2C3a,EAAKN,KAAKgQ,gBAIzD,eAAC9G,GAAD,CAASC,IAAI,OAEb,eAAC,GAAD,UCpEA2B,GAAOnC,IAAOC,IAAV,yRAEY,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SACtB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,OAE1CsX,IJjB6B,KIqBzB,SAAC5Q,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACjB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAElB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvC8Y,GAAO7R,IAAO8R,GAAV,mEAEO,SAAC5R,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAGlCkZ,GAAW/R,IAAOgS,GAAV,0KAIK,SAAC9R,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAOpCoX,GAAWlQ,IAAOC,IAAV,mEACG,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QACjC,SAACyH,GAAD,OAAQA,EAAEkS,OAASlS,EAAE9E,MAAMlC,OAAOK,QAAQC,KAAO0G,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WAG1EgR,GAAWvK,IAAOC,IAAV,8CACH,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAKiD,QAsEvB2Y,GAhES,SAAC,GAAkB,IAAhBlN,EAAe,EAAfA,SACzB,EAAmBpN,KAAVP,EAAT,qBAASA,KACT,EAA0B8Q,aAAS/L,GAAkB,CACnDoJ,UAAW,CAAEgF,OAAQnT,EAAKN,KAAK0T,MADzB9E,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAQd,OAJ4BoN,aAAUnN,EAAU,CAC9C4D,KAAM,CAAC/C,GAAiBA,GAAeA,GAAgBA,MAGzB,KAE5Bd,EAEA,eAAC,GAAD,UACE,eAACrC,GAAD,OAKDiD,EAAKyM,cAAchL,OAAS,EACxB,KAIP,gBAAC,GAAD,WACE,eAAC/D,GAAD,kCAEA,eAAC,GAAD,UACGsC,EAAKyM,cAAc9H,KAAI,SAACvT,GACvB,OAAKA,EAAKiQ,SAGR,gBAAC,GAAD,WACE,eAACpE,GAAD,CACEuD,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAUjQ,EAAKiQ,WAFnB,SAKE,eAAC,GAAD,CAAQoC,MAAOrS,EAAKqS,UAGtB,eAACnJ,GAAD,CAASI,KAAK,KAAd,SACE,gBAACuC,GAAD,CACEuD,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAUjQ,EAAKiQ,WAFnB,UAKE,eAAC,GAAD,UAAWjQ,EAAKgQ,WAChB,gBAAC,GAAD,eAAYhQ,EAAKiQ,mBAhBRjQ,EAAK0T,IAHK,cC1FxB4H,GAAiBlX,aAAH,oIAWdmX,GAAiBnX,aAAH,oICZdoX,GACL,OADKA,GAEH,SAFGA,GAGF,UCAEC,GAAmB,WAC9B,MAAmB5a,KAAVP,EAAT,qBAASA,KAEHiU,EAASC,eAKT8B,EAAM,yCAAG,WAAOC,EAAU9H,GAAjB,UAAAF,EAAA,+EAEEgG,EAAO+B,OAAO,CACzBC,WACA9H,UAAW,CAAEzE,MAAM,gBAAMyE,MAJhB,wEAOXiN,QAAQ5c,MAAM,sCAAd,MAPW,wDAAH,wDAyDZ,MAAO,CAAE6c,OA3CM,SAAC,GAA4D,IAA1D3b,EAAyD,EAAzDA,KAAM4b,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,mBAChD,OAAOxF,EAAOxQ,GAAqB,CACjCiW,SAAUzb,EAAKN,KAAK0T,GACpBD,OAAQzT,EAAK0T,GACbkI,SACAC,mBACAC,wBAqCaE,OA9BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OAAwB3F,EAAOvQ,GAAqB,CAAE2N,GAAIuI,KA8BhDC,OAzBV,SAAC,GAAqE,IAAnElc,EAAkE,EAAlEA,KAAM4b,EAA4D,EAA5DA,OAAQC,EAAoD,EAApDA,iBAAkBC,EAAkC,EAAlCA,mBAAoBK,EAAc,EAAdA,QAC9D7c,EAAOuc,EAAiBrL,cACxB4L,EAAapc,EAAKqc,cAAcC,MAAK,SAACC,GAAD,OAAOA,EAAEjd,IAAS6c,GAAWI,EAAEjd,GAAMoU,KAAOyI,EAAQzI,MACzFuI,EAAiBG,EAAaA,EAAW1I,GAAK,KAC9C/V,EAAYse,EAAiB,SAAW,SACxCO,EAAU,CACdb,OAAQ,CACNpF,SAAUzQ,GACV2I,UAAW,CACTsN,SAAUzb,EAAKN,KAAK0T,GACpBD,OAAQzT,EAAK0T,GACbkI,SACAC,mBACAC,uBAGJW,OAAQ,CACNlG,SAAUxQ,GACV0I,UAAW,CAAEiF,GAAIuI,KAIrB,OAAO3F,EAAOkG,EAAQ7e,GAAW4Y,SAAUiG,EAAQ7e,GAAW8Q,cCpD5DsB,GAAOpH,IAAO0B,KAAV,qIAoFKqS,GA1EO,SAAC,GAAqB,IAAnB3F,EAAkB,EAAlBA,KAAM4F,EAAY,EAAZA,MAC7B,EAAmB9b,KAAVP,EAAT,qBAASA,KACH6V,EAAesF,KACrB,EAA8BjO,mBAAS,IAAvC,oBAAOqJ,EAAP,KAAgB+F,EAAhB,KACMC,EAAW9H,iBAAO,MAClB+H,EAAa/H,kBAAO,GAC1B,EAAqCjH,aAAYwN,GAAgB,CAC/D9E,eAAgB,CACd,CAAEnB,MAAOhR,GAAoBoK,UAAW,CAAEgF,OAAQnT,EAAKN,KAAK0T,KAC5D,CAAE2B,MAAO3Q,GAAU+J,UAAW,CAAEwB,SAAU3P,EAAKN,KAAKiQ,WACpD,CAAEoF,MAAOzQ,IACT,CAAEyQ,MAAO/Q,GAAWmK,UAAW,CAAEsO,WAAYzc,EAAKN,KAAK0T,KACvD,CAAE2B,MAAO9Q,GAAUkK,UAAW,CAAEiF,GAAIqD,EAAKrD,QAN7C,oBAAOsJ,EAAP,KAAwBhP,EAAxB,KAAwBA,QAUxB9C,qBAAU,WACRyR,GAASG,EAAW5I,QAAQyI,UAC3B,CAACA,IAEJ,IAAMrO,EAAY,yCAAG,WAAOH,GAAP,kBAAAI,EAAA,6DACnBJ,EAAEK,iBADiB,SAEIwO,EAAc,CACnCvO,UAAW,CAAEzE,MAAO,CAAE6M,UAASC,OAAQxW,EAAKN,KAAK0T,GAAIkI,OAAQ7E,EAAKrD,OAHjD,gBAEX9E,EAFW,EAEXA,KAGRgO,EAAW,IAGPtc,EAAKN,KAAK0T,KAAOqD,EAAKD,OAAOpD,IAC/ByC,EAAawF,OAAO,CAClB3b,KAAM+W,EAAKD,OACX8E,OAAQ7E,EAAKrD,GACbmI,iBAAkBL,GAClBM,mBAAoBlN,EAAKoO,cAActJ,KAbxB,2CAAH,sDAyBlB,OACE,gBAAC,GAAD,CAAM1E,SAAUV,EAAhB,UACE,eAACpE,GAAD,CACEgF,SAAU,SAACf,GAAD,OAAOyO,EAAWzO,EAAEC,OAAOzN,QACrCA,MAAOkW,EACP1H,YAAY,mBACZ8N,UAbe,SAAC9O,GACF,KAAdA,EAAE+O,UACJ/O,EAAEK,iBACFqO,EAAS3I,QAAQiJ,UAWfrK,IAAKgK,IAGP,eAACnT,GAAD,CACErK,KAAK,SACL+G,MAAOwQ,EAAU,eAAiB,YAClC5V,OAAO,OACP1B,MAAI,EACJuT,IAAK+J,EACLta,UAAWsU,GAAW7I,EANxB,sBC7EOoP,GAAgBhZ,aAAH,kIAWbiZ,GAAgBjZ,aAAH,kICApBuF,GAAShB,IAAOiB,OAAV,wUAIG,SAACf,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACvB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAEzB,SAACyH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAC9B,SAACoH,GAAD,OAAQA,EAAEyU,aAAezU,EAAE9E,MAAMlC,OAAOE,SACtC,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAAO,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MACtD,SAACqH,GAAD,OAAQA,EAAEyU,YAAF,oBAA6BzU,EAAE9E,MAAMlC,OAAOY,OAAON,MAAS,OAC1D,SAAC0G,GAAD,OAAQA,EAAEyU,YAAc,cAAgBzU,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGjE,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAOL,QAoElCmb,GA7DA,SAAC,GAAc,IAAZvd,EAAW,EAAXA,KAChB,EAA8BwN,oBAAS,GAAvC,oBAAOQ,EAAP,KAAgB8G,EAAhB,KACA,EAAmBjU,KAAVP,EAAT,qBAASA,KACH6V,EAAesF,KACf6B,EAAchd,EAAKN,KAAKwd,UAAUlB,MAAK,SAACmB,GAAD,OAAOA,EAAEzd,OAASA,EAAK0T,MAE9D/V,EAAY2f,EAAc,SAAW,SACrCd,EAAU,CACdb,OAAQ,CACNpF,SAAU6G,GACV3O,UAAW,CAAEgF,OAAQzT,EAAK0T,GAAIgK,WAAYpd,EAAKN,KAAK0T,KAEtD+I,OAAQ,CACNlG,SAAU8G,GACV5O,UAAW,CAAEiF,GAAI4J,EAAcA,EAAY5J,GAAK,QAGpD,EAAiB5F,aAAY0O,EAAQ7e,GAAW4Y,SAAU,CACxDC,eAAgB,CACd,CAAEnB,MAAOzQ,IACT,CAAEyQ,MAAO/Q,GAAWmK,UAAW,CAAEsO,WAAYzc,EAAKN,KAAK0T,KACvD,CACE2B,MAAOhR,GACPoK,UAAW,CACTgF,OAAQnT,EAAKN,KAAK0T,GAClBiK,KAAM,EACNC,MC3D2B,ID8D/B,CAAEvI,MAAO3Q,GAAU+J,UAAW,CAAEwB,SAAUjQ,EAAKiQ,cAZ5CqG,EAAP,qBAgBMuH,EAAiB,yCAAG,+BAAAtP,EAAA,6DACxBuG,GAAW,GADa,SAEDwB,EAAO,CAC5B7H,UAAW,CAAEzE,MAAM,gBAAMwS,EAAQ7e,GAAW8Q,cAHtB,mBAEhBG,EAFgB,EAEhBA,KAKJtO,EAAKN,KAAK0T,KAAO1T,EAAK0T,GAPF,yCAOaoB,GAAW,IAPxB,uBAQlBqB,EAAa+F,OAAO,CACxBlc,OACAmc,QAASmB,EACTzB,iBAAkBL,GAClBM,mBAAoBlN,EAAKkP,aAAelP,EAAKkP,aAAapK,GAAK,OAZzC,OAcxBoB,GAAW,GAda,4CAAH,qDAiBvB,OACE,eAAC,GAAD,CAAQvJ,QAASsS,EAAmBtb,SAAUyL,EAASsP,YAAaA,EAApE,SACGA,EAAc,YAAc,YE3E7BxS,GAAOnC,IAAOC,IAAV,6MAKmB,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC7C,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MACjB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAGpCwc,GAASpV,IAAOC,IAAV,uHAIM,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGnCyR,GAAWvK,IAAOC,IAAV,2FAEC,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACvB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAoC7B4c,GA9BO,SAAC,GAAgB,IAAdlH,EAAa,EAAbA,OACvB,EAAmBjW,KAAVP,EAAT,qBAASA,KAET,OACE,gBAAC,GAAD,WACE,gBAACyd,GAAD,WACE,eAAClS,GAAD,CAAGuD,GAAIoE,aAAa1E,GAAqB,CAAEmB,SAAU6G,EAAO7G,WAA5D,SACE,eAAC,GAAD,CAAQoC,MAAOyE,EAAOzE,UAGxB,eAACnJ,GAAD,CAASI,KAAK,KAAKC,QAAM,EAAzB,SACE,eAACsC,GAAD,CACEuD,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAU6G,EAAO7G,WAFrB,SAKE,eAAC,GAAD,UAAW6G,EAAO9G,kBAKvB1P,EAAKN,KAAK0T,KAAOoD,EAAOpD,IAAM,eAAC,GAAD,CAAQ1T,KAAM8W,QCxC7CmH,GAAetV,IAAOiB,OAAV,uLAWZkB,GAAOnC,IAAOC,IAAV,4JAGG,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OACrB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,MAE5B0c,IAKN/K,GAAWvK,IAAOC,IAAV,mEACH,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QACxB,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGtC8c,GAAiBvV,IAAOC,IAAV,qNAIL,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAAM,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAAO,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAC3E,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC9B,SAACiG,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOhC,MACxB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAC7B,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK4C,QAwEvBgc,GAlEC,SAAC,GAAqC,IAAnCtH,EAAkC,EAAlCA,QAAS+E,EAAyB,EAAzBA,OAAQwC,EAAiB,EAAjBA,WAClC,EAAmBvd,KAAVP,EAAT,qBAASA,KACH6V,EAAesF,KACrB,EAAwB3N,aAAYyN,GAAgB,CAClD/E,eAAgB,CACd,CAAEnB,MAAOhR,GAAoBoK,UAAW,CAAEgF,OAAQnT,EAAKN,KAAK0T,KAC5D,CAAE2B,MAAO3Q,GAAU+J,UAAW,CAAEwB,SAAU4G,EAAQC,OAAO7G,WACzD,CAAEoF,MAAOzQ,IACT,CAAEyQ,MAAO/Q,GAAWmK,UAAW,CAAEsO,WAAYzc,EAAKN,KAAK0T,KACvD,CAAE2B,MAAO9Q,GAAUkK,UAAW,CAAEiF,GAAIkI,OANjCyC,EAAP,qBAUMC,EAAmB,yCAAG,6BAAA/P,EAAA,sEACpB8P,EAAc,CAAE5P,UAAW,CAAEzE,MAAO,CAAE0J,GAAImD,EAAQnD,OAD9B,OAItBpT,EAAKN,KAAK0T,KAAO0K,EAAW1K,KACxB0I,EAAagC,EAAW/B,cAAcC,MAAK,SAACC,GAAD,OAAOA,EAAE1F,SAAW0F,EAAE1F,QAAQnD,KAAOmD,EAAQnD,MAC9FyC,EAAa6F,OAAO,CAClBC,eAAgBG,EAAW1I,MAPL,2CAAH,qDAYzB,OACE,gBAAC,GAAD,WACE,eAAC7H,GAAD,CACEuD,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAU4G,EAAQC,OAAO7G,WAF7B,SAKE,eAAC,GAAD,CAAQoC,MAAOwE,EAAQC,OAAOzE,UAGhC,gBAAC6L,GAAD,WACGrH,EAAQC,OAAOpD,KAAOpT,EAAKN,KAAK0T,IAC/B,eAACuK,GAAD,CAAc1S,QAAS+S,EAAvB,SACE,eAAC,GAAD,CAAWlY,MAAM,SAIrB,eAAC8C,GAAD,CAASC,IAAI,QAEb,eAACD,GAAD,CAASK,QAAM,EAACH,MAAM,MAAtB,SACE,eAACyC,GAAD,CACEuD,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAU4G,EAAQC,OAAO7G,WAF7B,SAKE,eAAC,GAAD,UAAW4G,EAAQC,OAAO9G,eAI7B6G,EAAQA,eC7GX/L,GAAOnC,IAAOC,IAAV,yKAIU,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAEpB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvC6c,GAAW5V,IAAOC,IAAV,yIACE,SAACC,GAAD,OAAQA,EAAE2V,YAAc,OAAS,WAIlC,SAAC3V,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAwBvBid,GAlBW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAU9C,EAAb,EAAaA,OAAQwC,EAArB,EAAqBA,WAAYI,EAAjC,EAAiCA,YAAjC,OACxB,gBAAC,GAAD,CAAMA,YAAaA,EAAnB,UACE,eAACtV,GAAD,CAASC,IAAI,OAEb,eAACoV,GAAD,CAAUC,YAAaA,EAAvB,SACGE,EAASnL,KAAI,SAACsD,GAAD,OACZ,eAAC,GAAD,CAA0BA,QAASA,EAAS+E,OAAQA,EAAQwC,WAAYA,GAA1DvH,EAAQnD,aC9BjBiL,GAAcva,aAAH,8HAWXwa,GAAcxa,aAAH,8HCGlBya,GAAelW,YAAOgB,GAAPhB,CAAH,kDACL,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAwErBsd,GAlEF,SAAC,GAAkD,IAAhDlD,EAA+C,EAA/CA,OAAQ5b,EAAuC,EAAvCA,KAAM+e,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUlV,EAAgB,EAAhBA,UAC7C,EAA8B0D,oBAAS,GAAvC,oBAAOQ,EAAP,KAAgB8G,EAAhB,KACA,EAAmBjU,KAAVP,EAAT,qBAASA,KACH6V,EAAesF,KAEfwD,EAAWF,EAAMzC,MAAK,SAAC4C,GAAD,OAAOA,EAAElf,OAASM,EAAKN,KAAK0T,IAAMwL,EAAEnI,OAAS6E,KACnEje,EAAYshB,EAAW,SAAW,SAClCzC,EAAU,CACdb,OAAQ,CACNpF,SAAUoI,GACVlQ,UAAW,CAAEmN,SAAQnI,OAAQnT,EAAKN,KAAK0T,KAEzC+I,OAAQ,CACNlG,SAAUqI,GACVnQ,UAAW,CAAEiF,GAAIuL,EAAWA,EAASvL,GAAK,QAG9C,EAAiB5F,aAAY0O,EAAQ7e,GAAW4Y,SAAU,CACxDC,eAAgB,CACd,CAAEnB,MAAOzQ,IACT,CAAEyQ,MAAO/Q,GAAWmK,UAAW,CAAEsO,WAAYzc,EAAKN,KAAK0T,KACvD,CAAE2B,MAAOhR,GAAoBoK,UAAW,CAAEgF,OAAQnT,EAAKN,KAAK0T,QAJzD4C,EAAP,qBAQM6I,EAAiB,yCAAG,+BAAA5Q,EAAA,6DACxBuG,GAAW,GADa,SAEDwB,EAAO,CAC5B7H,UAAW,CAAEzE,MAAM,gBAAMwS,EAAQ7e,GAAW8Q,cAHtB,mBAEhBG,EAFgB,EAEhBA,KAKJtO,EAAKN,KAAK0T,KAAO1T,EAAK0T,GAPF,yCAOaoB,GAAW,IAPxB,uBAQlBqB,EAAa+F,OAAO,CACxBlc,OACA4b,SACAO,QAAS8C,EACTpD,iBAAkBL,GAClBM,mBAAoBlN,EAAKwQ,WAAaxQ,EAAKwQ,WAAW1L,GAAK,OAbrC,OAexBoB,GAAW,GAfa,4CAAH,qDAkBvB,OACE,gBAAC+J,GAAD,CACE/U,UAAWA,GAAaA,EACxBvH,SAAUyL,EACVzO,MAAI,EACJgM,QAAS,kBAAM4T,EAAkB7I,IACjCjQ,MAAO4Y,GAAY,eALrB,UAOE,eAAC,GAAD,CAAU5Y,MAAO4Y,GAAY,iBAC7B,eAAC/V,GAAD,CAASK,QAAM,EAACD,KAAK,QACpB0V,GAAY,0CCvEblU,GAAOnC,IAAOC,IAAV,sHACgB,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC1B,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QACtC,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAGrC6d,GAAQ1W,IAAOC,IAAV,sHAIM,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGlC6d,GAAQ3W,IAAOC,IAAV,wEACI,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OACtB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MA0B1B8d,GApBU,SAAC,GAAuC,IAArC3D,EAAoC,EAApCA,OAAQwC,EAA4B,EAA5BA,WAAYoB,EAAgB,EAAhBA,UAC9C,OACE,gBAAC,GAAD,WACE,gBAACH,GAAD,WACE,eAAC,GAAD,CAAMzD,OAAQA,EAAQ5b,KAAMoe,EAAYW,MAAOS,IAC/C,eAACtW,GAAD,CAASE,MAAM,OACf,eAAC,GAAD,OAGF,gBAACkW,GAAD,WAAQE,EAAUnP,OAAlB,gBCpBAvF,GAAOnC,IAAOC,IAAV,2NAEE,SAACC,GAAD,OAAQA,EAAE2V,aAAe3V,EAAE9E,MAAMN,QAAQ9B,MACrC,SAACkH,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ9B,MACpB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAC5B,SAACoH,GAAD,OAAQA,EAAE2V,YAAc3V,EAAE9E,MAAMH,OAAOhC,GAAK,aAIlC,SAACiH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAKvCgH,GAAYC,IAAOC,IAAV,kRACC,SAACC,GAAD,OAAQA,EAAE2V,YAAc,QAAU,UAClC,SAAC3V,GAAD,OAAQA,EAAE2V,YAAc,OAAS,aAE3B,SAAC3V,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAIrB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MACvB,SAACmH,GAAD,OAAQA,EAAE2V,YAAc,MAAQ,YACpC,SAAC3V,GAAD,OAAQA,EAAE2V,YAAc,QAAU,UAK9CiB,GAAO9W,IAAOC,IAAV,yQAGO,SAACC,GAAD,OAAQA,EAAE2V,YAAc,SAAW,gBAE9B,SAAC3V,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOC,SAGrB,SAAC+G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAG/B,SAACmH,GAAD,OAAQA,EAAE2V,YAAc,QAAU,UAI1CtM,GAAQvJ,IAAOwJ,IAAV,yGAGA,SAACtJ,GAAD,OAAQA,EAAE2V,aAAe,UACpB,SAAC3V,GAAD,OAAQA,EAAE2V,YAAc,QAAU,UAG5CkB,GAAQ/W,IAAOC,IAAV,4PAMW,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAErB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAChC,SAACmH,GAAD,OAAQA,EAAE2V,YAAc,QAAU,UAKzCmB,GAAahX,IAAOC,IAAV,wHAQVgX,GAAQjX,IAAOC,IAAV,oGACI,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACX,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAOvB,SAC7C,SAAC2H,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAO9Bqe,GAAY,SAAC,GAAqC,IAAnCnM,EAAkC,EAAlCA,GAAIoM,EAA8B,EAA9BA,WAAYtB,EAAkB,EAAlBA,YACnC,EAAiCpN,aAAS7M,GAAU,CAClDkK,UAAW,CAAEiF,QADP9E,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAASlP,EAAvB,EAAuBA,MAIvB,GAAIkP,EAAS,OAAO,eAACrC,GAAD,CAASxC,IAAI,OACjC,GAAIrK,EAAO,OAAO,eAAC,GAAD,IAElB,IAAMiY,EAAOnI,EAAKmR,QAElB,OACE,gBAAC,GAAD,CAAMvB,YAAaA,EAAnB,UACE,eAAC,GAAD,CAAM7O,MAAOoH,EAAKpH,MAAQoH,EAAKpH,MAAlB,UAA6BoH,EAAKD,OAAO7G,SAAzC,aAEZ6P,GACC,eAACH,GAAD,CAAYpU,QAASuU,EAArB,SACE,eAAC,GAAD,CAAW1Z,MAAM,KAAKC,MAAM,YAIhC,gBAAC,GAAD,CAAWmY,YAAaA,EAAxB,UACE,eAACiB,GAAD,CAAMjB,YAAaA,EAAnB,SACE,eAAC,GAAD,CAAOlM,IAAKyE,EAAK1E,MAAOmM,YAAaA,MAGvC,gBAACkB,GAAD,CAAOlB,YAAaA,EAApB,UACE,gBAACtV,GAAD,WACE,eAAC,GAAD,CAAe4N,OAAQC,EAAKD,SAE3BC,EAAKpH,OAAS,eAACiQ,GAAD,UAAQ7I,EAAKpH,QAE5B,eAAC,GAAD,CACE6O,YAAaA,EACbE,SAAU3H,EAAK2H,SACf9C,OAAQ7E,EAAKrD,GACb0K,WAAYrH,EAAKD,YAIrB,gBAAC5N,GAAD,WACE,eAAC,GAAD,CAAkB0S,OAAQ7E,EAAKrD,GAAI0K,WAAYrH,EAAKD,OAAQ0I,UAAWzI,EAAKgI,QAE5E,eAAC,GAAD,CAAehI,KAAMA,iBAcjC8I,GAAUrU,aAAe,CACvBgT,aAAa,GAGApR,I,MAAAA,gBAAWyS,IC3JpB/U,GAAOnC,IAAOC,IAAV,mIAEY,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAC/B,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACjB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAC5B,SAACoH,GAAD,OAAOA,EAAE9E,MAAMH,OAAOnC,MAG7Bue,GAAkBrX,IAAOC,IAAV,yGASfqX,GAAU,SAAC,GAAD,IAAGtQ,EAAH,EAAGA,MAAOuQ,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,OAAtC,OACd,gBAAC,GAAD,WACE,+BAAM1Q,IAEN,eAACzG,GAAD,CAASC,IAAI,OAEb,gBAAC6W,GAAD,WACE,eAACrW,GAAD,CAAQ4B,QAAS2U,EAAjB,SAA4BE,IAE5B,eAAClX,GAAD,CAASI,KAAK,KAAd,SACE,eAACK,GAAD,CAAQtD,MAAM,MAAMkF,QAAS4U,EAA7B,SACGE,aAeXJ,GAAQzU,aAAe,CACrBmE,MAAO,0CACPyQ,WAAY,SACZC,OAAQ,UAGKJ,I,sDAAAA,MChDTnV,GAAOnC,IAAOC,IAAV,uSAED,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAInB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMH,OAAOjC,MAMZ,SAACkH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MA4B9B4e,GAnBD,SAAC,GAAsD,IAApD7f,EAAmD,EAAnDA,SAAU8f,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASlhB,EAA0B,EAA1BA,KAASmhB,EAAiB,qDAClE,OAAKF,EAGH,gBAAC,GAAD,WACE,eAAC9W,GAAD,CAAS8B,QAASiV,IAER,YAATlhB,EAAqB,eAAC,GAAD,gBAAamhB,IAAiBhgB,KANtC,MCjBdqK,GAAOnC,IAAOC,IAAV,mLAIY,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SACzB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAC5B,SAACoH,GAAD,OAAOA,EAAE9E,MAAMH,OAAOjC,MACnB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ3B,MAGjC8e,GAAa/X,IAAOC,IAAV,yEACH,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAI9Bod,GAAelW,YAAOgB,GAAPhB,CAAH,6OACL,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAEV,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAO/B,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QACtC,SAACiG,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WAwDzBye,GAjDQ,SAAC,GAAiD,IAA/C/E,EAA8C,EAA9CA,OAAQ9E,EAAsC,EAAtCA,OAAQ8J,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACrD,EAAmBhgB,KAAVP,EAAT,qBAASA,KAgBT,OACE,gBAAC,GAAD,WACGA,EAAKN,KAAK0T,KAAOoD,EAAOpD,IACvB,eAACgN,GAAD,UACE,eAAC,GAAD,CAAQ1gB,KAAM8W,MAIlB,eAAC,GAAD,CAAchN,WAAS,EAACvK,MAAI,EAACgM,QAtBT,WACtB,IACEuV,UAAUC,UAAUC,UAApB,UACKC,sBADL,OAC0CzN,aAAa1E,GAAa,CAChE4E,GAAIkI,MAGR,MAAO9c,GACP4c,QAAQ5c,MAAM,sCAAuCA,GAGvD8hB,KAWE,uBAICtgB,EAAKN,KAAK0T,KAAOoD,EAAOpD,IACvB,eAAC,GAAD,CAAc5J,WAAS,EAACvK,MAAI,EAACgM,QAASsV,EAAtC,yBAKF,eAAC,GAAD,CAAc/W,WAAS,EAACyB,QAASqV,EAAarhB,MAAI,EAAlD,wBCnDAuL,GAAOnC,IAAOC,IAAV,kJAES,SAACC,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MACrB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MACrB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SACtB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAG7C+e,GAASvY,IAAOC,IAAV,6JAKC,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAAM,SAACqH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAG3DsX,GAAYpQ,IAAOC,IAAV,oIACA,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAC7B,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAKiD,QACT,SAACqG,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAKlDyb,GAASpV,YAAOkD,GAAPlD,CAAH,iGAMNsK,GAAOtK,IAAOoR,KAAV,sFACK,SAAClR,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACvB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QACjC,SAACyH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQC,QAGnCgf,GAASxY,IAAOwJ,IAAV,yJAMO,SAACtJ,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGpCme,GAAQjX,IAAOC,IAAV,oFAKLwY,GAAYzY,IAAOC,IAAV,oDAITyY,GAAgB1Y,IAAOC,IAAV,kDACJ,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGhC6d,GAAQ3W,IAAOC,IAAV,8LAKS,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAC5B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAC7B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAGhC+c,GAAQ1W,IAAOC,IAAV,2JAKe,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAGjDoc,GAAW5V,IAAOC,IAAV,kDACC,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGhCod,GAAelW,YAAOgB,GAAPhB,CAAH,uFAGH,SAACE,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAGlC+f,GAAc3Y,IAAOC,IAAV,oFAES,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QA6IxCof,GAvIE,SAAC,GAA4F,IAA1FzK,EAAyF,EAAzFA,OAAQ0K,EAAiF,EAAjFA,cAAe9C,EAAkE,EAAlEA,SAAU/O,EAAwD,EAAxDA,MAAO8R,EAAiD,EAAjDA,UAAWpP,EAAsC,EAAtCA,MAAO0M,EAA+B,EAA/BA,MAAOnD,EAAwB,EAAxBA,OAAQ8F,EAAgB,EAAhBA,UAC3F,EAAmB7gB,KAAVP,EAAT,qBAASA,KACHiU,EAASC,eACf,EAA0ChH,oBAAS,GAAnD,oBAAOmU,EAAP,KAAsBC,EAAtB,KACA,EAAwCpU,oBAAS,GAAjD,oBAAOqU,EAAP,KAAqBC,EAArB,KAUMlB,EAAc,kBAAMkB,GAAgB,IAIpCjB,EAAU,yCAAG,uBAAAtS,EAAA,+EAETgG,EAAO+B,OAAO,CAClBC,SAAU/R,GACViK,UAAW,CAAEzE,MAAO,CAAE0J,GAAIkI,EAAQ4F,kBAClChL,eAAgB,iBAAM,CACpB,CACEnB,MAAOhR,GACPoK,UAAW,CACTgF,OAAQnT,EAAKN,KAAK0T,GAClBiK,KAAM,EACNC,MXpJuB,IWuJ3B,CAAEvI,MAAOzQ,IACT,CACEyQ,MAAO1Q,GACP8J,UAAW,CACTwB,SAAU3P,EAAKN,KAAKiQ,SACpB0N,KAAM,EACNC,MXrJ0B,QWiInB,6DA2BjBkE,GAAgB,GA3BC,wDAAH,qDA8BhB,OACE,qCACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAOtB,QAASI,EAAaL,KAAMsB,EAAnC,SACE,eAAC,GAAD,CAAgBjG,OAAQA,EAAQgF,YAAaA,EAAa9J,OAAQA,EAAQ+J,WAAYA,MAGxF,gBAACK,GAAD,WACE,gBAAC,GAAD,CACE9R,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAU6G,EAAO7G,WAFrB,UAKE,eAAC,GAAD,CAAQoC,MAAOyE,EAAOzE,QAEtB,gBAACnJ,GAAD,CAASI,KAAK,KAAd,UACE,eAAC,GAAD,UAAOwN,EAAO9G,WACd,eAAC,GAAD,UAAYqH,GAAQoK,WAIxB,eAAC9X,GAAD,CAAQE,OAAK,EAAC0B,QArDH,kBAAMuW,GAAgB,IAqDjC,SACE,eAAC,GAAD,SAIJ,eAAC5Y,GAAD,CAASI,KAAK,KAAKD,OAAO,KAAKF,IAAI,KAAKC,MAAM,KAA9C,SACE,eAAC,GAAD,UACE,eAACkD,GAAD,UAAKqD,QAIR0C,GAAS,eAAC8O,GAAD,CAAQ7O,IAAKD,EAAO9G,QAASmW,IAEvC,gBAACN,GAAD,WACE,gBAACC,GAAD,WACE,gBAAC,GAAD,WACGtC,EAAM1O,OADT,SAEE,eAACnH,GAAD,IACA,gBAAC,GAAD,CAAcqC,QA7EJ,WACpBqW,GAAkBD,IA4E8BpiB,MAAI,EAA1C,UACGmf,EAASrO,OADZ,kBAKF,gBAAC,GAAD,WACE,eAAC,GAAD,CAAMvG,WAAS,EAACkV,UAAQ,EAAChf,KAAM8W,EAAQ8E,OAAQA,EAAQmD,MAAOA,IAE9D,gBAACpV,GAAD,CAAQG,WAAS,EAACvK,MAAI,EAACgM,QAzFP,WAC1BqW,GAAiB,IAwFP,UACE,eAAC,GAAD,IADF,IACsB,eAAC1Y,GAAD,CAASK,QAAM,EAACD,KAAK,QAD3C,IACoD,kDAKvDqY,GACC,uCACE,gBAACzY,GAAD,CAASC,IAAI,KAAb,UACE,eAACmY,GAAD,IACA,eAAC,GAAD,CAAevK,KAAM,CAAErD,GAAIkI,EAAQ9E,UAAU6F,MAAOgF,OAGrDjD,EAASrO,OAAS,GAAK,eAACiR,GAAD,IAExB,eAAC,GAAD,UACG5C,EAASnL,KAAI,SAACsD,GAAD,OACZ,eAAC,GAAD,CAA0BA,QAASA,EAAS+E,OAAQA,EAAQwC,WAAYtH,GAA1DD,EAAQnD,qB,oBCpOlCqO,GAAiB,SAAC,GAA8D,IAA5DnT,EAA2D,EAA3DA,KAAMoT,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,UAAWxT,EAAiC,EAAjCA,UAAWyT,EAAsB,EAAtBA,MAAOzhB,EAAe,EAAfA,SAC9D0hB,EAAeC,mBACnB,0CAAM,qCAAA7T,EAAA,yDACE8T,EAAW,WACf,OAAOJ,EAAU,CACfxT,UAAU,6BAAMA,GAAP,IAAkBkP,KAAM/O,EAAKyB,SACtCiS,YAAa,SAACC,EAAD,GAAgC,IAAvBC,EAAsB,EAAtBA,gBACdC,EAAe3b,eAAIyb,EAAMP,GACzBU,EAAgB5b,eAAI0b,EAAiBR,GAC3C,OAAOW,mBAAQC,iBAAML,GAAOP,EAASa,kBAAO,GAAD,oBAAKJ,GAAL,aAAsBC,IAAgB,MAAOE,cAKxFE,EAAeC,OAAOC,YACtBC,EAAYpP,SAASqP,gBAAgBD,UACrCE,EAAetP,SAASqP,gBAAgBC,aACxCC,EAAWN,EAAeG,EAAYE,EAAeA,EAAe,IAGtEvU,EAAKyB,QAAU6R,GAlBf,uBAmBFa,OAAO/O,oBAAoB,SAAUmO,GAnBnC,0BAwBAiB,IACFL,OAAO/O,oBAAoB,SAAUmO,GACrCE,KA1BE,6CA6BN,CAACH,EAAOtT,EAAKyB,OAAQ2R,EAASC,EAAWxT,IAS3C,OANAvD,qBAAU,WAGR,OAFA6X,OAAOjP,iBAAiB,SAAUqO,GAE3B,kBAAMY,OAAO/O,oBAAoB,SAAUmO,MACjD,CAACA,IAEG1hB,EAASmO,IAGlBmT,GAAesB,UAAY,CACzBzU,KAAM0U,KAAUC,MAAMC,WACtBxB,QAASsB,KAAUG,OAAOD,WAC1BtB,MAAOoB,KAAUI,OAAOF,WACxBvB,UAAWqB,KAAUK,KAAKH,WAC1B/U,UAAW6U,KAAUM,OAAOJ,WAC5B/iB,SAAU6iB,KAAUK,KAAKH,YAGZzB,I,GAAAA,MCvDTrZ,GAAYC,IAAOC,IAAV,sNACJ,SAACC,GAAD,OAAOA,EAAEzC,OAAF,UAAcyC,EAAEzC,MAAhB,SACN,SAACyC,GAAD,OAAOA,EAAEd,QAAF,UAAec,EAAEd,OAAjB,SACN,SAACc,GAAD,OAAOA,EAAEU,QAAF,kBACJ,SAACV,GAAD,OAAOA,EAAE9E,MAAMN,QAAQoF,EAAEM,QACxB,SAACN,GAAD,OAAOA,EAAE9E,MAAMN,QAAQoF,EAAES,SACxB,SAACT,GAAD,OAAOA,EAAE9E,MAAMN,QAAQoF,EAAEO,UACxB,SAACP,GAAD,OAAOA,EAAE9E,MAAMN,QAAQoF,EAAEQ,WACtB,SAACR,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC9B,SAACiG,GAAD,OAAQA,EAAElF,OAASkF,EAAE9E,MAAMJ,OAAOkF,EAAElF,QAAUkF,EAAE9E,MAAMJ,OAAOlC,MAM1EoiB,GAAW,SAAC,GAAwE,IAAtE3B,EAAqE,EAArEA,MAAO9b,EAA8D,EAA9DA,MAAO2B,EAAuD,EAAvDA,OAAQwB,EAA+C,EAA/CA,OAAQJ,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,KAAM3F,EAAa,EAAbA,OAqB1E,OApBqB,WAEnB,IADA,IAAImgB,EAAW,GACNC,EAAI,EAAGA,EAAI7B,EAAO6B,IACzBD,EAASjV,KACP,eAAC,GAAD,CAEE1F,IAAKA,EACLG,KAAMA,EACNF,MAAOA,EACPhD,MAAOA,EACP2B,OAAQA,EACRwB,OAAQA,EACRF,OAAQA,EACR1F,OAAQA,GARHogB,IAYX,OAAOD,EAGFE,IAcTH,GAASrY,aAAe,CACtB0W,MAAO,GAGM2B,I,2NAAAA,MCnDTrR,GAAQ7J,IAAOqB,MAAV,iDAILia,GAAQtb,IAAOub,MAAV,0TAOM,SAACrb,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QACzB,SAACyH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOhC,MACnB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAClC,SAACiG,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAGhB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAwBpCuhB,GAjBS,SAAC,GAAD,IAAGjW,EAAH,EAAGA,aAAcgW,EAAjB,EAAiBA,MAAjB,OACtB,uCACE,eAAC,GAAD,CAAO7V,KAAK,QAAQa,SAAUhB,EAAc5O,KAAK,OAAOoU,GAAG,aAAa0Q,OAAO,2BAE/E,gBAACH,GAAD,CAAOI,QAAQ,aAAf,UACE,eAAC,GAAD,IAECH,GAAS,eAAChb,GAAD,CAASI,KAAK,KAAd,SAAoB4a,WClCvBI,GAAsB,IAEtBC,GAA4B,IAE5BC,GAA8B,ICD9BC,GAAmB,WAC9B,MAAqB5jB,KAAZoK,EAAT,qBAEMyZ,EAAiB,SAACnlB,EAAMolB,EAAanlB,GACzCyL,EAAS,CACP3L,KAAMJ,GACNU,QAAS,CACPN,KAAMqlB,EACNplB,KAAMA,EACNC,gBAaN,MAAO,CAAEwC,QARO,SAACzC,EAAMC,GAAP,OAAqBklB,EAAenlB,EAAM6K,GAAYE,QAAS9K,IAQ7DmD,KANL,SAACpD,EAAMC,GAAP,OAAqBklB,EAAenlB,EAAM6K,GAAYG,KAAM/K,IAMjDkD,QAJR,SAACnD,EAAMC,GAAP,OAAqBklB,EAAenlB,EAAM6K,GAAYI,QAAShL,IAI9CV,MAFnB,SAACS,EAAMC,GAAP,OAAqBklB,EAAenlB,EAAM6K,GAAYK,MAAOjL,MCLvEsL,GAAOnC,YAAOD,GAAPC,CAAH,uEAEY,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAG7CuX,GAAU/Q,IAAOC,IAAV,+HAIA,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAG9ByI,GAAWvB,IAAOwB,SAAV,+QAEA,SAACtB,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MACnB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACxB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAK5B,SAACqH,GAAD,OAAQA,EAAE8T,MAAQ,OAAS,UACxB,SAAC9T,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAClB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC9B,SAACiG,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOjC,MAGnCkjB,GAAwBjc,IAAOC,IAAV,8HAKX,SAACC,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ9B,MAGjCojB,GAAelc,IAAOwJ,IAAV,sFAMZ2S,GAAUnc,IAAOC,IAAV,6JAIa,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC1C,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAG9BsjB,GAAUpc,IAAOC,IAAV,yEAyIEoc,GAjII,WACjB,MAAmBnkB,KAAVP,EAAT,qBAASA,KACT,EAA0BkN,mBAAS,IAAnC,oBAAOmC,EAAP,KAAcsV,EAAd,KACA,EAA0BzX,mBAAS,IAAnC,oBAAO6E,EAAP,KAAc6S,EAAd,KACA,EAAkC1X,oBAAS,GAA3C,oBAAO2X,EAAP,KAAkBC,EAAlB,KACA,EAA0B5X,mBAAS,IAAnC,oBAAO1O,EAAP,KAAc+O,EAAd,KACA,EAAgCL,oBAAS,GAAzC,oBAAO6X,EAAP,KAAiBC,EAAjB,KACMjlB,EAAUokB,KAChB,EAAkC3W,aAAY3J,GAAa,CACzDqS,eAAgB,CACd,CACEnB,MAAOhR,GACPoK,UAAW,CACTgF,OAAQnT,EAAKN,KAAK0T,GAClBiK,KAAM,EACNC,MjB1F2B,IiB6F/B,CAAEvI,MAAOzQ,IACT,CACEyQ,MAAO1Q,GACP8J,UAAW,CACTwB,SAAU3P,EAAKN,KAAKiQ,SACpB0N,KAAM,EACNC,MjB3F8B,OiB2EtC,oBAAO2H,EAAP,KAAqBvX,EAArB,KAAqBA,QAsBfwX,EAAc,WAClBP,EAAS,IACTC,EAAS,IACTE,GAAa,GACbvX,EAAS,IACTyX,GAAY,IAKRG,EAAwB,SAACtX,GAC7B,IAAMuX,EAAOvX,EAAEC,OAAOuX,MAAM,GAEvBD,IAEDA,EAAKrkB,MAAQijB,GACfjkB,EAAQvB,MAAR,wCAA+CwlB,EAA/C,QAIFY,EAASQ,GAETN,GAAa,GACbjX,EAAEC,OAAOzN,MAAQ,QAKb2N,EAAY,yCAAG,WAAOH,GAAP,UAAAI,EAAA,6DACnBJ,EAAEK,iBADiB,kBAGX+W,EAAW,CACf9W,UAAW,CAAEzE,MAAO,CAAE2F,QAAO0C,QAAO0J,SAAUzb,EAAKN,KAAK0T,OAJzC,OAMjB8R,IANiB,gDAQjBF,GAAY,GARK,yDAAH,sDAYZM,EAAkB5X,IAAaA,IAAYqE,IAAU1C,EAE3D,OACE,uCACGwV,GAAa,eAAC1b,GAAD,CAAS8B,QAASia,IAEhC,eAAC,GAAD,CAAM5hB,OAAQuhB,EAAY,KAAO,KAAM9e,MAAM,QAAQ1C,OAAO,KAAKqF,QAAQ,KAAzE,SACE,wBAAMgG,SAAUV,EAAhB,UACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAQ+D,MAAO/R,EAAKN,KAAKqS,MAAOhR,KAAM,KAEtC,eAAC,GAAD,CACE/B,KAAK,WACL+O,KAAK,QACLsO,MAAOwI,EACPxkB,MAAOgP,EACPiD,QAhDU,kBAAMwS,GAAa,IAiD7BlW,SA/Bc,SAACf,GAAD,OAAO8W,EAAS9W,EAAEC,OAAOzN,QAgCvCwO,YAAY,gBAGZgW,GAAa,eAAC,GAAD,CAAiBjX,aAAcuX,OAG/CpT,GACC,eAACnJ,GAAD,CAASG,OAAO,KAAhB,SACE,eAACub,GAAD,UACE,eAACC,GAAD,CAAcvS,IAAKuT,IAAIC,gBAAgBzT,SAK5C8S,GACC,gBAACL,GAAD,WACE,eAAC,GAAD,CAAiBZ,MAAM,QAAQhW,aAAcuX,IAE7C,gBAACV,GAAD,WACE,eAACpb,GAAD,CAAQpK,MAAI,EAACD,KAAK,SAASiM,QAASia,EAApC,oBAGA,eAAC7b,GAAD,CAAQpH,SAAUqjB,EAAiBtmB,KAAK,SAAxC,yBAOL+lB,GACEvmB,GACC,eAACoK,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACE,eAAC0C,GAAD,CAAO1K,KAAK,KAAZ,SAAkBgkB,EAAW,0CAA4CvmB,eC/KnFkY,GAAQrO,IAAOC,IAAV,+IACE,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACd,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAChC,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MACzB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MACjB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAGtCgR,GAAUpK,YAAOkD,GAAPlD,CAAH,mFAEI,SAACE,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAoG7B2kB,GA9FF,WACX,MAAmBllB,KAAVP,EAAT,qBAASA,KACT,EAAsCkN,mBAAS,MAA/C,oBAAOwY,EAAP,KAAoBC,EAApB,KACMxX,EAAY,CAChBgF,OAAQnT,EAAKN,KAAK0T,GAClBiK,KAAM,EACNC,MlB1CiC,GkB4CnC,EAAoDxM,aAAS/M,GAAoB,CAC/EoK,YACAyX,6BAA6B,IAFvBtX,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAASiU,EAAvB,EAAuBA,UAAWkE,EAAlC,EAAkCA,cAK5BrG,EAAa,WACjBiD,OAAO1V,QAAQ+Y,UAAU,GAAI,GAAI,KACjCH,EAAe,OAkEjB,OACE,gBAACvd,GAAD,CAAWK,SAAS,KAApB,UACE,eAAC,GAAD,IAEA,eAACG,GAAD,CAASC,IAAI,OAEb,eAAC,GAAD,IAhEkB,WACpB,GAAI6E,GAA6B,IAAlBmY,EACb,OAAO,eAAC,GAAD,CAAUpe,OAAQ,IAAKsB,OAAO,KAAKF,IAAI,KAAK+Y,MlB7DpB,IkBgEjC,MAAyBtT,EAAKyX,iBAAtBC,EAAR,EAAQA,MAAOpE,EAAf,EAAeA,MACf,OAAKoE,EAAMjW,OAUT,eAAC,GAAD,CACEzB,KAAM0X,EACNtE,QAAQ,yBACRE,MAAOzK,SAASyK,GAChBzT,UAAWA,EACXwT,UAAWA,EALb,SAOG,SAACrT,GACA,IAAM2X,EAAkBvY,GAA6B,IAAlBmY,GAAuBjE,IAAUtT,EAAKyB,OAEzE,OACE,gBAAC,WAAD,WACGzB,EAAK2E,KAAI,SAACwD,GAAD,OACR,gBAAC,WAAD,WACE,eAAC,GAAD,CAAOwJ,KAAMyF,IAAgBjP,EAAKrD,GAAI8M,QAASV,EAA/C,SACE,eAAC,GAAD,CAAWpM,GAAIqD,EAAKrD,GAAIoM,WAAYA,MAGtC,eAAC5W,GAAD,CAASG,OAAO,KAAKF,IAAI,KAAzB,SACE,eAAC,GAAD,CACE2N,OAAQC,EAAKD,OACb0K,cAAezK,EAAKyK,cACpB5F,OAAQ7E,EAAKrD,GACbgL,SAAU3H,EAAK2H,SACf+C,UAAW1K,EAAK0K,UAChB9R,MAAOoH,EAAKpH,MACZ0C,MAAO0E,EAAK1E,MACZ0M,MAAOhI,EAAKgI,MACZ2C,UAAW,kBAjDZ9F,EAiD4B7E,EAAKrD,GAhDlDqP,OAAO1V,QAAQ+Y,UAAU,GAAI,GAAI5S,aAAa1E,GAAa,CAAE4E,GAAIkI,UACjEqK,EAAerK,GAFC,IAACA,SAkCU7E,EAAKrD,OAqBrB6S,GAAmB,eAAC5a,GAAD,CAASxC,IAAI,aA1CvC,gBAAC,GAAD,WACE,eAAC,GAAD,CAASiG,GAAIoE,aAAa1E,IAA1B,+BADF,MAC4E,IAC1E,eAAC,GAAD,CAASM,GAAIoE,aAAa1E,IAA1B,gCAwDH0X,O,UChHDhU,GAAQ7J,IAAOqB,MAAV,iDAILP,GAAUd,IAAOC,IAAV,kWAYF,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAK3BkiB,GAAQtb,IAAOub,MAAV,+RAMC,SAACrb,GAAD,OAAOA,EAAE4d,UAAY,aAEX,SAAC5d,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC7B,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,QAEhC0H,IAMNyI,GAAQvJ,IAAOwJ,IAAV,sFA8EIuU,GArEY,SAAC,GAAgD,IAA9CjT,EAA6C,EAA7CA,OAAQpB,EAAqC,EAArCA,MAAOmP,EAA8B,EAA9BA,cAC3C,GADyE,EAAfvR,SACvCpP,MAAVP,EAAT,qBAASA,KACHiU,EAASC,eACf,EAA8BhH,oBAAS,GAAvC,oBAAOQ,EAAP,KAAgB8G,EAAhB,KAEMzU,EAAUokB,KAEVkC,EAAiB,yCAAG,WAAOxY,GAAP,gBAAAI,EAAA,yDACxBuG,GAAW,GAEL4Q,EAAOvX,EAAEC,OAAOuX,MAAM,GAC5BxX,EAAEC,OAAOzN,MAAQ,GAEZ+kB,EANmB,sDAQpBA,EAAKrkB,MAAQmjB,IARO,uBAStB1P,GAAW,GACXzU,EAAQvB,MAAR,wCAA+C0lB,EAA/C,OAVsB,oDAehBjQ,EAAO+B,OAAO,CAClBC,SAAUxR,GACV0J,UAAW,CAAEzE,MAAO,CAAE0J,GAAIpT,EAAKN,KAAK0T,GAAIrB,MAAOqT,EAAMlE,kBACrDhL,eAAgB,iBAAM,CACpB,CAAEnB,MAAOhR,GAAoBoK,UAAW,CAAEgF,OAAQnT,EAAKN,KAAK0T,KAC5D,CAAE2B,MAAOzQ,IACT,CAAEyQ,MAAO3Q,GAAU+J,UAAW,CAAEwB,SAAU3P,EAAKN,KAAKiQ,eArBlC,0DAyBtB5P,EAAQvB,MAAM,KAAIiQ,cAAc,GAAG1O,SAzBb,QA4BxByU,GAAW,GA5Ba,0DAAH,sDAuCjB2R,EAAWnmB,EAAKN,KAAK0T,KAAOD,EAElC,OACE,uCACGgT,GACC,eAAC,GAAD,CAAOpY,KAAK,QAAQ/O,KAAK,OAAOoU,GAAG,QAAQ0Q,OAAO,yBAAyBlV,SAAUyX,IAGvF,gBAAC,GAAD,CAAOF,SAAUA,EAAUpC,QAAQ,QAAnC,UACGoC,GAAY,eAAC,GAAD,UAAUpU,EAAQ,SAAW,WAhB1CrE,EACK,eAACrC,GAAD,CAASxC,IAAI,OAGfkJ,EAAQ,eAAC,GAAD,CAAOC,IAAKD,EAAOuU,IAAI,UAAUxC,OAAO,2BAA8B,eAAC,GAAD,CAAUhe,MAAM,eC3G1F,OAA0B,uCCmBnC0E,GAAOnC,IAAOC,IAAV,6QAIgB,SAACC,GAAD,OAAQA,EAAEwJ,MAAQxJ,EAAEwJ,MAAQwU,MAGvB,SAAChe,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOjC,MACrB,SAACmH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOjC,MACtC,SAACmH,GAAD,OAAOA,EAAE9E,MAAMR,QAAQ9B,MAGjC+Q,GAAQ7J,IAAOqB,MAAV,iDAILia,GAAQtb,IAAOub,MAAV,sXAOD,SAACrb,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACxB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACnB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAAO,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAC/C,SAACqH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MAoF1BqlB,GAxEY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,WAAYvT,EAAa,EAAbA,OAC5D,EAAmB5S,KAAVP,EAAT,qBAASA,KACHiU,EAASC,eACf,EAA8BhH,oBAAS,GAAvC,oBAAOQ,EAAP,KAAgB8G,EAAhB,KAEMzU,EAAUokB,KAEVkC,EAAiB,yCAAG,WAAOxY,GAAP,gBAAAI,EAAA,yDACxBuG,GAAW,GAEL4Q,EAAOvX,EAAEC,OAAOuX,MAAM,GAC5BxX,EAAEC,OAAOzN,MAAQ,GAEZ+kB,EANmB,sDAQpBA,EAAKrkB,MAAQkjB,IARO,uBAStBlkB,EAAQvB,MAAR,wCAA+CylB,EAA/C,OACAzP,GAAW,GAVW,oDAehBP,EAAO+B,OAAO,CAClBC,SAAUxR,GACV0J,UAAW,CACTzE,MAAO,CACL0J,GAAIpT,EAAKN,KAAK0T,GACdrB,MAAOqT,EACPlE,cAAeuF,EACfE,SAAS,IAGbzQ,eAAgB,iBAAM,CACpB,CAAEnB,MAAOhR,GAAoBoK,UAAW,CAAEgF,OAAQnT,EAAKN,KAAK0T,KAC5D,CAAE2B,MAAOzQ,IACT,CAAEyQ,MAAO3Q,GAAU+J,UAAW,CAAEwB,SAAU3P,EAAKN,KAAKiQ,eA5BlC,0DAgCtB5P,EAAQvB,MAAM,KAAIiQ,cAAc,GAAG1O,SAhCb,QAmCxByU,GAAW,GAnCa,0DAAH,sDAsCvB,OACE,gBAAC,GAAD,CAAMzC,MAAO2U,EAAb,UACE,eAAC,GAAD,CACE3Y,KAAK,aACL/O,KAAK,OACLoU,GAAG,aACHxE,SAAUyX,EACVvC,OAAO,2BAGRpW,GAAW,eAACrC,GAAD,CAASxC,IAAI,KAAK9H,KAAK,OAElCf,EAAKN,KAAK0T,KAAOD,GAChB,eAAC,GAAD,CAAO4Q,QAAQ,aAAf,SACE,eAAC,GAAD,CAAiBje,MAAM,KAAKC,MAAM,gBClGtCyE,GAAOnC,IAAOC,IAAV,oGAMJse,GAAeve,IAAOC,IAAV,2HAOZiQ,GAAWlQ,IAAOC,IAAV,8PAIE,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,KAGnCyK,IACa,SAACrD,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKM,MAGnB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,KACvCwK,IACa,SAACrD,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKO,MAKtCulB,GAAmBxe,IAAOC,IAAV,sHAIL,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGlCuJ,GAAUrC,YAAOmD,KAAPnD,CAAH,4EAEE,SAACE,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGlC4lB,GAASze,IAAOC,IAAV,oIAGU,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOG,WAC3B,SAAC6G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAIlCmX,GAAOjQ,IAAOC,IAAV,4IAIK,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MACxB,SAACqH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAGjC+Y,GAAO7R,IAAOC,IAAV,kJACK,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAC3B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAGf,SAACiG,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAC5B,SAACmH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAkEzB0lB,GA3DK,SAAC,GAAc,IAAZrnB,EAAW,EAAXA,KACrB,EAAmBa,KAAVP,EAAT,qBAASA,KAET,EAA0BgnB,aAAgB/hB,GAA6B,CACrEkJ,UAAW,CAAEsO,WAAYzc,EAAKN,KAAK0T,GAAID,OAAQzT,EAAK0T,MAD9C9E,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAIVuZ,EAAevnB,EAAKwnB,SAKxB,OAJKxZ,GAAWY,IACd2Y,EAAe3Y,EAAK2Y,aAAaC,UAIjC,gBAAC,GAAD,WACE,eAAC,GAAD,CAAoB/T,OAAQzT,EAAK0T,GAAIsT,WAAYhnB,EAAKgnB,WAAYD,mBAAoB/mB,EAAK+mB,qBAE3F,gBAACG,GAAD,WACE,eAAC,GAAD,CACEzT,OAAQzT,EAAK0T,GACbrB,MAAOrS,EAAKqS,MACZmP,cAAexhB,EAAKwhB,cACpBvR,SAAUjQ,EAAKiQ,WAGjB,gBAAC,GAAD,WACE,eAAC/D,GAAD,UAAKlM,EAAKgQ,WAETuX,GAAgBjnB,EAAKN,KAAK0T,KAAO1T,EAAK0T,IAAM,eAAC0T,GAAD,IAE5C9mB,EAAKN,KAAK0T,KAAO1T,EAAK0T,IACrB,gBAACyT,GAAD,WACE,eAAC,GAAD,CAAQnnB,KAAMA,IAEd,eAACkJ,GAAD,CAASI,KAAK,OACd,eAAC,GAAD,CAAS8F,GAAIoE,aAAa1E,GAAiB,CAAE2E,OAAQzT,EAAK0T,KAA1D,8BAMR,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,+BAAI1T,EAAKsmB,MAAMjW,OAAf,OADF,YAGA,gBAAC,GAAD,WACE,+BAAIrQ,EAAKynB,UAAUpX,OAAnB,OADF,gBAGA,gBAAC,GAAD,WACE,+BAAIrQ,EAAKwd,UAAUnN,OAAnB,OADF,uBCpIF3H,GAAYC,IAAOC,IAAV,oGAqBAoO,GAZD,SAAC,GAAD,IAAGzX,EAAH,EAAGA,KAAH,OACZ,gBAAC,GAAD,WACE,eAAC,GAAD,IAECA,MCqFUmoB,GAhFM,SAAC,GAAkB,IAAhBzX,EAAe,EAAfA,SACtB,EAA8CzC,oBAAS,GAAvD,oBAAOma,EAAP,KAAwBC,EAAxB,KACA,EAAsCpa,mBAAS,IAA/C,oBAAOwY,EAAP,KAAoBC,EAApB,KACMxX,EAAY,CAAEwB,WAAU0N,KAAM,EAAGC,MxBdD,GwBetC,EAAoDxM,aAASzM,GAAgB,CAC3E8J,YACAyX,6BAA6B,IAFvBtX,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAASiU,EAAvB,EAAuBA,UAAWkE,EAAlC,EAAkCA,cAW5BrG,EAAa,WACjBiD,OAAO1V,QAAQ+Y,UAAU,GAAI,GAAI5S,aAAa1E,GAAqB,CAAEmB,cACrE2X,GAAmB,IAGrB,GAAI5Z,GAA6B,IAAlBmY,EACb,OAAO,eAAC,GAAD,CAAUpe,OAAQ,IAAKsB,OAAO,KAAKF,IAAI,KAAK+Y,MxBhCf,IwBmCtC,MAAyBtT,EAAKiZ,aAAtBvB,EAAR,EAAQA,MAAOpE,EAAf,EAAeA,MACf,OAAKoE,EAAMjW,OAAS,EAEhB,eAACnH,GAAD,CAASG,OAAO,KAAhB,SACE,eAAC,GAAD,CAAO9J,KAAK,oBAMhB,eAAC,GAAD,CACEqP,KAAM0X,EACNtE,QAAQ,qBACRE,MAAOzK,SAASyK,GAChBzT,UAAWA,EACXwT,UAAWA,EALb,SAOG,SAACrT,GACA,OAAOA,EAAK2E,KAAI,SAACwD,EAAMgN,GACrB,IAAMwC,EAAkBvY,GAA6B,IAAlBmY,GAAuBvX,EAAKyB,OAAS,IAAM0T,EAE9E,OACE,gBAAC,WAAD,WACGiC,IAAgBjP,EAAKrD,IACpB,eAAC,GAAD,CAAO6M,KAAMoH,EAAiBnH,QAASV,EAAvC,SACE,eAAC,GAAD,CAAWpM,GAAIqD,EAAKrD,GAAIoM,WAAYA,MAIxC,eAAC5W,GAAD,CAASG,OAAO,KAAhB,SACE,eAAC,GAAD,CACEyN,OAAQC,EAAKD,OACb8E,OAAQ7E,EAAKrD,GACb8N,cAAezK,EAAKyK,cACpB9C,SAAU3H,EAAK2H,SACf/O,MAAOoH,EAAKpH,MACZ0C,MAAO0E,EAAK1E,MACZ0M,MAAOhI,EAAKgI,MACZ0C,UAAW1K,EAAK0K,UAChBC,UAAW,kBAtDR9F,EAsDwB7E,EAAKrD,GArD9CqP,OAAO1V,QAAQ+Y,UAAU,GAAI,GAAI5S,aAAa1E,GAAa,CAAE4E,GAAIkI,KACjEqK,EAAerK,QACfgM,GAAmB,GAHH,IAAChM,OA0DN2K,GAAmB,eAAC5a,GAAD,CAASxC,IAAI,SArBpB4N,EAAKrD,WCnD1B5I,GAAOnC,IAAOC,IAAV,2HAGa,SAACC,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAC1B,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MA2D3ByL,iBAnDC,SAAC,GAAe,IAAb0a,EAAY,EAAZA,MACjB,EAAmBjnB,KAAVP,EAAT,qBAASA,KACD2P,EAAa6X,EAAMC,OAAnB9X,SACR,EAAiCmB,aAAS1M,GAAU,CAClD+J,UAAW,CAAEwB,cADPrB,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAASlP,EAAvB,EAAuBA,MAmCvB,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAM6Q,MAAOM,IAhCXjC,EAEA,gBAACtF,GAAD,CAAWM,QAAQ,MAAnB,UACE,eAAC,GAAD,CAAUjB,OAAQ,MAClB,eAACW,GAAD,CAAWK,SAAS,KAApB,SACE,eAACG,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACE,eAAC,GAAD,CAAUtB,OAAQ,YAOxBjJ,IAAU8P,EAAKoZ,QAAgB,eAAC,GAAD,IAGjC,gBAACtf,GAAD,CAAWM,QAAQ,MAAnB,UACE,eAAC,GAAD,CAAahJ,KAAM4O,EAAKoZ,UAExB,gBAACtf,GAAD,CAAWK,SAAS,KAApB,UACE,eAACG,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACG4G,IAAa3P,EAAKN,KAAKiQ,UAAY,eAAC,GAAD,MAGtC,eAAC,GAAD,CAAcA,SAAUA,gBCvD5BxG,GAAUd,IAAOC,IAAV,mUAaF,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAG3B+I,GAAOnC,IAAOC,IAAV,+KAIS,SAACC,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,KAG7BgI,IAKNwe,GAAQtf,IAAOC,IAAV,uLAMW,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAgDlCslB,GA1CK,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,cAAe9V,EAAuC,EAAvCA,MAAO+V,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACvD,EAAsC7a,oBAAS,GAA/C,oBAAO8a,EAAP,KAAoBC,EAApB,KAeA,OAbArd,qBAAU,WACR,IAAMiH,EAAM,IAAID,MAOhB,OANAC,EAAIG,IAAMD,EAEVF,EAAIqW,OAAS,WACXD,GAAe,IAGV,WACLpW,EAAIqW,OAAS,QAEd,CAACnW,IAGF,gBAAC,GAAD,WACE,eAAC4V,GAAD,CAAOQ,MAAOH,EAAc,CAAE7W,gBAAgB,OAAD,OAASY,EAAT,MAAsB,KAEnE,gBAAC,GAAD,CAAS9G,QAAS4c,EAAlB,UACE,eAAC,GAAD,CAAU9hB,MAAM,UAEhB,eAAC6C,GAAD,CAASI,KAAK,KAAKF,MAAM,KAAzB,SACGgf,IAGH,eAAC,GAAD,CAAiB/hB,MAAM,UAEvB,eAAC6C,GAAD,CAASI,KAAK,KAAd,SAAoB+e,WCrDtBvd,GAAOnC,YAAOD,GAAPC,CAAH,sJACM,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MACpB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAEnB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAC1B,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAKpC+mB,GAAiB/f,IAAOC,IAAV,8JA2FL+f,GAjFC,WACd,MAAmB9nB,KAAVP,EAAT,qBAASA,KACT,EAAsCkN,mBAAS,MAA/C,oBAAOwY,EAAP,KAAoBC,EAApB,KACMxX,EAAY,CAChBsO,WAAYzc,EAAKN,KAAK0T,GACtBiK,KAAM,EACNC,M3B3CoC,I2B6CtC,EAAoDxM,aAAS9M,GAAW,CACtEmK,cADMG,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAASiU,EAAvB,EAAuBA,UAAWkE,EAAlC,EAAkCA,cAI5BrG,EAAa,WACjBiD,OAAO1V,QAAQ+Y,UAAU,GAAI,GAAI,YACjCH,EAAe,OA0DjB,OACE,gBAAC,GAAD,CAAMld,SAAS,KAAf,UACE,eAAC,GAAD,CAAM4G,MAAM,gCApDM,WACpB,GAAI3B,GAA6B,IAAlBmY,EACb,OACE,eAACuC,GAAD,UACE,eAAC,GAAD,CAAU3gB,OAAQ,IAAKma,M3B/DO,O2BoEpC,MAAyBtT,EAAKga,SAAtBtC,EAAR,EAAQA,MAAOpE,EAAf,EAAeA,MACf,OAAKoE,EAAMjW,OAAS,EAAU,eAAC,GAAD,CAAO9Q,KAAK,kBAGxC,eAAC,GAAD,CACEqP,KAAM0X,EACNtE,QAAQ,iBACRE,MAAOzK,SAASyK,GAChBzT,UAAWA,EACXwT,UAAWA,EALb,SAOG,SAACrT,GACA,IAAM2X,EAAkBvY,GAA6B,IAAlBmY,GAAuBjE,IAAUtT,EAAKyB,OAEzE,OACE,gBAAC,WAAD,WACE,eAACqY,GAAD,UACG9Z,EAAK2E,KAAI,SAACwD,GAAD,OACR,gBAAC,WAAD,WACE,eAAC,GAAD,CAAOwJ,KAAMyF,IAAgBjP,EAAKrD,GAAI8M,QAASV,EAA/C,SACE,eAAC,GAAD,CAAWpM,GAAIqD,EAAKrD,GAAIoM,WAAYA,MAGtC,eAAC,GAAD,CACEzN,MAAO0E,EAAK1E,MACZ+V,WAAYrR,EAAKgI,MAAM1O,OACvBgY,cAAetR,EAAK2H,SAASrO,OAC7B8X,cAAe,kBAzChBvM,EAyCgC7E,EAAKrD,GAxCtDqP,OAAO1V,QAAQ+Y,UAAU,GAAI,GAAI5S,aAAa1E,GAAa,CAAE4E,GAAIkI,UACjEqK,EAAerK,GAFC,IAACA,OAgCY7E,EAAKrD,SAevB6S,GAAmB,eAAC5a,GAAD,CAASxC,IAAI,aAYxCqd,OC3GD1b,GAAOnC,IAAOC,IAAV,sQAOG,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACjB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MACnB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAI7C0mB,GAAiBlgB,IAAOC,IAAV,iIAQdsJ,GAAQvJ,IAAOwJ,IAAV,sFAML2W,GAAiBngB,IAAOC,IAAV,gOAOT,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAClB,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKM,MAClB,SAACkH,GAAD,OAAOA,EAAExC,SAGzBwS,GAAWlQ,IAAOoR,KAAV,yEAEG,SAAClR,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGtC8R,GAAWvK,IAAOoR,KAAV,kDACC,SAAClR,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MA0DzBunB,GApDI,SAAC,GAAc,IAAZ/oB,EAAW,EAAXA,KACpB,EAA0BwN,mBAAS,IAAnC,oBAAOnH,EAAP,KAAc2iB,EAAd,KAEQhZ,EAA8BhQ,EAA9BgQ,SAAUC,EAAoBjQ,EAApBiQ,SAAUoC,EAAUrS,EAAVqS,MAE5BnH,qBAAU,WACR,MAA+CnH,GAAMlC,OAA7CK,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,UAAWN,EAA5B,EAA4BA,QAASlD,EAArC,EAAqCA,MAC/B+C,EAAS,CAACK,EAAQC,KAAMG,EAAUH,KAAMH,EAASlD,EAAMqD,MACvD8mB,EAActR,KAAKC,MAAMD,KAAKuR,SAAWrnB,EAAOwO,QACtD2Y,EAASnnB,EAAOonB,MACf,IAeH,OACE,gBAAC,GAAD,WACE,eAACpd,GAAD,CAAGuD,GAAIoE,aAAa1E,GAAqB,CAAEmB,aAA3C,SACE,eAAC4Y,GAAD,UACGxW,EAAQ,eAAC,GAAD,CAAOC,IAAKD,IAAY,eAACyW,GAAD,CAAgBziB,MAAOA,EAAvB,SAfpB2J,EAASmZ,MAAM,KAAKC,MAAM,EAAG,GAAGC,KAAK,KAIrDF,MAAM,KACN5V,KAAI,SAAChF,GAAD,OAAOA,EAAE+a,OAAO,MACpBD,KAAK,WAaN,eAACngB,GAAD,CAASC,IAAI,KAAKE,OAAO,KAAzB,SACE,eAACwC,GAAD,CAAGuD,GAAIoE,aAAa1E,GAAqB,CAAEmB,aAA3C,SACE,eAAC,GAAD,UAAWD,QAIf,gBAAC,GAAD,eAAYC,KAEZ,eAAC/G,GAAD,CAASC,IAAI,OAEb,eAAC,GAAD,CAAQnJ,KAAMA,QCvFd8K,GAAOnC,YAAOD,GAAPC,CAAH,+HACM,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAEhB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAC1B,SAACkH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAKpC4nB,GAAkB5gB,IAAOC,IAAV,qLAKF,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAkE3B6nB,GA5DA,WACb,MAAmB3oB,KACb4N,EAAY,CAChBgF,OAFF,qBAASnT,KAEMN,KAAK0T,GAClBiK,KAAM,EACNC,M7BpCmC,I6BsCrC,EAAoDxM,aAASvM,GAAW,CACtE4J,YACAyX,6BAA6B,IAFvBtX,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAASiU,EAAvB,EAAuBA,UAAWkE,EAAlC,EAAkCA,cA4ClC,OACE,gBAAC,GAAD,CAAMpd,SAAS,KAAf,UACE,eAAC,GAAD,CAAM4G,MAAM,oBAzCM,WACpB,GAAI3B,GAA6B,IAAlBmY,EACb,OACE,eAACoD,GAAD,UACE,eAAC,GAAD,CAAUxhB,OAAQ,IAAKma,M7B/CM,O6BoDnC,MAAyBtT,EAAK6a,SAAtBpW,EAAR,EAAQA,MAAO6O,EAAf,EAAeA,MACf,OAAK7O,EAAMhD,OAAS,EAAU,eAAC,GAAD,CAAO9Q,KAAK,mBAGxC,eAAC,GAAD,CACEqP,KAAMyE,EACN2O,QAAQ,iBACRE,MAAOzK,SAASyK,GAChBzT,UAAWA,EACXwT,UAAWA,EALb,SAOG,SAACrT,GACA,IAAM2X,EAAkBvY,GAA6B,IAAlBmY,GAAuBjE,IAAUtT,EAAKyB,OAEzE,OACE,gBAAC,WAAD,WACE,eAACkZ,GAAD,UACG3a,EAAK2E,KAAI,SAACvT,GAAD,OACR,eAAC,GAAD,CAA0BA,KAAMA,GAAfA,EAAK0T,SAIzB6S,GAAmB,eAAC5a,GAAD,CAASxC,IAAI,aAYxCqd,OC5ED1b,GAAOnC,YAAOD,GAAPC,CAAH,mDACM,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MAGjC6Y,GAAO7R,IAAOC,IAAV,qGAES,SAACC,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOlC,MACnB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAkEpCunB,GA5DO,WACpB,MAAmB7oB,KAAVP,EAAT,qBAASA,KACHmO,EAAY,CAChBgF,OAAQnT,EAAKN,KAAK0T,GAClBiK,KAAM,EACNC,M9B1BiD,I8B4BnD,EAAoDxM,aAASpL,GAAuB,CAClFyI,YACAyX,6BAA6B,IAFvBtX,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAASiU,EAAvB,EAAuBA,UAAWkE,EAAlC,EAAkCA,cA0ClC,OACE,eAACld,GAAD,UACE,gBAAC,GAAD,CAAMF,SAAS,KAAf,UACE,eAAC,GAAD,CAAM4G,MAAK,UAAKrP,EAAKN,KAAKiQ,SAAf,sBAxCK,WACpB,GAAIjC,GAA6B,IAAlBmY,EACb,OAAO,eAAC,GAAD,CAAUpe,OAAQ,GAAIsB,OAAO,MAAM6Y,M9BnCK,K8BsCjD,MAAiCtT,EAAK+a,qBAA9BtN,EAAR,EAAQA,cAAe6F,EAAvB,EAAuBA,MACvB,OAAK7F,EAAchM,OAKjB,eAAC,GAAD,CACEzB,KAAMyN,EACN2F,QAAQ,qCACRE,MAAOzK,SAASyK,GAChBzT,UAAWA,EACXwT,UAAWA,EALb,SAOG,SAACrT,GACA,IAAM2X,EAAkBvY,GAA6B,IAAlBmY,GAAuBjE,IAAUtT,EAAKyB,OAEzE,OACE,uCACE,eAAC,GAAD,UACGzB,EAAK2E,KAAI,SAAC4C,GAAD,OACR,eAAC,GAAD,CAAoCA,aAAcA,EAAcC,MAAO,kBAAM,IAA1DD,EAAazC,SAInC6S,GAAmB,eAAC5a,GAAD,CAASxC,IAAI,aAtBlC,eAAC,GAAD,CAAO5J,KAAK,0BAmChBinB,SC/DMpZ,iBAZF,SAAC,GAAe,IAAb0a,EAAY,EAAZA,MACd,OACE,eAAC7e,GAAD,UACE,eAAC,GAAD,CAAWuV,aAAa,EAAO9K,GAAIoU,EAAMC,OAAOrU,UCGhD5I,GAAOnC,IAAOC,IAAV,uJAGkB,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAElC,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAKvCioB,GAAmBjhB,IAAOC,IAAV,2QACO,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAE3C,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAMf,SAACqH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAKvCmO,GAAUnH,IAAO4D,GAAV,uIAEF,SAAC1D,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WAGf,SAAC2G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAKvCkoB,GAAalhB,YAAOgQ,KAAPhQ,CAAH,+MAGM,SAACE,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAQ3CknB,GAAkBnhB,IAAOC,IAAV,2IAEQ,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAEnC,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAKvCooB,GAAgBphB,IAAOC,IAAV,sEACH,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MACxB,SAACoH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAGhCmX,GAAO/P,YAAOgQ,KAAPhQ,CAAH,8VAEG,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAAO,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAC/C,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OACvB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOjC,MAM9B,SAACmH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WAEf,SAAC2G,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MACvC,SAACkH,GAAD,OACCA,EAAEmhB,MAAH,sCAEsBnhB,EAAE9E,MAAMlC,OAAOK,QAAQhB,MAF7C,gBAOkB,SAAC2H,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAI7CgW,GAAOjQ,IAAOC,IAAV,6IAGK,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAEf,SAACqH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MAKvCsoB,GAAiBthB,IAAOC,IAAV,uKAEL,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKI,MAOlCoX,GAAWlQ,IAAOC,IAAV,2EAKRshB,GAASvhB,IAAOC,IAAV,+GAGU,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOK,QAAQhB,SAI9C4X,GAAcnQ,IAAOC,IAAV,iHACD,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OACxB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKE,OAC7B,SAACsH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QA+FvBwK,iBAxFO,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,SAAUmZ,EAAe,EAAfA,SACjC,EAA2CrV,aAAS9L,GAAmB,CACrEmJ,UAAW,CAAEsO,WAAY0J,EAAS/S,MAD5ByW,EAAR,EAAQA,gBAAiBvb,EAAzB,EAAyBA,KAAMZ,EAA/B,EAA+BA,QA+B/B,OA3BA9C,qBAAU,WACR,IAAMjM,EAAckrB,EAAgB,CAClCtW,SAAUlO,GACV2c,YAAa,SAACC,EAAD,GAAiC,IAAxB6H,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBxb,KAAM,OAAO2T,EAEnC,IAAQ8H,EAAoBD,EAAiBxb,KAArCyb,gBACFC,EAAmB/H,EAAKgI,iBAE9B,OAAID,EAAiBE,MAAK,SAACC,GAAD,OAAOA,EAAE/W,KAAO2W,EAAgB3W,MACjD6O,UAIa8H,EACF,WAGb,CAAEE,iBAFgB,CAAIF,GAAJ,oBAAwBC,SAMrD,OAAO,WACLrrB,OAED,CAACkrB,IAGF,gBAAC,GAAD,WACE,gBAACP,GAAD,WACE,eAAC,GAAD,oBAEA,eAACC,GAAD,CACEjY,OAAK,EACLiJ,gBAAgB,WAChBzL,GAAIoE,aAAa1E,GAAiB,CAAE2E,OAAQ3E,KAH9C,SAKE,eAAC,GAAD,SAIJ,eAACgb,GAAD,UACE,eAAC,GAAD,CAAQxc,SAAUA,EAAUoF,gBAAgB,QAAQY,YAAU,EAACnE,YAAY,qBAG5EnB,GAAW,eAACpC,GAAD,CAAazC,IAAI,QAE3B6E,GACA,eAAC+b,GAAD,UACGnb,EAAK2b,iBAAiBhX,KAAI,SAACvT,GAC1B,IAAM0qB,GAAU1qB,EAAK2qB,oBAAsB3qB,EAAKgqB,KAEhD,OACE,gBAAC,GAAD,CAAoBnP,gBAAgB,WAAWzL,GAAE,oBAAepP,EAAK0T,IAAMsW,KAAMU,EAAS,EAAI,EAA9F,UACE,gCACE,eAAC,GAAD,CAAQrY,MAAOrS,EAAKqS,MAAOhR,KAAM,OAGnC,gBAAC,GAAD,WACE,gBAAC4oB,GAAD,WACE,eAAC,GAAD,UAAWjqB,EAAKgQ,WAEf0a,GAAU,eAACR,GAAD,OAGb,gBAAC,GAAD,WACGlqB,EAAK2qB,mBAAqB,OAD7B,IACsC3qB,EAAKkZ,oBAbpClZ,EAAK0T,eCtLxB5I,GAAOnC,IAAOC,IAAV,ueACK,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAad,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAC9B,SAACiG,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOhC,MAIjB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAW/CgoB,GAAejiB,IAAOC,IAAV,2CAIZiiB,GAAcliB,IAAOoR,KAAV,yJAEJ,SAAClR,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAC1B,SAACoH,GAAD,OAAQA,EAAEiiB,aAAejiB,EAAE9E,MAAMN,QAAQ9B,MACvC,SAACkH,GAAD,OAAOA,EAAEiiB,aAAe,KAErB,SAACjiB,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKC,QAC7B,SAACuH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aAGhCyoB,GAAiBpiB,IAAOC,IAAV,gKAGC,SAACC,GAAD,OAAOA,EAAEiiB,aAAe,cACjC,SAACjiB,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ/B,KAEvBmpB,IAKN7f,GAAUrC,IAAOC,IAAV,mPAME,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAC3B,SAACqH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAAO,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAC/C,SAACqH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOhC,MAC9B,SAACkH,GAAD,OAAOA,EAAEiiB,aAAejiB,EAAE9E,MAAMlC,OAAOE,SAC5B,SAAC8G,GAAD,OAAQA,EAAEiiB,YAAcjiB,EAAE9E,MAAMlC,OAAOK,QAAQhB,MAAQ2H,EAAE9E,MAAMlC,OAAOe,KAAK,QAG3FmN,GAAOpH,IAAO0B,KAAV,+IACY,SAACxB,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAK/B,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAG9BypB,GAAiBriB,YAAOuB,GAAPvB,CAAH,iGAED,SAACE,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOhC,MACnB,SAACkH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOe,KAAK,QAG3CqoB,GAAatiB,YAAOgB,GAAPhB,CAAH,2EACC,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAsGzBypB,GA/FkB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAU1E,EAAsC,EAAtCA,SAAU2E,EAA4B,EAA5BA,SAAUxc,EAAkB,EAAlBA,KAAMkZ,EAAY,EAAZA,MAChEuD,EAAYtW,iBAAO,MAEzB,EAAsCvH,mBAAS,IAA/C,oBAAO8d,EAAP,KAAoBC,EAApB,KAEA,EAAwBzd,aAAYpI,IAA7B8lB,EAAP,qBAEAtgB,qBAAU,WACJmgB,EAAUnX,SACZmX,EAAUnX,QAAQuX,mBAEnB,CAACJ,EAAWzc,IAEf,IAAM8c,EAAc,SAACvd,GACnBA,EAAEK,iBAEG8c,IAELC,EAAe,IACfC,EAAc,CACZ/c,UAAW,CACTzE,MAAO,CACL2hB,OAAQlF,EAAS/S,GACjBkY,SAAUR,EAAWA,EAAS1X,GAAK,KACnCrT,QAASirB,IAGb9U,eAAgB,YAAe,IAAZ5H,EAAW,EAAXA,KACjB,GAAIA,GAAQA,EAAK4c,eAAiB5c,EAAK4c,cAAcK,eACnD,MAAO,CACL,CACExW,MAAO/P,GACPmJ,UAAW,CAAEsO,WAAY0J,EAAS/S,WAc9C,OACE,gBAAC,GAAD,WACE,gBAACkX,GAAD,WACGO,EAAS5X,KAAI,SAAClT,GACb,IAAMyrB,EAAqBrF,EAAS/S,KAAOrT,EAAQsrB,OAAOjY,GAE1D,OACE,gBAACqX,GAAD,CAAgBD,YAAagB,EAA7B,WACIA,GACA,eAAC5iB,GAAD,CAASE,MAAM,KAAf,SACE,eAAC,GAAD,CAAQiJ,MAAOhS,EAAQsrB,OAAOtZ,UAIlC,eAAC,GAAD,CAASyY,YAAagB,EAAtB,SAA2CzrB,EAAQA,UAEnD,eAACwqB,GAAD,CAAaC,YAAagB,EAA1B,SAA+ChU,GAAYzX,EAAQohB,eATfphB,EAAQqT,OAalE,sBAAKZ,IAAKuY,OAGXvD,EAAMC,OAAOtU,SAAW3E,IAAuBsc,GAC9C,gBAAC,GAAD,CAAMpc,SAAU0c,EAAhB,UACE,eAACV,GAAD,CACE7b,YAAY,iBACZxO,MAAO2qB,EACPpc,SAAU,SAACf,GAAD,OAAOod,EAAepd,EAAEC,OAAOzN,QACzCsc,UAnCW,SAAC9O,GACF,KAAdA,EAAE+O,UAAiC,IAAf/O,EAAE4d,UACxBL,EAAYvd,MAoCR,eAAC8c,GAAD,CAAY3rB,KAAK,SAASuK,OAAK,EAA/B,SACE,eAAC,GAAD,CAAUzD,MAAM,gBC5KtB0E,GAAOnC,IAAOC,IAAV,mNAEY,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,SAKf,SAAC8G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAIpD8K,GAAiBtE,IAAOC,IAAV,sKAKL,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQhC,MAC3B,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK+C,aACvB,SAACuG,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKG,MAGlCwqB,GAAKrjB,IAAOC,IAAV,mDAIF8P,GAAO/P,YAAOmD,KAAPnD,CAAH,yLACI,SAACE,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OACxB,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAAO,SAACsH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQlC,OAC/C,SAACsH,GAAD,OAAOA,EAAE9E,MAAMJ,OAAOjC,MAOnCkX,GAAOjQ,IAAOC,IAAV,uJACQ,SAACC,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAOnCqX,GAAWlQ,IAAOC,IAAV,sFACC,SAACC,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKM,KAAKI,MAC7B,SAACoH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOtC,KAAK2C,WACrB,SAAC2G,GAAD,OAAOA,EAAE9E,MAAMhD,KAAKE,OAAOG,QAGtCgmB,GAASze,IAAOC,IAAV,8JAIU,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOG,WAC3B,SAAC6G,GAAD,OAAOA,EAAE9E,MAAMN,QAAQjC,MAqEzB4L,iBA9Da,SAAC,GAAmC,IAAjCE,EAAgC,EAAhCA,SAAUwa,EAAsB,EAAtBA,MAAOsD,EAAe,EAAfA,SAC9C,EAAmBvqB,KAAVP,EAAT,qBAASA,KAET,EAA0BgnB,aAAgB/hB,GAA6B,CACrEkJ,UAAW,CACTsO,WAAYzc,EAAKN,KAAK0T,GACtBD,OAAQ2X,EAAWA,EAAS1X,GAAK,MAEnCiK,MAAOyN,IALDxc,EAAR,EAAQA,KAaR,OAbA,EAAcZ,SASEY,GAAQwc,IACtBA,EAAS5D,SAAW5Y,EAAK2Y,aAAaC,UAGpCM,EAAMC,OAAOtU,SAAW3E,IAAwBsc,EAkBhDA,EAEA,eAAC,GAAD,UACE,gBAAC,GAAD,CACEhc,GAAIoE,aAAa1E,GAAqB,CACpCmB,SAAUmb,EAASnb,WAFvB,UAKE,eAAC,GAAD,CAAQoC,MAAO+Y,EAAS/Y,MAAOhR,KAAM,KAErC,gBAAC,GAAD,WACE,eAAC,GAAD,UAAW+pB,EAASpb,WAEnBob,EAAS5D,UAAY,eAAC,GAAD,YAOzB,KApCH,eAAC,GAAD,UACE,gBAAC,GAAD,WACE,eAACwE,GAAD,kBACA,eAAC,GAAD,CACE1e,SAAUA,EACVoF,gBAAgB,QAChBD,UAAQ,EACRa,YAAU,EACVnE,YAAY,4BACZF,WAAS,YCzFfnE,GAAOnC,IAAOC,IAAV,gEAyGKqjB,GAjGM,SAAC,GAAyB,IAAvBnE,EAAsB,EAAtBA,MAAOrB,EAAe,EAAfA,SACrBhT,EAAWqU,EAAMC,OAAjBtU,OAEFc,EAASC,eAEf,EAA0BpD,aAAS1M,GAAU,CAC3C+J,UAAW,CAAEiF,GAAID,GACjBkK,KAAMlK,IAAW3E,KAFXF,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,QAKd,EAAsEoD,aAAS5L,GAAc,CAC3FiJ,UAAW,CAAEsO,WAAY0J,EAAS/S,GAAID,UACtCkK,KAAMlK,IAAW3E,GACjBod,YAAa,iBAHP/B,EAAR,EAAQA,gBAAuBgB,EAA/B,EAAyBvc,KAAyBud,EAAlD,EAAyCne,QAMnCoe,EAAoBC,sBAAW,wBAAC,uBAAA9d,EAAA,+EAE5BgG,EAAO+B,OAAO,CAClBC,SAAU3Q,GACV6I,UAAW,CACTzE,MAAO,CACL4hB,SAAUnF,EAAS/S,GACnBiY,OAAQlY,IAGZ+C,eAAgB,iBAAM,CACpB,CACEnB,MAAO/P,GACPmJ,UAAW,CAAEsO,WAAY0J,EAAS/S,KAEpC,CAAE2B,MAAOzQ,QAfqB,8GAmBnC,CAAC6hB,EAAS/S,GAAIa,EAAQd,IA6BzB,GA3BAvI,qBAAU,WACR,IAAMjM,EAAckrB,EAAgB,CAClCtW,SAAUpO,GACVgJ,UAAW,CAAEsO,WAAY0J,EAAS/S,GAAID,UACtC6O,YAAa,SAACC,EAAD,GAAiC,IAAxB6H,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBxb,KAAM,OAAO2T,EAEnC6J,IAEA,IAAME,EAAalC,EAAiBxb,KAAK2d,eAGzC,MAAO,CAAEC,YAFW,uBAAOjK,EAAKiK,aAAZ,CAAyBF,QAMjD,OAAO,WACLrtB,OAED,CAACwnB,EAAS/S,GAAID,EAAQ0W,EAAiBiC,IAE1ClhB,qBAAU,WACJuI,IAAW3E,IACbsd,MAED,CAAC3Y,EAAQ2Y,IAERpe,GAAWme,EACb,OACE,eAAC,GAAD,UACE,eAACvgB,GAAD,MAKN,IAAIwf,EAAW,KAKf,OAJIxc,GAAQA,EAAKoZ,UACfoD,EAAWxc,EAAKoZ,SAIhB,gBAAC,GAAD,WACE,eAAC,GAAD,CAAqBF,MAAOA,EAAOsD,SAAUA,IAE7C,eAAC,GAAD,CACE3E,SAAUA,EACV0E,SAAUA,EAAWA,EAASqB,YAAc,GAC5CpB,SAAUA,EACVxc,KAAMuc,EACNrD,MAAOA,QCjGThd,GAAOnC,IAAOC,IAAV,wUACY,SAACC,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOE,QAE3B0X,GACAA,IAMM,SAAC5Q,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAC1B,SAACmH,GAAD,OAAOA,EAAE9E,MAAMN,QAAQ9B,MACb,SAACkH,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAC5B,SAAC0G,GAAD,OAAOA,EAAE9E,MAAMlC,OAAOY,OAAON,QAuB5CsqB,GAhBE,SAAC,GAAe,IAAb3E,EAAY,EAAZA,MAClB,EAAmBjnB,KAAVP,EAAT,qBAASA,KAET,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAemmB,SAAUnmB,EAAKN,KAAM8nB,MAAOA,IAE3C,eAAC,GAAD,CAAcA,MAAOA,EAAOrB,SAAUnmB,EAAKN,WCT3C8K,GAAOnC,IAAOC,IAAV,6OAOa,SAACC,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAChC,SAACmH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO9B,MAGZ,SAACmH,GAAD,OAAO4O,SAAS5O,EAAE9E,MAAMP,OAAO7B,GAAI,IAAM,GAAK,QACxD,SAACkH,GAAD,OAAOA,EAAE9E,MAAMP,OAAO7B,MA4EpByL,iBArEG,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,SAAUmZ,EAAe,EAAfA,SAC7B,EAA6B5lB,KAA7B,oBAASP,EAAT,KAASA,KAAQ2K,EAAjB,KAGMyhB,EC/CqB,WAC3B,IAAMC,EAA6B,kBAAX5J,OAElB6J,EAAUP,uBAAY,WAC1B,MAAO,CACLjmB,MAAOumB,EAAW5J,OAAO8J,gBAAaC,EACtC/kB,OAAQ4kB,EAAW5J,OAAOC,iBAAc8J,KAEzC,CAACH,IAEJ,EAAoCnf,mBAASof,GAA7C,oBAAOG,EAAP,KAAmBC,EAAnB,KAeA,OAbA9hB,qBAAU,WACR,IAAKyhB,EACH,OAAO,EAGT,SAASM,IACPD,EAAcJ,KAIhB,OADA7J,OAAOjP,iBAAiB,SAAUmZ,GAC3B,kBAAMlK,OAAO/O,oBAAoB,SAAUiZ,MACjD,CAACL,EAASD,IAENI,EDqBYG,GACU9mB,OAASqR,SAAS1T,GAAMP,OAAO9B,GAAI,IAChE,EAA0C8L,mBAASkf,GAAnD,oBAAOS,EAAP,KAAsBC,EAAtB,KAEMpS,EAAajG,iBAAO,IAwB1B,OAtBA7J,qBAAU,WACRD,EAAS,CAAE3L,KAAMO,GAAeD,QAAS6mB,MACxC,CAACxb,EAAUwb,IAEd9S,GAAgBqH,GAAY,YACrB0R,GAAaS,GAChBC,GAAiB,MAIrBliB,qBAAU,WACRkiB,EAAiBV,KAChB,CAACA,IAEJxhB,qBAAU,WACR,OAAO,WACAwhB,GACHU,GAAiB,MAGpB,CAAC9f,EAASW,SAAUye,IAElBpsB,EAAKN,KAGR,uCACE,eAAC,GAAD,CAAQia,cAAe,kBAAMmT,GAAkBD,MAE/C,gBAAC,GAAD,WACE,eAAC,GAAD,CAASrS,OAAQqS,EAAenS,WAAYA,IAE5C,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOpJ,OAAK,EAACC,KAAM/C,GAAaiD,UAAWgU,KAE3C,eAAC,KAAD,CAAOnU,OAAK,EAACC,KAAM/C,GAAgBiD,UAAW4W,KAE9C,eAAC,KAAD,CAAO/W,OAAK,EAACC,KAAM/C,GAAeiD,UAAWyX,KAE7C,eAAC,KAAD,CAAO5X,OAAK,EAACC,KAAM/C,GAAsBiD,UAAW2X,KAEpD,eAAC,KAAD,CAAO9X,OAAK,EAACC,KAAM/C,GAAiBiD,UAAW0a,KAE/C,eAAC,KAAD,CAAO7a,OAAK,EAACC,KAAM/C,GAAqBiD,UAAWsb,KAEnD,eAAC,KAAD,CAAOzb,OAAK,EAACC,KAAM/C,GAAaiD,UAAWub,KAE3C,eAAC,KAAD,CAAOvb,UAAWC,QAGpB,eAAC,GAAD,CAAiB/D,SAAUX,EAASW,iBA3BnB,QEjEVb,iBARK,SAAC,GAA0C,IAAxC3M,EAAuC,EAAvCA,SAAsBwN,EAAiB,EAA7BX,SAAYW,SAK3C,OAJA/C,qBAAU,WACR6X,OAAOwK,SAAS,EAAG,KAClB,CAACtf,IAEGxN,GAAY,QCmIN+sB,GAxHH,WACV,MAAsB3sB,KAAbR,EAAT,qBAASA,QAET,EAA2D+Q,aAASxM,IAA5DoJ,EAAR,EAAQA,QAASmc,EAAjB,EAAiBA,gBAAiBvb,EAAlC,EAAkCA,KAAM9P,EAAxC,EAAwCA,MAAOyO,EAA/C,EAA+CA,QAkF/C,GAhFArC,qBAAU,WACR,IAAMjM,EAAckrB,EAAgB,CAClCtW,SAAU3N,GACVoc,YAAY,WAAD,8BAAE,WAAOC,EAAP,mCAAAhU,EAAA,0DAAe6b,EAAf,EAAeA,kBACJxb,KADX,yCACwB2T,GADxB,UAGLkL,EAAmBlL,EAAKmL,YAAYhX,iBAH/B,EAIyB0T,EAAiBxb,KAAK+e,6BAAlDhwB,EAJG,EAIHA,UAAWwY,EAJR,EAIQA,aAID,WAAdxY,EARO,oBAUkC,kBAAvColB,OAAOzV,SAASsgB,KAAKzE,MAAM,KAAK,GAV3B,yCAWA5G,GAXA,OAeT7L,EAAgB,CAAIP,GAAJ,oBAAqBsX,IAf5B,yBAmBHI,GADAxR,EAAgBoR,GACMK,WAAU,SAACvR,GAAD,OAAOA,EAAE7I,KAAOyC,EAAazC,QACtD,GACX2I,EAAc0R,OAAOF,EAAO,GAG9BnX,EAAmB2F,EAxBV,eA4BLoK,EAAWlE,EAAKmL,aACbhX,iBAAmBA,EA7BjB,kBA+BJ,CAAEgX,YAAajH,IA/BX,4CAAF,qDAAC,KAmCd,OAAO,WACLxnB,OAED,CAACkrB,IAEJjf,qBAAU,WACR,IAAMjM,EAAckrB,EAAgB,CAClCtW,SAAUlO,GACV2c,YAAa,SAACC,EAAD,GAAiC,IAAxB6H,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBxb,KAAM,OAAO2T,EAEnC,IAAM+H,EAAmB/H,EAAKmL,YAAYnT,iBAClC8P,EAAoBD,EAAiBxb,KAArCyb,gBAGR,GAA2C,aAAvCtH,OAAOzV,SAASsgB,KAAKzE,MAAM,KAAK,GAClC,OAAO5G,EAKT,IAAMsL,EAAQvD,EAAiBwD,WAAU,SAACrD,GAAD,OAAOA,EAAE/W,KAAO2W,EAAgB3W,MACrEma,GAAS,GACXvD,EAAiByD,OAAOF,EAAO,GAIjC,IAAMG,EAAkB,CAAI3D,GAAJ,oBAAwBC,IAG1C7D,EAAWlE,EAAKmL,YAGtB,OAFAjH,EAASlM,iBAAmByT,EAErB,CAAEN,YAAajH,MAI1B,OAAO,WACLxnB,OAED,CAACkrB,IAEAnc,EAAS,OAAO,eAACrC,GAAD,CAASxC,IAAI,OACjC,GAAIrK,EAAO,CACsCmiB,MAO/C,OAAO,eAAC,GAAD,CAAU5gB,QADQ,sFACqD4R,kBAAkB,IAGlG,OACE,gBAAC,KAAD,WACE,eAACpO,GAAD,IAEA,eAAC,GAAD,UACE,eAAC,KAAD,UACG+K,EAAK8e,YACJ,eAAC,KAAD,CAAO9b,OAAK,EAACE,OAAQ,kBAAM,eAAC,GAAD,CAAW2U,SAAU7X,EAAK8e,iBAErD,eAAC,KAAD,CAAO9b,OAAK,EAACE,OAAQ,kBAAM,eAAC,GAAD,CAAYvE,QAASA,WAKrDlN,EAAQhB,QAAQE,MACf,eAAC,GAAD,CAASD,KAAMe,EAAQhB,QAAQC,KAAME,UAAWa,EAAQhB,QAAQG,UAAhE,SACGa,EAAQhB,QAAQE,WC1HrB0uB,GAAUhN,gCAUViN,GjHyC4B,SAACC,EAAQC,GACzC,IAAMC,EAAQ,IAAIC,IAEZC,EAtBCC,cAAQ,YAAsC,IAAnCzf,EAAkC,EAAlCA,cAAe0f,EAAmB,EAAnBA,aAC3B1f,GACFA,EAAcwE,KAAI,gBAAGlT,EAAH,EAAGA,QAASquB,EAAZ,EAAYA,UAAW7c,EAAvB,EAAuBA,KAAvB,OAChB6J,QAAQiT,IAAR,oCAAyCtuB,EAAzC,uBAA+DquB,EAA/D,mBAAmF7c,OAInF4c,GACF/S,QAAQiT,IAAR,2BAAgCF,OAe9BG,EAAWnxB,KACXoxB,EAAaC,KAAiB,CAAEC,IAAKZ,IAGrCa,EAAY3wB,aAAaC,QAAQ,SACjC2wB,EAAS,IAAIC,KAAc,CAC/BH,IAAKX,EACL5R,QAAS,CACP2S,QAAS,IACTC,WAAW,EACXC,iBAAkB,CAChB5wB,cAAeuwB,MAOrBC,EAAOK,mBAAmBC,wBAAwBC,SAAW,kBAC3DP,EAAOK,mBAAmBC,wBAAwBE,KAIpD,IAAMC,EAAkBvG,iBACtB,YAAgB,IAAb9T,EAAY,EAAZA,MACD,EAA4Bsa,aAAkBta,GAAtCua,EAAR,EAAQA,KAAMjyB,EAAd,EAAcA,UACd,MAAgB,wBAATiyB,GAAgD,iBAAdjyB,IAE3CsxB,EACAJ,GAGF,OAAO,IAAIgB,IAAa,CACtBC,KAAMpyB,aAAWqyB,KAAK,CAACxB,EAAWK,EAAUc,IAC5CrB,UiH/EiB2B,CAAmB/B,GAJpCgC,+BAMJne,iBACE,eAACoe,EAAA,EAAD,CAAgB3b,OAAQ2Z,GAAxB,SACE,eAAC,IAAD,CAAenqB,MAAOA,GAAtB,SACE,eAAC,GAAD,UACE,eAAC,GAAD,UAIN8P,SAASsc,eAAe,U","file":"static/js/main.d7718088.chunk.js","sourcesContent":["import { ApolloClient, ApolloLink, Observable, split, InMemoryCache } from '@apollo/client';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { onError } from '@apollo/client/link/error';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\n\r\n/**\r\n * Creates a Apollo Link, that adds authentication token to request\r\n */\r\nconst createAuthLink = () => {\r\n  const request = (operation) => {\r\n    const token = localStorage.getItem('token');\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    });\r\n  };\r\n\r\n  return new ApolloLink(\r\n    (operation, forward) =>\r\n      new Observable((observer) => {\r\n        let handle;\r\n        Promise.resolve(operation)\r\n          .then((oper) => request(oper))\r\n          .then(() => {\r\n            handle = forward(operation).subscribe({\r\n              next: observer.next.bind(observer),\r\n              error: observer.error.bind(observer),\r\n              complete: observer.complete.bind(observer),\r\n            });\r\n          })\r\n          .catch(observer.error.bind(observer));\r\n\r\n        return () => {\r\n          if (handle) handle.unsubscribe();\r\n        };\r\n      })\r\n  );\r\n};\r\n\r\n/**\r\n * Helper functions that handles error cases\r\n */\r\nconst handleErrors = () => {\r\n  return onError(({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors) {\r\n      graphQLErrors.map(({ message, locations, path }) =>\r\n        console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\r\n      );\r\n    }\r\n\r\n    if (networkError) {\r\n      console.log(`[Network error]: ${networkError}`);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Creates a Apollo Client\r\n *\r\n * @param {string} apiUrl, GraphQL api url\r\n * @param {string} websocketApiUrl, GraphQL WebSocket api url\r\n */\r\nexport const createApolloClient = (apiUrl, websocketApiUrl) => {\r\n  const cache = new InMemoryCache();\r\n\r\n  const errorLink = handleErrors();\r\n  const authLink = createAuthLink();\r\n  const uploadLink = createUploadLink({ uri: apiUrl }); // Upload link also creates an HTTP link\r\n\r\n  // Create WebSocket link\r\n  const authToken = localStorage.getItem('token');\r\n  const wsLink = new WebSocketLink({\r\n    uri: websocketApiUrl,\r\n    options: {\r\n      timeout: 60000,\r\n      reconnect: true,\r\n      connectionParams: {\r\n        authorization: authToken,\r\n      },\r\n    },\r\n  });\r\n\r\n  // Temporary fix for early websocket closure resulting in websocket connections not being instantiated\r\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/377\r\n  wsLink.subscriptionClient.maxConnectTimeGenerator.duration = () =>\r\n    wsLink.subscriptionClient.maxConnectTimeGenerator.max;\r\n\r\n  // Split links, so we can send data to each link\r\n  // depending on what kind of operation is being sent\r\n  const terminatingLink = split(\r\n    ({ query }) => {\r\n      const { kind, operation } = getMainDefinition(query);\r\n      return kind === 'OperationDefinition' && operation === 'subscription';\r\n    },\r\n    wsLink,\r\n    uploadLink\r\n  );\r\n\r\n  return new ApolloClient({\r\n    link: ApolloLink.from([errorLink, authLink, terminatingLink]),\r\n    cache,\r\n  });\r\n};\r\n","/**\r\n * Actions types\r\n */\r\nexport const SET_MESSAGE = 'SET_MESSAGE';\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\n\r\n/**\r\n * Initial State\r\n */\r\nexport const messageInitialState = {\r\n  content: {\r\n    type: '',\r\n    text: '',\r\n    autoClose: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Message Reducer\r\n */\r\nexport const messageReducer = (state = messageInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        content: {\r\n          type: action.payload.type,\r\n          text: action.payload.text,\r\n          autoClose: action.payload.autoClose,\r\n        },\r\n      };\r\n    case CLEAR_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        ...messageInitialState,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/**\r\n * Actions types\r\n */\r\nexport const SET_AUTH_USER = 'SET_AUTH_USER';\r\nexport const CLEAR_AUTH_USER = 'CLEAR_AUTH_USER';\r\n\r\n/**\r\n * Initial State\r\n */\r\nexport const authInitialState = {\r\n  user: null,\r\n};\r\n\r\n/**\r\n * User Reducer\r\n */\r\nexport const authReducer = (state = authInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case CLEAR_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        ...authInitialState,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\nimport { messageReducer, messageInitialState } from './message';\r\nimport { authReducer, authInitialState } from './auth';\r\n\r\n/**\r\n * React context for store\r\n */\r\nconst StoreContext = createContext();\r\n\r\n/**\r\n * Combine initial states\r\n */\r\nconst store = {\r\n  message: messageInitialState,\r\n  auth: authInitialState,\r\n};\r\n\r\n/**\r\n * Combine reducers\r\n */\r\nconst reducers = (store, action) => ({\r\n  message: messageReducer(store.message, action),\r\n  auth: authReducer(store.auth, action),\r\n});\r\n\r\n/**\r\n * Store context provider\r\n */\r\nexport const StoreProvider = ({ children }) => (\r\n  <StoreContext.Provider value={useReducer(reducers, store)}>{children}</StoreContext.Provider>\r\n);\r\n\r\n/**\r\n * React hook for consuming store\r\n */\r\nexport const useStore = () => useContext(StoreContext);\r\n","/**\r\n * Theme for applying consistent styling to the app\r\n */\r\n\r\nexport default {\r\n  /**\r\n   * Font\r\n   */\r\n  font: {\r\n    family: \"'Open Sans', sans-serif\",\r\n    weight: {\r\n      light: '300',\r\n      normal: '400',\r\n      bold: '600',\r\n    },\r\n    size: {\r\n      tiny: '11px',\r\n      xxs: '13px',\r\n      xs: '14px',\r\n      sm: '16px',\r\n      md: '18px',\r\n      lg: '20px',\r\n      xl: '34px',\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Colors\r\n   */\r\n  colors: {\r\n    black: '#000000',\r\n    white: '#fff',\r\n    success: '#34a853',\r\n    body: '#fcfbfe',\r\n\r\n    primary: {\r\n      light: '#7986cb',\r\n      main: '#3f51b5',\r\n      dark: '#303f9f',\r\n      contrastText: '#fff',\r\n    },\r\n\r\n    secondary: {\r\n      light: '#ff4081',\r\n      main: '#f50057',\r\n      dark: '#c51162',\r\n      contrastText: '#fff',\r\n    },\r\n\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.54)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n\r\n    border: {\r\n      light: '#f5f5f5',\r\n      main: '#e0e0e0',\r\n      dark: '#bdbdbd',\r\n    },\r\n\r\n    error: {\r\n      light: '#e57373',\r\n      main: '#f44336',\r\n      dark: '#d32f2f',\r\n      contrastText: '#fff',\r\n    },\r\n\r\n    warning: '#FFB818',\r\n\r\n    info: '#4169E1',\r\n\r\n    grey: {\r\n      50: '#fafafa',\r\n      100: '#f5f5f5',\r\n      200: '#eeeeee',\r\n      300: '#e0e0e0',\r\n      400: '#bdbdbd',\r\n      500: '#9e9e9e',\r\n      600: '#757575',\r\n      700: '#616161',\r\n      800: '#424242',\r\n      900: '#212121',\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Shadows\r\n   */\r\n  shadows: {\r\n    sm: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\r\n    md: 'rgba(0, 0, 0, 0.3) 0px 1px 8px 0px',\r\n    lg: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n    xl: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\r\n  },\r\n\r\n  /**\r\n   * Breakpoints\r\n   */\r\n  screen: {\r\n    xs: '540px',\r\n    sm: '640px',\r\n    md: '1007px',\r\n    lg: '1100px',\r\n    xl: '1230px',\r\n  },\r\n\r\n  /**\r\n   * Spacing\r\n   */\r\n  spacing: {\r\n    none: 0,\r\n    xxs: '5px',\r\n    xs: '10px',\r\n    sm: '20px',\r\n    md: '30px',\r\n    lg: '40px',\r\n    xl: '60px',\r\n  },\r\n\r\n  /**\r\n   * Radius\r\n   */\r\n  radius: {\r\n    sm: '3px',\r\n    md: '6px',\r\n    lg: '12px',\r\n  },\r\n\r\n  /**\r\n   * zIndex\r\n   */\r\n  zIndex: {\r\n    xs: 10,\r\n    sm: 20,\r\n    md: 30,\r\n    lg: 40,\r\n    xl: 50,\r\n  },\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Global styles for the application\r\n */\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: open sans;\r\n    color: ${theme.colors.text.primary};\r\n    background-color: ${theme.colors.body};\r\n  }\r\n\r\n  #root {\r\n    position: relative;\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\n/**\r\n * Records to select from post comments\r\n */\r\nexport const postCommentsPayload = `\r\n  comments {\r\n    id\r\n    comment\r\n    author {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Records to select from post author\r\n */\r\nexport const postAuthorPayload = `\r\n  author {\r\n    id\r\n    username\r\n    fullName\r\n    image\r\n    following {\r\n      id\r\n      user\r\n    }\r\n    followers {\r\n      id\r\n      user\r\n    }\r\n    notifications {\r\n      id\r\n      author {\r\n        id\r\n        username\r\n      }\r\n      follow {\r\n        id\r\n      }\r\n      like {\r\n        id\r\n      }\r\n      comment {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Records to select from post likes\r\n */\r\nexport const postLikesPayload = `\r\n  likes {\r\n    id\r\n    user\r\n    post\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a post\r\n */\r\nexport const CREATE_POST = gql`\r\n  mutation($input: CreatePostInput!) {\r\n    createPost(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all posts from followed users\r\n */\r\nexport const GET_FOLLOWED_POSTS = gql`\r\n  query($userId: String!, $skip: Int, $limit: Int) {\r\n    getFollowedPosts(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        imagePublicId\r\n        createdAt\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all available posts\r\n */\r\nexport const GET_POSTS = gql`\r\n  query($authUserId: ID!, $skip: Int, $limit: Int) {\r\n    getPosts(authUserId: $authUserId, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets specific post by id\r\n */\r\nexport const GET_POST = gql`\r\n  query($id: ID!) {\r\n    getPost(id: $id) {\r\n      id\r\n      title\r\n      image\r\n      createdAt\r\n      ${postAuthorPayload}\r\n      ${postCommentsPayload}\r\n      ${postLikesPayload}\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a post\r\n */\r\nexport const DELETE_POST = gql`\r\n  mutation($input: DeletePostInput!) {\r\n    deletePost(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import { gql } from '@apollo/client';\r\nimport { postCommentsPayload, postAuthorPayload, postLikesPayload } from './post';\r\n\r\n/**\r\n * Records to select from user\r\n */\r\nconst userPayload = `\r\n  id\r\n  username\r\n  email\r\n  fullName\r\n  image\r\n  imagePublicId\r\n  coverImage\r\n  coverImagePublicId\r\n  createdAt\r\n`;\r\n\r\n/**\r\n * Gets specific user by username\r\n */\r\nexport const GET_USER = gql`\r\n  query($username: String, $id: ID) {\r\n    getUser(username: $username, id: $id) {\r\n      ${userPayload}\r\n      isOnline\r\n      posts {\r\n        id\r\n      }\r\n      following {\r\n        id\r\n      }\r\n      followers {\r\n        id\r\n      }\r\n      notifications {\r\n        id\r\n        author {\r\n          id\r\n          username\r\n        }\r\n        follow {\r\n          id\r\n        }\r\n        like {\r\n          id\r\n        }\r\n        comment {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets user posts\r\n */\r\nexport const GET_USER_POSTS = gql`\r\n  query($username: String!, $skip: Int, $limit: Int) {\r\n    getUserPosts(username: $username, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        imagePublicId\r\n        createdAt\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets authenticated user\r\n */\r\nexport const GET_AUTH_USER = gql`\r\n  query {\r\n    getAuthUser {\r\n      ${userPayload}\r\n      newNotifications {\r\n        id\r\n        createdAt\r\n        author {\r\n          id\r\n          fullName\r\n          username\r\n          image\r\n        }\r\n        follow {\r\n          id\r\n        }\r\n        comment {\r\n          id\r\n          post {\r\n            id\r\n            image\r\n          }\r\n        }\r\n        like {\r\n          id\r\n          post {\r\n            id\r\n            image\r\n          }\r\n        }\r\n      }\r\n      newConversations {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        lastMessage\r\n        lastMessageCreatedAt\r\n      }\r\n      likes {\r\n        id\r\n        user\r\n        post\r\n      }\r\n      posts {\r\n        id\r\n      }\r\n      following {\r\n        id\r\n        user\r\n      }\r\n      followers {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all available users\r\n */\r\nexport const GET_USERS = gql`\r\n  query($userId: String!, $skip: Int, $limit: Int) {\r\n    getUsers(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      users {\r\n        id\r\n        fullName\r\n        username\r\n        image\r\n        following {\r\n          id\r\n          user\r\n        }\r\n        followers {\r\n          id\r\n        }\r\n        notifications {\r\n          id\r\n          author {\r\n            id\r\n            username\r\n          }\r\n          follow {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Searches users by username or fullName\r\n */\r\nexport const SEARCH_USERS = gql`\r\n  query($searchQuery: String!) {\r\n    searchUsers(searchQuery: $searchQuery) {\r\n      id\r\n      fullName\r\n      username\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Uploads user photo\r\n */\r\nexport const UPLOAD_PHOTO = gql`\r\n  mutation($input: UploadUserPhotoInput!) {\r\n    uploadUserPhoto(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign up user\r\n */\r\nexport const SIGN_UP = gql`\r\n  mutation($input: SignUpInput!) {\r\n    signup(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign in user\r\n */\r\nexport const SIGN_IN = gql`\r\n  mutation($input: SignInInput!) {\r\n    signin(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Request reset password\r\n */\r\nexport const REQUEST_PASSWORD_RESET = gql`\r\n  mutation($input: RequestPasswordResetInput!) {\r\n    requestPasswordReset(input: $input) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Verify reset password token\r\n */\r\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\r\n  query($email: String!, $token: String!) {\r\n    verifyResetPasswordToken(email: $email, token: $token) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Reset password\r\n */\r\nexport const RESET_PASSWORD = gql`\r\n  mutation($input: ResetPasswordInput!) {\r\n    resetPassword(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * People suggestions for auth user\r\n */\r\nexport const USER_SUGGESTIONS = gql`\r\n  query($userId: String!) {\r\n    suggestPeople(userId: $userId) {\r\n      id\r\n      fullName\r\n      username\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Get users with whom authUser had a conversation\r\n */\r\nexport const GET_CONVERSATIONS = gql`\r\n  query($authUserId: ID!) {\r\n    getConversations(authUserId: $authUserId) {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n      isOnline\r\n      seen\r\n      lastMessage\r\n      lastMessageSender\r\n      lastMessageCreatedAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Checks if user is online in real time\r\n */\r\nexport const IS_USER_ONLINE_SUBSCRIPTION = gql`\r\n  subscription($authUserId: ID!, $userId: ID!) {\r\n    isUserOnline(authUserId: $authUserId, userId: $userId) {\r\n      userId\r\n      isOnline\r\n    }\r\n  }\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\n/**\r\n * Gets user's specific conversation\r\n */\r\nexport const GET_MESSAGES = gql`\r\n  query($authUserId: ID!, $userId: ID!) {\r\n    getMessages(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets user's specific conversation in real time\r\n */\r\nexport const GET_MESSAGES_SUBSCRIPTION = gql`\r\n  subscription($authUserId: ID!, $userId: ID!) {\r\n    messageCreated(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a message\r\n */\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation($input: CreateMessageInput!) {\r\n    createMessage(input: $input) {\r\n      id\r\n      isFirstMessage\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's new conversation in real time\r\n */\r\nexport const GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql`\r\n  subscription {\r\n    newConversation {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n      isOnline\r\n      seen\r\n      lastMessage\r\n      lastMessageSender\r\n      lastMessageCreatedAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates message seen property\r\n */\r\nexport const UPDATE_MESSAGE_SEEN = gql`\r\n  mutation($input: UpdateMessageSeenInput!) {\r\n    updateMessageSeen(input: $input)\r\n  }\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\n/**\r\n * Records to select from notifications\r\n */\r\nconst notificationPayload = `\r\n  id\r\n  createdAt\r\n  author {\r\n    id\r\n    fullName\r\n    username\r\n    image\r\n  }\r\n  follow {\r\n    id\r\n  }\r\n  comment {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n  like {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a notification for user\r\n */\r\nexport const CREATE_NOTIFICATION = gql`\r\n  mutation($input: CreateNotificationInput!) {\r\n    createNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a notification\r\n */\r\nexport const DELETE_NOTIFICATION = gql`\r\n  mutation($input: DeleteNotificationInput!) {\r\n    deleteNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets notifications for user\r\n */\r\nexport const GET_USER_NOTIFICATION = gql`\r\n  query($userId: ID!, $skip: Int, $limit: Int) {\r\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      notifications {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates notification seen property\r\n */\r\nexport const UPDATE_NOTIFICATION_SEEN = gql`\r\n  mutation($input: UpdateNotificationSeenInput!) {\r\n    updateNotificationSeen(input: $input)\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's notifications in real time\r\n */\r\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\r\n  subscription {\r\n    notificationCreatedOrDeleted {\r\n      operation\r\n      notification {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * User icon, that uses theme color options\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const UserIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '24';\r\n  const DEFAULT_COLOR = theme.colors.grey[600];\r\n\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width || DEFAULT_WIDTH} viewBox=\"0 0 53 53\">\r\n      <path\r\n        d=\"M18.613 41.552l-7.907 4.313a7.106 7.106 0 0 0-1.269.903A26.377 26.377 0 0 0 26.5 53c6.454 0 12.367-2.31 16.964-6.144a7.015 7.015 0 0 0-1.394-.934l-8.467-4.233a3.229 3.229 0 0 1-1.785-2.888v-3.322c.238-.271.51-.619.801-1.03a19.482 19.482 0 0 0 2.632-5.304c1.086-.335 1.886-1.338 1.886-2.53v-3.546c0-.78-.347-1.477-.886-1.965v-5.126s1.053-7.977-9.75-7.977-9.75 7.977-9.75 7.977v5.126a2.644 2.644 0 0 0-.886 1.965v3.546c0 .934.491 1.756 1.226 2.231.886 3.857 3.206 6.633 3.206 6.633v3.24a3.232 3.232 0 0 1-1.684 2.833z\"\r\n        fill=\"#e7eced\"\r\n      />\r\n      <path\r\n        d=\"M26.953.004C12.32-.246.254 11.414.004 26.047-.138 34.344 3.56 41.801 9.448 46.76a7.041 7.041 0 0 1 1.257-.894l7.907-4.313a3.23 3.23 0 0 0 1.683-2.835v-3.24s-2.321-2.776-3.206-6.633a2.66 2.66 0 0 1-1.226-2.231v-3.546c0-.78.347-1.477.886-1.965v-5.126S15.696 8 26.499 8s9.75 7.977 9.75 7.977v5.126c.54.488.886 1.185.886 1.965v3.546c0 1.192-.8 2.195-1.886 2.53a19.482 19.482 0 0 1-2.632 5.304c-.291.411-.563.759-.801 1.03V38.8c0 1.223.691 2.342 1.785 2.888l8.467 4.233a7.05 7.05 0 0 1 1.39.932c5.71-4.762 9.399-11.882 9.536-19.9C53.246 12.32 41.587.254 26.953.004z\"\r\n        fill={theme.colors[color] || DEFAULT_COLOR}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Close (X) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const CloseIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '12';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 47.971 47.971\"\r\n    >\r\n      <path d=\"M28.228 23.986L47.092 5.122a2.998 2.998 0 0 0 0-4.242 2.998 2.998 0 0 0-4.242 0L23.986 19.744 5.121.88a2.998 2.998 0 0 0-4.242 0 2.998 2.998 0 0 0 0 4.242l18.865 18.864L.879 42.85a2.998 2.998 0 1 0 4.242 4.241l18.865-18.864L42.85 47.091c.586.586 1.354.879 2.121.879s1.535-.293 2.121-.879a2.998 2.998 0 0 0 0-4.242L28.228 23.986z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Upload image icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const UploadImageIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '20';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width={width || DEFAULT_WIDTH}>\r\n      <path\r\n        d=\"M50 40c-8.285 0-15 6.718-15 15 0 8.285 6.715 15 15 15 8.283 0 15-6.715 15-15 0-8.282-6.717-15-15-15zm40-15H78c-1.65 0-3.428-1.28-3.949-2.846l-3.102-9.309C70.426 11.28 68.65 10 67 10H33c-1.65 0-3.428 1.28-3.949 2.846l-3.102 9.309C25.426 23.72 23.65 25 22 25H10C4.5 25 0 29.5 0 35v45c0 5.5 4.5 10 10 10h80c5.5 0 10-4.5 10-10V35c0-5.5-4.5-10-10-10zM50 80c-13.807 0-25-11.193-25-25 0-13.806 11.193-25 25-25 13.805 0 25 11.194 25 25 0 13.807-11.195 25-25 25zm36.5-38.007a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z\"\r\n        fill={theme.colors[color] || DEFAULT_COLOR}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\nimport { get } from 'lodash';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const LikeIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={get(theme.colors, color) || DEFAULT_COLOR}\r\n      viewBox=\"0 0 511.999 511.999\"\r\n    >\r\n      <path d=\"M83.578 167.256H16.716C7.524 167.256 0 174.742 0 183.971v300.881c0 9.225 7.491 16.713 16.716 16.713h66.862c9.225 0 16.716-7.489 16.716-16.713V183.971c0-9.229-7.525-16.715-16.716-16.715zM470.266 167.256c-2.692-.456-128.739 0-128.739 0l17.606-48.032c12.148-33.174 4.283-83.827-29.424-101.835-10.975-5.864-26.309-8.809-38.672-5.697-7.09 1.784-13.321 6.478-17.035 12.767-4.271 7.233-3.83 15.676-5.351 23.696-3.857 20.342-13.469 39.683-28.354 54.2-25.952 25.311-106.571 98.331-106.571 98.331v267.45h278.593c37.592.022 62.228-41.958 43.687-74.749 22.101-14.155 29.66-43.97 16.716-66.862 22.102-14.155 29.66-43.97 16.716-66.862 38.134-24.423 25.385-84.871-19.172-92.407z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post comment icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const PostCommentIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 58 58\" width={width || DEFAULT_WIDTH}>\r\n      <path\r\n        d=\"M29 1.5c-16.016 0-29 11.641-29 26 0 5.292 1.768 10.211 4.796 14.318C4.398 46.563 3.254 53.246 0 56.5c0 0 9.943-1.395 16.677-5.462l.022.009c2.764-1.801 5.532-3.656 6.105-4.126.3-.421.879-.548 1.33-.277.296.178.483.503.489.848.01.622-.005.784-5.585 4.421A31.914 31.914 0 0 0 29 53.5c16.016 0 29-11.641 29-26s-12.984-26-29-26z\"\r\n        fill={theme.colors[color] || DEFAULT_COLOR}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Explore page icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const ExploreIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '28';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 487.601 487.601\"\r\n    >\r\n      <path d=\"M379 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\r\n      <path d=\"M454.5 197.75c-2.7-2.6-5.6-5.1-8.6-7.5l-41-34.8c-15.8-11.2-34.6-18.3-55-19.7l2.2 2.2-24.9-25h-.2c-6.9-6.3-16.2-10.2-26.3-10.2-17.4 0-32.1 11.3-37.1 27-5-3.2-10.8-5.1-17.1-5.5-1-.1-2.1-.1-3.1-.1-7.1 0-13.7 2.1-19.3 5.6-5.1-15.6-19.8-26.9-37.1-26.9-10.1 0-19.3 3.8-26.3 10.2h-.2l-24.9 25 2.2-2.2c-20.4 1.4-39.3 8.6-55 19.7l-41 34.8c-3 2.3-5.9 4.8-8.6 7.5-20.5 19.8-33.2 47.5-33.2 78.2 0 60 48.8 108.8 108.8 108.8 55.4 0 101.3-41.7 107.9-95.4 8 4.6 17.3 7.2 27.1 7.2 9.9 0 19.1-2.6 27.1-7.2 6.7 53.6 52.5 95.3 107.9 95.3 60 0 108.8-48.8 108.8-108.8.1-30.7-12.6-58.4-33.1-78.2zm-345.7 152.5c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c.1 40.9-33.2 74.2-74.2 74.2zm135.1-84.4c-13.3 0-24.1-10.8-24.1-24.1s10.8-24.1 24.1-24.1 24.1 10.8 24.1 24.1-10.8 24.1-24.1 24.1zm135.1 84.4c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c0 40.9-33.2 74.2-74.2 74.2z\" />\r\n      <path d=\"M108.8 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Notifications icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const NotificationIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '23';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 611.999 611.999\"\r\n    >\r\n      <path d=\"M570.107 500.254c-65.037-29.371-67.511-155.441-67.559-158.622v-84.578c0-81.402-49.742-151.399-120.427-181.203C381.969 34 347.883 0 306.001 0c-41.883 0-75.968 34.002-76.121 75.849-70.682 29.804-120.425 99.801-120.425 181.203v84.578c-.046 3.181-2.522 129.251-67.561 158.622a17.257 17.257 0 0 0 7.103 32.986h164.88c3.38 18.594 12.172 35.892 25.619 49.903 17.86 18.608 41.479 28.856 66.502 28.856 25.025 0 48.644-10.248 66.502-28.856 13.449-14.012 22.241-31.311 25.619-49.903h164.88a17.26 17.26 0 0 0 16.872-13.626 17.25 17.25 0 0 0-9.764-19.358zm-85.673-60.395c6.837 20.728 16.518 41.544 30.246 58.866H97.32c13.726-17.32 23.407-38.135 30.244-58.866h356.87zM306.001 34.515c18.945 0 34.963 12.73 39.975 30.082-12.912-2.678-26.282-4.09-39.975-4.09s-27.063 1.411-39.975 4.09c5.013-17.351 21.031-30.082 39.975-30.082zM143.97 341.736v-84.685c0-89.343 72.686-162.029 162.031-162.029s162.031 72.686 162.031 162.029v84.826c.023 2.596.427 29.879 7.303 63.465H136.663c6.88-33.618 7.286-60.949 7.307-63.606zm162.031 235.749c-26.341 0-49.33-18.992-56.709-44.246h113.416c-7.379 25.254-30.364 44.246-56.707 44.246z\" />\r\n      <path d=\"M306.001 119.235c-74.25 0-134.657 60.405-134.657 134.654 0 9.531 7.727 17.258 17.258 17.258 9.531 0 17.258-7.727 17.258-17.258 0-55.217 44.923-100.139 100.142-100.139 9.531 0 17.258-7.727 17.258-17.258-.001-9.532-7.728-17.257-17.259-17.257z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Menu icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const MenuIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M491.318 235.318H20.682C9.26 235.318 0 244.577 0 256s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 78.439H20.682C9.26 78.439 0 87.699 0 99.121c0 11.422 9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.26 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 392.197H20.682C9.26 392.197 0 401.456 0 412.879s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682s-9.259-20.682-20.682-20.682z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Home icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const HomeIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M506.555 208.064L263.859 30.367a13.3 13.3 0 0 0-15.716 0L5.445 208.064c-5.928 4.341-7.216 12.665-2.875 18.593s12.666 7.214 18.593 2.875L256 57.588l234.837 171.943a13.236 13.236 0 0 0 7.848 2.57c4.096 0 8.138-1.885 10.744-5.445 4.342-5.927 3.054-14.251-2.874-18.592z\" />\r\n      <path d=\"M442.246 232.543c-7.346 0-13.303 5.956-13.303 13.303v211.749H322.521V342.009c0-36.68-29.842-66.52-66.52-66.52s-66.52 29.842-66.52 66.52v115.587H83.058V245.847c0-7.347-5.957-13.303-13.303-13.303s-13.303 5.956-13.303 13.303V470.9c0 7.347 5.957 13.303 13.303 13.303h133.029c6.996 0 12.721-5.405 13.251-12.267.032-.311.052-.651.052-1.036V342.01c0-22.009 17.905-39.914 39.914-39.914s39.914 17.906 39.914 39.914V470.9c0 .383.02.717.052 1.024.524 6.867 6.251 12.279 13.251 12.279h133.029c7.347 0 13.303-5.956 13.303-13.303V245.847c-.001-7.348-5.957-13.304-13.304-13.304z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * People icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const PeopleIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '20';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 505.4 505.4\"\r\n    >\r\n      <path d=\"M437.1 233.45c14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7-31.9 0-57.7 25.8-57.7 57.7 0 19.5 9.7 36.8 24.6 47.2-12.7 4.4-24.3 11.2-34.1 20-13.5-11.5-29.4-20.3-46.8-25.5 21.1-12.8 35.3-36.1 35.3-62.6 0-40.4-32.7-73.1-73.1-73.1-40.4 0-73.1 32.8-73.1 73.1 0 26.5 14.1 49.8 35.3 62.6-17.2 5.2-32.9 13.9-46.3 25.2-9.8-8.6-21.2-15.3-33.7-19.6 14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7s-57.7 25.8-57.7 57.7c0 19.5 9.7 36.8 24.6 47.2-39.7 13.7-68.2 51.4-68.2 95.7v6.6c0 .2.2.4.4.4h122.3c-.7 5.5-1.1 11.2-1.1 16.9v6.8c0 29.4 23.8 53.2 53.2 53.2h155c29.4 0 53.2-23.8 53.2-53.2v-6.8c0-5.7-.4-11.4-1.1-16.9H505c.2 0 .4-.2.4-.4v-6.6c-.2-44.4-28.6-82.1-68.3-95.8zm-74.8-47.3c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.7-.4-40.9-18.9-40.9-41.7zm-167.4-20.8c0-31.5 25.6-57.1 57.1-57.1s57.1 25.6 57.1 57.1c0 30.4-23.9 55.3-53.8 57h-6.6c-29.9-1.7-53.8-26.6-53.8-57zm-135.6 20.8c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.6-.4-40.9-18.9-40.9-41.7zm66.2 134H16.2c4.5-42.6 40.5-76 84.2-76.3h1.2c20.8.1 39.8 7.8 54.5 20.3-14.4 15.6-25.1 34.8-30.6 56zm241.3 39.8c0 20.5-16.7 37.2-37.2 37.2h-155c-20.5 0-37.2-16.7-37.2-37.2v-6.8c0-62.1 49.6-112.9 111.3-114.7 1.1.1 2.3.1 3.4.1s2.3 0 3.4-.1c61.7 1.8 111.3 52.6 111.3 114.7v6.8zm11.9-39.8c-5.5-21.1-16-40-30.3-55.6 14.8-12.8 34-20.5 55-20.7h1.2c43.7.3 79.7 33.7 84.2 76.3H378.7z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Search icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const SearchIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '16';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 56.966 56.966\"\r\n    >\r\n      <path d=\"M55.146 51.887L41.588 37.786A22.926 22.926 0 0 0 46.984 23c0-12.682-10.318-23-23-23s-23 10.318-23 23 10.318 23 23 23c4.761 0 9.298-1.436 13.177-4.162l13.661 14.208c.571.593 1.339.92 2.162.92.779 0 1.518-.297 2.079-.837a3.004 3.004 0 0 0 .083-4.242zM23.984 6c9.374 0 17 7.626 17 17s-7.626 17-17 17-17-7.626-17-17 7.626-17 17-17z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Dots icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const DotsIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '17';\r\n  const DEFAULT_COLOR = theme.colors.text.primary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 612 612\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"69.545\" cy=\"306\" r=\"69.545\" />\r\n      <circle cx=\"306\" cy=\"306\" r=\"69.545\" />\r\n      <circle cx=\"542.455\" cy=\"306\" r=\"69.545\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const InfoIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 330 330\"\r\n    >\r\n      <path d=\"M165 0C74.019 0 0 74.02 0 165.001 0 255.982 74.019 330 165 330s165-74.018 165-164.999S255.981 0 165 0zm0 300c-74.44 0-135-60.56-135-134.999S90.56 30 165 30s135 60.562 135 135.001C300 239.44 239.439 300 165 300z\" />\r\n      <path d=\"M164.998 70c-11.026 0-19.996 8.976-19.996 20.009 0 11.023 8.97 19.991 19.996 19.991 11.026 0 19.996-8.968 19.996-19.991 0-11.033-8.97-20.009-19.996-20.009zM165 140c-8.284 0-15 6.716-15 15v90c0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15v-90c0-8.284-6.716-15-15-15z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const WarningIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M256 0C114.497 0 0 114.507 0 256c0 141.503 114.507 256 256 256 141.503 0 256-114.507 256-256C512 114.497 397.493 0 256 0zm0 472c-119.393 0-216-96.615-216-216 0-119.393 96.615-216 216-216 119.393 0 216 96.615 216 216 0 119.393-96.615 216-216 216z\" />\r\n      <path d=\"M256 128.877c-11.046 0-20 8.954-20 20V277.67c0 11.046 8.954 20 20 20s20-8.954 20-20V148.877c0-11.046-8.954-20-20-20z\" />\r\n      <circle cx=\"256\" cy=\"349.16\" r=\"27\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const ErrorIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 486.463 486.463\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n    >\r\n      <path d=\"M243.225 333.382c-13.6 0-25 11.4-25 25s11.4 25 25 25c13.1 0 25-11.4 24.4-24.4.6-14.3-10.7-25.6-24.4-25.6z\" />\r\n      <path d=\"M474.625 421.982c15.7-27.1 15.8-59.4.2-86.4l-156.6-271.2c-15.5-27.3-43.5-43.5-74.9-43.5s-59.4 16.3-74.9 43.4l-156.8 271.5c-15.6 27.3-15.5 59.8.3 86.9 15.6 26.8 43.5 42.9 74.7 42.9h312.8c31.3 0 59.4-16.3 75.2-43.6zm-34-19.6c-8.7 15-24.1 23.9-41.3 23.9h-312.8c-17 0-32.3-8.7-40.8-23.4-8.6-14.9-8.7-32.7-.1-47.7l156.8-271.4c8.5-14.9 23.7-23.7 40.9-23.7 17.1 0 32.4 8.9 40.9 23.8l156.7 271.4c8.4 14.6 8.3 32.2-.3 47.1z\" />\r\n      <path d=\"M237.025 157.882c-11.9 3.4-19.3 14.2-19.3 27.3.6 7.9 1.1 15.9 1.7 23.8 1.7 30.1 3.4 59.6 5.1 89.7.6 10.2 8.5 17.6 18.7 17.6s18.2-7.9 18.7-18.2c0-6.2 0-11.9.6-18.2 1.1-19.3 2.3-38.6 3.4-57.9.6-12.5 1.7-25 2.3-37.5 0-4.5-.6-8.5-2.3-12.5-5.1-11.2-17-16.9-28.9-14.1z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const SuccessIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M468.907 214.604c-11.423 0-20.682 9.26-20.682 20.682v20.831c-.031 54.338-21.221 105.412-59.666 143.812-38.417 38.372-89.467 59.5-143.761 59.5h-.12C132.506 459.365 41.3 368.056 41.364 255.883c.031-54.337 21.221-105.411 59.667-143.813 38.417-38.372 89.468-59.5 143.761-59.5h.12c28.672.016 56.49 5.942 82.68 17.611 10.436 4.65 22.659-.041 27.309-10.474 4.648-10.433-.04-22.659-10.474-27.309-31.516-14.043-64.989-21.173-99.492-21.192h-.144c-65.329 0-126.767 25.428-172.993 71.6C25.536 129.014.038 190.473 0 255.861c-.037 65.386 25.389 126.874 71.599 173.136 46.21 46.262 107.668 71.76 173.055 71.798h.144c65.329 0 126.767-25.427 172.993-71.6 46.262-46.209 71.76-107.668 71.798-173.066v-20.842c0-11.423-9.259-20.683-20.682-20.683z\" />\r\n      <path d=\"M505.942 39.803c-8.077-8.076-21.172-8.076-29.249 0L244.794 271.701l-52.609-52.609c-8.076-8.077-21.172-8.077-29.248 0-8.077 8.077-8.077 21.172 0 29.249l67.234 67.234a20.616 20.616 0 0 0 14.625 6.058 20.618 20.618 0 0 0 14.625-6.058L505.942 69.052c8.077-8.077 8.077-21.172 0-29.249z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\n/**\r\n * Delete (trash) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const EmptyIcon = () => {\r\n  return (\r\n    <svg width=\"100\" height=\"100\" viewBox=\"0 0 184 152\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(24 31.67)\">\r\n          <ellipse fillOpacity=\".8\" fill=\"#f5f5f7\" cx=\"67.797\" cy=\"106.89\" rx=\"67.797\" ry=\"12.668\" />\r\n          <path\r\n            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n            fill=\"#aeb8c2\"\r\n          />\r\n          <path\r\n            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\r\n            fill='url(\"#linearGradient-1\")'\r\n            transform=\"translate(13.56)\"\r\n          />\r\n          <path\r\n            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n            fill=\"#f5f5f7\"\r\n          />\r\n          <path\r\n            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zm.262 39.814h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zm0 11.763h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zm78.873 43.502c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569a7.33 7.33 0 0 1-.221 1.789z\"\r\n            fill=\"#dce0e6\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n          fill=\"#dce0e6\"\r\n        />\r\n        <g transform=\"translate(149.65 15.383)\" fill=\"#fff\">\r\n          <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\r\n          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const NotFoundIcon = () => {\r\n  return (\r\n    <svg width=\"100\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n      <path\r\n        d=\"M86.071 441.452a18.896 18.896 0 0 1 4.213 15.326l-6.891 41.43a8.091 8.091 0 0 1-9.304 6.659c-4.404-.736-7.379-4.91-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H32.452a2.66 2.66 0 0 0-2.057.955 2.675 2.675 0 0 0-.603 2.189l6.891 41.431c.734 4.414-2.241 8.587-6.645 9.323-4.401.734-8.569-2.246-9.303-6.659l-6.891-41.431a18.9 18.9 0 0 1 4.215-15.327 18.814 18.814 0 0 1 14.393-6.684H45.81v-83.172c0-4.474 3.62-8.101 8.084-8.101h118.568c4.465 0 8.084 3.627 8.084 8.101s-3.62 8.101-8.084 8.101H61.979v75.071h9.699a18.811 18.811 0 0 1 14.393 6.686zm245.382 39.221H180.547c-4.465 0-8.084 3.627-8.084 8.101 0 4.474 3.62 8.101 8.084 8.101h150.905c4.465 0 8.084-3.627 8.084-8.101.001-4.474-3.619-8.101-8.083-8.101z\"\r\n        fill=\"#84a7b7\"\r\n      />\r\n      <path\r\n        d=\"M378.65 300.935l-28.255 113.257c-4.799 19.234-22.044 32.727-41.829 32.727H203.431c-19.785 0-37.03-13.493-41.829-32.727l-28.255-113.257c-3.402-13.635 6.889-26.843 20.914-26.843h203.473c14.028 0 24.318 13.209 20.916 26.843z\"\r\n        fill=\"#547d87\"\r\n      />\r\n      <path\r\n        d=\"M481.302 356.408a8.081 8.081 0 0 1-7.028 4.097H319.97c-10.419 25.812-35.553 43.206-63.97 43.206-31.674 0-59.284-21.602-66.966-52.395l-5.872-23.538c-6.804-27.27 13.779-53.686 41.829-53.686h117.242l-17.516 70.211h135.338L385.263 218.39a42.827 42.827 0 0 1-21.473 5.746H148.212c-23.812 0-43.116-19.344-43.116-43.206v-21.603c0-83.519 67.562-151.223 150.905-151.223s150.905 67.705 150.905 151.223v21.603a43.069 43.069 0 0 1-9.224 26.691l83.539 140.642a8.116 8.116 0 0 1 .081 8.145z\"\r\n        fill=\"#6b95a0\"\r\n      />\r\n      <path\r\n        d=\"M503.916 328.1c0 17.896-14.477 32.405-32.337 32.405-17.86 0-32.337-14.508-32.337-32.405 0-17.896 14.477-32.405 32.337-32.405 17.86 0 32.337 14.509 32.337 32.405zM40.421 295.695c-17.86 0-32.337 14.508-32.337 32.405s14.477 32.405 32.337 32.405 32.337-14.508 32.337-32.405c0-17.896-14.477-32.405-32.337-32.405z\"\r\n        fill=\"#547d87\"\r\n      />\r\n      <path\r\n        d=\"M51.2 328.1c0 5.966-4.826 10.802-10.779 10.802s-10.779-4.835-10.779-10.802 4.826-10.802 10.779-10.802S51.2 322.135 51.2 328.1zm420.379-10.801c-5.953 0-10.779 4.835-10.779 10.802s4.826 10.802 10.779 10.802 10.779-4.835 10.779-10.802c0-5.966-4.826-10.802-10.779-10.802z\"\r\n        fill=\"#6b95a0\"\r\n      />\r\n      <path\r\n        d=\"M199.411 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\r\n        fill=\"#fc8059\"\r\n      />\r\n      <path\r\n        d=\"M231.747 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.465 0 8.084 3.627 8.084 8.101z\"\r\n        fill=\"#ffd880\"\r\n      />\r\n      <path\r\n        d=\"M317.979 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\r\n        fill=\"#b5e5bc\"\r\n      />\r\n      <path\r\n        d=\"M212.884 349.703h-21.558c-5.953 0-10.779-4.826-10.779-10.779v-21.648c0-5.953 4.826-10.779 10.779-10.779h21.558c5.953 0 10.779 4.826 10.779 10.779v21.648c0 5.954-4.826 10.779-10.779 10.779z\"\r\n        fill=\"#cfdfe2\"\r\n      />\r\n      <path\r\n        d=\"M158.989 121.519c0-29.827 24.13-54.008 53.895-54.008s53.895 24.18 53.895 54.008-24.13 54.008-53.895 54.008-53.895-24.18-53.895-54.008z\"\r\n        fill=\"#547d87\"\r\n      />\r\n      <path\r\n        d=\"M180.547 121.519c0-17.896 14.477-32.405 32.337-32.405s32.337 14.508 32.337 32.405-14.477 32.405-32.337 32.405-32.337-14.508-32.337-32.405z\"\r\n        fill=\"#cfdfe2\"\r\n      />\r\n      <path\r\n        d=\"M212.884 121.519c0-8.949 7.239-16.203 16.168-16.203s16.168 7.254 16.168 16.203-7.239 16.203-16.168 16.203-16.168-7.254-16.168-16.203z\"\r\n        fill=\"#fff\"\r\n      />\r\n      <path\r\n        d=\"M427.65 41.321c44.199 44.292 44.199 116.104 0 160.396s-115.86 44.292-160.059 0-44.199-116.104 0-160.396 115.86-44.292 160.059 0z\"\r\n        fill=\"#84a7b7\"\r\n      />\r\n      <path\r\n        d=\"M423.074 121.519c0 41.759-33.781 75.611-75.453 75.611s-75.453-33.852-75.453-75.611 33.781-75.611 75.453-75.611 75.453 33.853 75.453 75.611z\"\r\n        fill=\"#c3e4ed\"\r\n      />\r\n      <path\r\n        d=\"M392.807 60.962a75.77 75.77 0 0 1 25.89 35.159l-96.422 96.625c-14.102-5.04-26.274-14.155-35.084-25.945L392.807 60.962zm-116.262 85.956a75.226 75.226 0 0 0 4.534 10.256L383.201 54.836a74.936 74.936 0 0 0-10.235-4.542l-96.421 96.624z\"\r\n        fill=\"#dcf3f9\"\r\n      />\r\n      <path\r\n        d=\"M347.957 64.98c11.906 0 21.558 9.672 21.558 21.603s-9.651 21.603-21.558 21.603c-11.906 0-21.558-9.672-21.558-21.603s9.653-21.603 21.558-21.603z\"\r\n        fill=\"#fff\"\r\n      />\r\n      <path\r\n        d=\"M339.537 500.928c0 4.474-3.618 8.101-8.084 8.101H180.547c-4.466 0-8.084-3.627-8.084-8.101 0-4.474 3.618-8.101 8.084-8.101h150.905c4.466-.001 8.085 3.626 8.085 8.101zM512 328.101c0 22.335-18.132 40.506-40.421 40.506-15.48 0-28.955-8.765-35.743-21.603H369.36a10.21 10.21 0 0 1-.35 0h-91.452c-4.466 0-8.084-3.626-8.084-8.101s3.618-8.101 8.084-8.101h85.31l7.94-31.831a13.442 13.442 0 0 0-2.45-11.583 13.38 13.38 0 0 0-10.62-5.193H154.263a13.38 13.38 0 0 0-10.62 5.193 13.436 13.436 0 0 0-2.45 11.583l28.255 113.255c3.905 15.658 17.881 26.592 33.985 26.592h105.135c16.104 0 30.08-10.934 33.985-26.592l13.394-53.686a8.09 8.09 0 0 1 9.805-5.895c4.332 1.085 6.965 5.484 5.882 9.825l-13.394 53.686c-5.709 22.882-26.134 38.863-49.672 38.863H203.432c-23.538 0-43.963-15.982-49.672-38.865l-16.51-66.182H76.164c-5.574 10.541-15.659 18.338-27.659 20.79v71.024h11.528a18.815 18.815 0 0 1 14.393 6.685 18.894 18.894 0 0 1 4.215 15.324l-6.892 41.432a8.09 8.09 0 0 1-7.965 6.77c-.441 0-.888-.036-1.339-.112-4.403-.735-7.379-4.909-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H20.809a2.66 2.66 0 0 0-2.057.955 2.673 2.673 0 0 0-.601 2.19l6.891 41.43c.734 4.414-2.242 8.588-6.645 9.323-4.42.739-8.569-2.245-9.303-6.658l-6.892-41.431a18.895 18.895 0 0 1 4.215-15.326 18.812 18.812 0 0 1 14.393-6.685h11.528v-71.023C13.909 366.999 0 350.632 0 331.072c0-22.335 18.132-40.506 40.421-40.506s40.421 18.17 40.421 40.506c0 .909-.029 1.807-.088 2.7h52.455l-7.703-30.871c-2.229-8.936-.264-18.225 5.393-25.485 5.657-7.26 14.172-11.424 23.364-11.424h203.474c9.191 0 17.708 4.165 23.364 11.424 5.657 7.261 7.622 16.55 5.393 25.485l-6.961 27.9h51.714a40.969 40.969 0 0 1-.088-2.7c0-13.215 6.348-24.973 16.148-32.37l-40.478-68.148c-33.636 18.839-74.394 20.393-109.202 4.653H148.211c-28.231 0-51.2-23.016-51.2-51.308v-21.603C97.011 71.473 168.333.001 256 .001c16.758 0 33.244 2.602 49.054 7.738 43.144-16.134 93.68-6.852 128.314 27.853 47.28 47.381 47.28 124.473 0 171.854a121.792 121.792 0 0 1-12.977 11.291l41.585 70.013a40.22 40.22 0 0 1 9.603-1.155c22.289 0 40.421 18.171 40.421 40.506zM271.391 216.034a122.731 122.731 0 0 1-9.517-8.588c-15.088-15.122-25.712-33.525-31.204-53.605a40.302 40.302 0 0 1-17.786 4.134c-22.289 0-40.421-18.171-40.421-40.506s18.132-40.506 40.421-40.506a40.408 40.408 0 0 1 19.918 5.276c5.901-17.371 15.745-33.29 29.073-46.647a121.31 121.31 0 0 1 21.024-16.852A143.114 143.114 0 0 0 256 16.203c-78.752 0-142.821 64.205-142.821 143.122v21.603c0 19.358 15.715 35.105 35.032 35.105h123.18v.001zm-45.033-94.515c0-7.695.709-15.282 2.097-22.684-4.351-3.676-9.779-5.67-15.57-5.67-13.372 0-24.253 10.903-24.253 24.303s10.88 24.303 24.253 24.303a24.175 24.175 0 0 0 14.441-4.784 123.37 123.37 0 0 1-.968-15.468zm195.575 74.47c19.851-19.891 30.783-46.339 30.783-74.47s-10.932-54.578-30.783-74.47c-19.849-19.893-46.241-30.847-74.312-30.847-13.492 0-26.594 2.531-38.769 7.367-.401.202-.818.37-1.247.504-12.676 5.227-24.313 12.97-34.296 22.975-19.85 19.891-30.783 46.339-30.783 74.47s10.932 54.578 30.783 74.47c40.974 41.063 107.65 41.063 148.624.001zM64.674 331.072c0-13.4-10.88-24.303-24.253-24.303s-24.253 10.902-24.253 24.303c0 13.4 10.88 24.303 24.253 24.303s24.253-10.903 24.253-24.303zm431.158-2.971c0-13.4-10.88-24.303-24.253-24.303a24.078 24.078 0 0 0-10.018 2.17c-8.388 3.828-14.235 12.308-14.235 22.132a24.293 24.293 0 0 0 1.434 8.24c3.376 9.357 12.33 16.064 22.818 16.064 13.373.001 24.254-10.902 24.254-24.303zm-64.674-206.582c0 22.361-8.69 43.383-24.467 59.194-15.778 15.812-36.756 24.519-59.07 24.519s-43.291-8.708-59.07-24.519c-15.777-15.811-24.467-36.833-24.467-59.194s8.69-43.383 24.467-59.194 36.756-24.519 59.07-24.519 43.291 8.708 59.07 24.519 24.467 36.834 24.467 59.194zm-16.169 0c0-18.032-7.007-34.986-19.733-47.736-12.722-12.753-29.641-19.775-47.635-19.775s-34.913 7.022-47.635 19.774c-12.726 12.75-19.733 29.704-19.733 47.737s7.007 34.986 19.733 47.736c12.723 12.753 29.641 19.774 47.635 19.774s34.913-7.022 47.635-19.774c12.726-12.749 19.733-29.703 19.733-47.736zM212.884 298.397c10.401 0 18.863 8.48 18.863 18.903v21.603c0 10.423-8.463 18.903-18.863 18.903h-21.558c-10.401 0-18.863-8.48-18.863-18.903V317.3c0-10.423 8.463-18.903 18.863-18.903h21.558zm0 16.201h-21.558a2.7 2.7 0 0 0-2.695 2.7v21.603a2.7 2.7 0 0 0 2.695 2.7h21.558a2.7 2.7 0 0 0 2.695-2.7v-21.603a2.7 2.7 0 0 0-2.695-2.7z\"\r\n        fill=\"#4c4c4c\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Envelope (message) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const EnvelopeIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512.001 512.001\"\r\n    >\r\n      <path d=\"M511.646 126.634c-.021-14.449-11.782-26.189-26.227-26.189h-.034l-459.195.631c-7.005.009-13.588 2.746-18.535 7.706C2.709 113.743-.009 120.334 0 127.337l.355 258.029c.009 7.005 2.746 13.588 7.706 18.535 4.951 4.938 11.526 7.655 18.519 7.655h.035l459.194-.631c14.458-.02 26.207-11.799 26.19-26.261l-.353-258.03zm-55.035.076L256.02 266.154 55.04 127.262l401.571-.552zM340.846 292.471l118.971 92.265-407.972.56 119.696-92.825c5.722-4.439 6.764-12.675 2.326-18.399-4.439-5.722-12.675-6.764-18.399-2.326L26.561 371.715l-.32-232.475 222.344 153.657a13.093 13.093 0 0 0 7.455 2.325c2.617 0 5.236-.783 7.485-2.346l221.912-154.264.336 233.066-128.856-99.931c-5.719-4.437-13.959-3.396-18.397 2.326-4.439 5.722-3.398 13.96 2.326 18.398z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Envelope open (message) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const EnvelopeOpenIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '23';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M494.2 488V187c0-3.1-3.9-7-7.7-9.9L407.8 120V56.9c0-6.2-5.2-10.4-10.4-10.4h-89.7L262 13.2c-3.1-2.1-8.3-2.1-11.5 0l-45.7 33.3h-89.7c-6.2 0-10.4 5.2-10.4 10.4v62.4L25 177.2c-4.7 2.9-7.7 6.7-7.7 9.9v303c0 5.9 4.7 10 9.6 10.4h456.8c6.7-.1 10.5-5.3 10.5-12.5zm-19.8-282.3v263.6L302.3 331.5l172.1-125.8zm-7.7-18.3l-58.9 42.9v-86.2l58.9 43.3zM255.8 32.9l18.3 13.5h-36.7l18.4-13.5zM387 67.3v178.2l-131.2 95.6-131.2-95.6V67.3H387zM37.2 205.7l172.1 125.8L37.2 470.1V205.7zm67.6 25.4l-60.4-44 60.4-43.9v87.9zM55.9 480.6L226 343.7l23.5 17.2c4.5 3.4 7.9 3.4 12.5 0l23.5-17.2 171.1 136.9H55.9z\" />\r\n      <path d=\"M186.1 118.3h140.5v19.8H186.1zM186.1 181.8h140.5v19.8H186.1zM186.1 245.3h140.5v19.8H186.1z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Close (X) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const SendIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '12';\r\n  const DEFAULT_COLOR = theme.colors.primary.main;\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 448.011 448.011\"\r\n    >\r\n      <path d=\"M438.731 209.463l-416-192c-6.624-3.008-14.528-1.216-19.136 4.48a15.911 15.911 0 00-.384 19.648l136.8 182.4-136.8 182.4c-4.416 5.856-4.256 13.984.352 19.648 3.104 3.872 7.744 5.952 12.448 5.952 2.272 0 4.544-.48 6.688-1.472l416-192c5.696-2.624 9.312-8.288 9.312-14.528s-3.616-11.904-9.28-14.528z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Pencil icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const PencilIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '20';\r\n  const DEFAULT_COLOR = theme.colors.text.primary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 -1 401.523 401\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M370.59 250.973c-5.524 0-10 4.476-10 10v88.789c-.02 16.562-13.438 29.984-30 30H50c-16.563-.016-29.98-13.438-30-30V89.172c.02-16.559 13.438-29.98 30-30h88.79c5.523 0 10-4.477 10-10 0-5.52-4.477-10-10-10H50c-27.602.031-49.969 22.398-50 50v260.594c.031 27.601 22.398 49.968 50 50h280.59c27.601-.032 49.969-22.399 50-50v-88.793c0-5.524-4.477-10-10-10zm0 0\" />\r\n      <path d=\"M376.629 13.441c-17.574-17.574-46.067-17.574-63.64 0L134.581 191.848a9.997 9.997 0 00-2.566 4.402l-23.461 84.7a9.997 9.997 0 0012.304 12.308l84.7-23.465a9.997 9.997 0 004.402-2.566l178.402-178.41c17.547-17.587 17.547-46.055 0-63.641zM156.37 198.348L302.383 52.332l47.09 47.09-146.016 146.016zm-9.406 18.875l37.62 37.625-52.038 14.418zM374.223 74.676L363.617 85.28l-47.094-47.094 10.61-10.605c9.762-9.762 25.59-9.762 35.351 0l11.739 11.734c9.746 9.774 9.746 25.59 0 35.36zm0 0\" />\r\n    </svg>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\n// prettier-ignore\r\n\r\n/**\r\n * Container div for holding UI, using theme screen options\r\n *\r\n * @param {string} maxWidth\r\n * @param {string} padding\r\n * @param {boolean} bordered\r\n * @param {boolean} color\r\n */\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  margin-top: ${p => p.marginTop ? p.theme.spacing[p.marginTop] : 0};\r\n  width: 100%;\r\n  max-width: ${p => (p.maxWidth && p.theme.screen[p.maxWidth])};\r\n  padding: ${p => p.padding ? `0 ${p.theme.spacing[p.padding]}` : `0 ${p.theme.spacing.sm}`};\r\n  z-index: ${p => p.zIndex && p.theme.zIndex[p.zIndex]};\r\n  background-color: ${p => p.color && p.theme.colors[p.color]};\r\n  border-radius: ${p => p.radius && p.theme.radius[p.radius]};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  z-index: ${(p) => p.zIndex && p.theme.zIndex[p.zIndex]};\r\n  min-height: 500px;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: ${(p) => p.theme.screen.xs};\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    width: ${(p) => p.theme.screen.sm};\r\n  }\r\n`;\r\n\r\n/**\r\n * Adds margins to UI, using theme spacing options\r\n *\r\n * @param {string} top\r\n * @param {string} right\r\n * @param {string} bottom\r\n * @param {string} left\r\n * @param {boolean} inline, converts block element to inline block\r\n */\r\nexport const Spacing = styled.div`\r\n  ${(p) => p.top && `margin-top: ${p.theme.spacing[p.top]}`};\r\n  ${(p) => p.right && `margin-right: ${p.theme.spacing[p.right]}`};\r\n  ${(p) => p.bottom && `margin-bottom: ${p.theme.spacing[p.bottom]}`};\r\n  ${(p) => p.left && `margin-left: ${p.theme.spacing[p.left]}`};\r\n  ${(p) => p.inline && `display: inline-block;`}\r\n\r\n  @media (max-width: ${(p) => p.theme.screen.sm}) {\r\n    ${(p) =>\r\n      p.hideOnSm &&\r\n      `\r\n      display: none;\r\n    `}\r\n  }\r\n`;\r\n\r\n/**\r\n * Overlay, on top of the whole UI\r\n */\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: ${(p) => p.theme.zIndex.md};\r\n  background-color: rgba(0, 0, 0, ${(p) => (p.transparency ? p.transparency : '0.8')});\r\n`;\r\n","import styled from 'styled-components';\r\nimport { get } from 'lodash';\r\n\r\n// prettier-ignore\r\n\r\n/**\r\n * Button\r\n *\r\n * @param {string} size\r\n * @param {string} color\r\n * @param {boolean} disabled\r\n * @param {boolean} text, style button as a text\r\n */\r\nexport const Button = styled.button`\r\n  letter-spacing: 0.5px;\r\n  outline: 0;\r\n  transition: opacity 0.1s;\r\n  border: 0;\r\n  color: ${p => p.theme.colors.white};\r\n  font-size: ${p => p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\r\n  background-color: ${p => p.color ? p.theme.colors[p.color] : p.theme.colors.primary.main};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: ${p => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\r\n  white-space: nowrap;\r\n  align-self: flex-start;\r\n\r\n  ${p => p.disabled && `\r\n    background-color: ${p.theme.colors.grey[500]};\r\n    cursor: not-allowed;\r\n  `};\r\n\r\n  ${p => !p.disabled && `\r\n    &:hover {\r\n      opacity .9;\r\n      cursor: pointer;\r\n    }\r\n  `};\r\n\r\n  ${p => p.text && `\r\n    color: ${p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary};\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n  `};\r\n\r\n${p => p.ghost && `\r\n    color: ${p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary};\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n    padding: 0;\r\n    text-align: left;\r\n  `};\r\n\r\n  ${p => p.fullWidth && `\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\n/**\r\n * Input type text\r\n */\r\nexport const InputText = styled.input`\r\n  outline: 0;\r\n  height: 36px;\r\n  width: 100%;\r\n  transition: border 0.1s;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  padding-left: ${(p) => p.theme.spacing.xs};\r\n  border: 1px solid ${(p) => (p.borderColor ? p.theme.colors[p.borderColor] : p.theme.colors.border.main)};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n\r\n  &:focus {\r\n    border-color: ${(p) => p.theme.colors.border.main};\r\n  }\r\n`;\r\n\r\n/**\r\n * Textarea\r\n */\r\nexport const Textarea = styled.textarea`\r\n  outline: 0;\r\n  height: 50px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 0;\r\n  padding-left: ${(p) => p.theme.spacing.sm};\r\n  padding-top: ${(p) => p.theme.spacing.xs};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n\r\n  &::placeholder {\r\n    color: ${(p) => p.theme.colors.text.secondary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Form component\r\n */\r\nexport const Form = styled.form`\r\n  display: block;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  padding: ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.sm};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n","/**\r\n * Available Message types\r\n */\r\n\r\nexport const MessageType = {\r\n  SUCCESS: 'SUCCESS',\r\n  INFO: 'INFO',\r\n  WARNING: 'WARNING',\r\n  ERROR: 'ERROR',\r\n};\r\n\r\nexport const allMessageTypes = Object.keys(MessageType);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport { SuccessIcon, InfoIcon, WarningIcon, ErrorIcon, CloseIcon } from 'components/icons';\r\nimport { Spacing } from './Layout';\r\nimport { Button } from 'components/Form';\r\n\r\nimport theme from 'theme';\r\n\r\nimport { allMessageTypes } from 'constants/MessageType';\r\n\r\nimport { useStore } from 'store';\r\nimport { CLEAR_MESSAGE } from 'store/message';\r\n\r\nconst fade = keyframes`\r\n  from {\r\n    bottom: -60px;\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    bottom: 0;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n/**\r\n * Default styles for message\r\n */\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  box-shadow: ${(p) => p.theme.shadows.md};\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${(p) => p.color && p.color};\r\n  animation: ${fade} 0.3s ease-out forwards;\r\n  color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst Close = styled(Button)`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 24px;\r\n`;\r\n\r\n/**\r\n * Displays global message as feedback in response to user operations\r\n */\r\nconst Message = ({ children, type, autoClose }) => {\r\n  const [, dispatch] = useStore();\r\n\r\n  useEffect(() => {\r\n    if (autoClose) {\r\n      const timer = setTimeout(() => {\r\n        dispatch({ type: CLEAR_MESSAGE });\r\n      }, 5000);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [dispatch, autoClose]);\r\n\r\n  const { success, info, warning, error } = theme.colors;\r\n\r\n  const Colors = {\r\n    SUCCESS: success,\r\n    INFO: info,\r\n    WARNING: warning,\r\n    ERROR: error.main,\r\n  };\r\n\r\n  const MessageType = (type) => {\r\n    const icons = {\r\n      SUCCESS: <SuccessIcon />,\r\n      INFO: <InfoIcon />,\r\n      WARNING: <WarningIcon />,\r\n      ERROR: <ErrorIcon />,\r\n    };\r\n\r\n    return icons[type];\r\n  };\r\n\r\n  return (\r\n    <Root color={Colors[type]}>\r\n      {MessageType(type)}\r\n      <Spacing left={type && 'xs'}>{children}</Spacing>\r\n      <Close ghost onClick={() => dispatch({ type: CLEAR_MESSAGE })}>\r\n        <CloseIcon color=\"white\" />\r\n      </Close>\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  autoClose: true,\r\n};\r\n\r\nMessage.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  type: PropTypes.oneOf(allMessageTypes),\r\n  autoClose: PropTypes.bool,\r\n};\r\n\r\nexport default Message;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\n// prettier-ignore\r\n\r\nconst Load = keyframes`\r\n  0% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  5%,\r\n  95% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  10%,\r\n  59% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\r\n  }\r\n  20% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\r\n  }\r\n  38% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\r\n  }\r\n  100% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n`;\r\n\r\nconst Round = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n/**\r\n * Displays loading spinner\r\n */\r\nexport const Loading = styled.div`\r\n  text-indent: -9999em;\r\n  overflow: hidden;\r\n  width: 1em;\r\n  height: 1em;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  animation: ${Load} 1.7s infinite ease, ${Round} 1.7s infinite ease;\r\n  margin: 0 auto;\r\n  margin-top: ${(p) => p.top && p.theme.spacing[p.top]};\r\n  margin-bottom: ${(p) => p.bottom && p.theme.spacing[p.bottom]};\r\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary)};\r\n  font-size: ${(p) => (p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm)};\r\n`;\r\n\r\n/**\r\n * Displays loading dots\r\n */\r\nexport const LoadingDots = styled.div`\r\n  &::after {\r\n    display: block;\r\n    animation: ellipsis 1s infinite;\r\n    content: '.';\r\n    text-align: center;\r\n    color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary)};\r\n    font-size: ${(p) => p.theme.font.size.xl};\r\n  }\r\n\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * Wrapper around React Router's Link component, that uses theme styling\r\n *\r\n * @param {string} color\r\n * @param {string} weight\r\n * @param {string} size\r\n */\r\nexport const A = styled(Link)`\r\n  text-decoration: none;\r\n  transition: color 0.1s;\r\n  display: inline-block;\r\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary)};\r\n  font-weight: ${(p) => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\r\n  font-size: ${(p) => (p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs)};\r\n\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for wrapping error messages\r\n */\r\nexport const Error = styled.div`\r\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.error.main)};\r\n  font-size: ${(p) => (p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm)};\r\n`;\r\n\r\n/**\r\n * Helper function for adding styles to Heading components\r\n *\r\n * @param {string} size, size of text\r\n */\r\nconst getHeadingStyles = (size) => css`\r\n  margin: 0;\r\n  font-size: ${size};\r\n  font-weight: ${(p) => p.theme.font.weight.normal};\r\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.primary)};\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  ${getHeadingStyles((p) => p.theme.font.size.xl)};\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  ${getHeadingStyles((p) => p.theme.font.size.lg)};\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  ${getHeadingStyles((p) => p.theme.font.size.xs)};\r\n`;\r\n","/**\r\n * All available routes for the app\r\n */\r\n\r\nexport const HOME = '/';\r\n\r\nexport const FORGOT_PASSWORD = '/forgot-password';\r\n\r\nexport const RESET_PASSWORD = '/reset-password';\r\n\r\nexport const USER_PROFILE = '/:username';\r\n\r\nexport const EXPLORE = '/explore';\r\n\r\nexport const PEOPLE = '/people';\r\n\r\nexport const NOTIFICATIONS = '/notifications';\r\n\r\nexport const MESSAGES = '/messages/:userId';\r\n\r\nexport const POST = '/post/:id';\r\n\r\n/**\r\n * Value that's used in place of id when creating something new.\r\n */\r\nexport const NEW_ID_VALUE = 'new';\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport styled from 'styled-components';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport { Error } from 'components/Text';\r\nimport { InputText, Button } from 'components/Form';\r\n\r\nimport { SIGN_IN } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: space-between;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst InputContainer = styled(Spacing)`\r\n  width: 100%;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  position: absolute;\r\n  top: 1px;\r\n`;\r\n\r\nconst ForgotPassword = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  margin-top: ${(p) => p.theme.spacing.xxs};\r\n  color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\n/**\r\n * Sign In page\r\n */\r\nconst SignIn = ({ history, location, refetch }) => {\r\n  const [values, setValues] = useState({ emailOrUsername: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const [signin, { loading }] = useMutation(SIGN_IN);\r\n\r\n  useEffect(() => {\r\n    setError('');\r\n  }, [location.pathname]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!emailOrUsername || !password) {\r\n      setError('All fields are required');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    try {\r\n      const response = await signin({\r\n        variables: { input: { emailOrUsername, password } },\r\n      });\r\n      localStorage.setItem('token', response.data.signin.token);\r\n      await refetch();\r\n      history.push(Routes.HOME);\r\n    } catch (error) {\r\n      setError(error.graphQLErrors[0].message);\r\n    }\r\n  };\r\n\r\n  const { emailOrUsername, password } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Root>\r\n        <InputContainer>\r\n          {error && (\r\n            <ErrorMessage>\r\n              <Error size=\"xxs\" color=\"white\">\r\n                {error}\r\n              </Error>\r\n            </ErrorMessage>\r\n          )}\r\n\r\n          <InputText\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"emailOrUsername\"\r\n            values={emailOrUsername}\r\n            onChange={handleChange}\r\n            placeholder=\"Email or Username\"\r\n            borderColor=\"white\"\r\n          />\r\n        </InputContainer>\r\n\r\n        <InputContainer left=\"xs\" right=\"xs\">\r\n          <InputText\r\n            type=\"password\"\r\n            name=\"password\"\r\n            values={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Password\"\r\n            borderColor=\"white\"\r\n          />\r\n          <A to={Routes.FORGOT_PASSWORD}>\r\n            <ForgotPassword>Forgot password?</ForgotPassword>\r\n          </A>\r\n        </InputContainer>\r\n\r\n        <Button disabled={loading}>Log in</Button>\r\n      </Root>\r\n    </form>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Container } from 'components/Layout';\r\nimport SignIn from './SignIn';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport SiteInfo from 'constants/SiteInfo.json';\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 80px;\r\n  background-color: transparent;\r\n`;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(A)`\r\n  display: none;\r\n  color: ${(p) => p.theme.colors.white};\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.white};\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SignInContainer = styled.div`\r\n  width: 500px;\r\n`;\r\n\r\n/**\r\n * Header of the App when user isn't authenticated\r\n */\r\nconst AuthHeader = ({ refetch }) => {\r\n  return (\r\n    <Root>\r\n      <StyledContainer maxWidth=\"lg\">\r\n        <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\r\n\r\n        <SignInContainer>\r\n          <SignIn refetch={refetch} />\r\n        </SignInContainer>\r\n      </StyledContainer>\r\n    </Root>\r\n  );\r\n};\r\n\r\nAuthHeader.propTypes = {\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AuthHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport SiteInfo from 'constants/SiteInfo.json';\r\n\r\n/**\r\n * Component that manages changes to document head\r\n * currently we are editing only title, but you can add meta description, image ...\r\n */\r\nconst Head = ({ title }) => (\r\n  <Helmet>\r\n    <title>{title}</title>\r\n  </Helmet>\r\n);\r\n\r\nHead.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nHead.defaultProps = {\r\n  title: SiteInfo.name,\r\n};\r\n\r\nexport default Head;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { Spacing, Container } from 'components/Layout';\r\nimport { H1, Error } from 'components/Text';\r\nimport { InputText, Button } from 'components/Form';\r\nimport Head from 'components/Head';\r\n\r\nimport { SIGN_UP } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled(Container)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 60px;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    justify-content: space-between;\r\n    margin-top: 120px;\r\n  }\r\n`;\r\n\r\nconst Welcome = styled.div`\r\n  display: none;\r\n  flex-direction: column;\r\n  color: ${(p) => p.theme.colors.white};\r\n  max-width: ${(p) => p.theme.screen.xs};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Heading = styled(H1)`\r\n  margin-bottom: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Form = styled.div`\r\n  padding: ${(p) => p.theme.spacing.md};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign Up page\r\n */\r\nconst SignUp = ({ history, refetch }) => {\r\n  const [error, setError] = useState('');\r\n  const [values, setValues] = useState({\r\n    fullName: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [signup, { loading }] = useMutation(SIGN_UP);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const validate = () => {\r\n    if (!fullName || !email || !username || !password) {\r\n      return 'All fields are required';\r\n    }\r\n\r\n    if (fullName.length > 50) {\r\n      return 'Full name no more than 50 characters';\r\n    }\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!emailRegex.test(String(email).toLowerCase())) {\r\n      return 'Enter a valid email address.';\r\n    }\r\n\r\n    const usernameRegex = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\r\n    if (!usernameRegex.test(username)) {\r\n      return 'Usernames can only use letters, numbers, underscores and periods';\r\n    } else if (username.length > 20) {\r\n      return 'Username no more than 50 characters';\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return 'Password min 6 characters';\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const error = validate();\r\n    if (error) {\r\n      setError(error);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await signup({\r\n        variables: { input: { fullName, email, password, username } },\r\n      });\r\n      localStorage.setItem('token', response.data.signup.token);\r\n      await refetch();\r\n      history.push(Routes.HOME);\r\n    } catch (error) {\r\n      setError(error.graphQLErrors[0].message);\r\n    }\r\n  };\r\n\r\n  const { fullName, email, password, username } = values;\r\n  return (\r\n    <Root maxWidth=\"lg\">\r\n      <Head />\r\n\r\n      <Welcome>\r\n        <div>\r\n          <Heading color=\"white\">Connect with friends and the world around you.</Heading>\r\n        </div>\r\n\r\n        <p>See photos and updates from your friends.</p>\r\n        <p>Follow your interests.</p>\r\n        <p>Hear what people are talking about.</p>\r\n      </Welcome>\r\n\r\n      <Form>\r\n        <Spacing bottom=\"md\">\r\n          <H1>Create Account</H1>\r\n        </Spacing>\r\n\r\n        <form onSubmit={(e) => handleSubmit(e, signup)}>\r\n          <InputText\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            values={fullName}\r\n            onChange={handleChange}\r\n            placeholder=\"Full name\"\r\n            borderColor=\"white\"\r\n          />\r\n          <Spacing top=\"xs\" bottom=\"xs\">\r\n            <InputText\r\n              type=\"text\"\r\n              name=\"email\"\r\n              values={email}\r\n              onChange={handleChange}\r\n              placeholder=\"Email\"\r\n              borderColor=\"white\"\r\n            />\r\n          </Spacing>\r\n          <InputText\r\n            type=\"text\"\r\n            name=\"username\"\r\n            values={username}\r\n            onChange={handleChange}\r\n            placeholder=\"Username\"\r\n            borderColor=\"white\"\r\n          />\r\n          <Spacing top=\"xs\" bottom=\"xs\">\r\n            <InputText\r\n              type=\"password\"\r\n              name=\"password\"\r\n              values={password}\r\n              onChange={handleChange}\r\n              placeholder=\"Password\"\r\n              borderColor=\"white\"\r\n            />\r\n          </Spacing>\r\n          {error && (\r\n            <Spacing bottom=\"sm\" top=\"sm\">\r\n              <Error>{error}</Error>\r\n            </Spacing>\r\n          )}\r\n          <Spacing top=\"sm\" />\r\n          <Button size=\"large\" disabled={loading}>\r\n            Sign up\r\n          </Button>\r\n        </form>\r\n      </Form>\r\n    </Root>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { H1, A, Error } from 'components/Text';\r\nimport { InputText, Button } from 'components/Form';\r\nimport Head from 'components/Head';\r\n\r\nimport { REQUEST_PASSWORD_RESET } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 450px;\r\n  margin: 0 auto;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.md};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  width: 100%;\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  line-height: 22px;\r\n`;\r\n\r\n/**\r\n * Forgot password page\r\n */\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [requestResetPassword, { loading }] = useMutation(REQUEST_PASSWORD_RESET);\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!emailRegex.test(String(email).toLowerCase())) {\r\n      setError('Enter a valid email address.');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setEmail('');\r\n    try {\r\n      const response = await requestResetPassword({\r\n        variables: { input: { email } },\r\n      });\r\n      setMessage(response.data.requestPasswordReset.message);\r\n    } catch (error) {\r\n      setError(error.graphQLErrors[0].message);\r\n    }\r\n  };\r\n\r\n  if (message) {\r\n    return (\r\n      <Root>\r\n        <Container>\r\n          <Spacing bottom=\"sm\">\r\n            <H1>{message}</H1>\r\n          </Spacing>\r\n        </Container>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <Head title=\"Forgot Password\" />\r\n\r\n      <Container>\r\n        <Spacing bottom=\"sm\">\r\n          <H1>Reset Password</H1>\r\n          <Text>\r\n            Enter the email address associated with your account, and we’ll email you a link to reset your password.\r\n          </Text>\r\n        </Spacing>\r\n\r\n        <form onSubmit={(e) => handleSubmit(e, requestResetPassword)}>\r\n          <InputText type=\"text\" name=\"email\" values={email} onChange={handleEmailChange} placeholder=\"Email\" />\r\n\r\n          {error && (\r\n            <Spacing bottom=\"sm\" top=\"sm\">\r\n              <Error>{error}</Error>\r\n            </Spacing>\r\n          )}\r\n\r\n          <Spacing top=\"xs\" />\r\n\r\n          <Button disabled={loading}>Send reset link</Button>\r\n\r\n          <Spacing top=\"sm\">\r\n            <A to={Routes.HOME}>&larr; Back to Sign Up</A>\r\n          </Spacing>\r\n        </form>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nForgotPassword.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Spacing } from 'components/Layout';\r\nimport { H1, Error } from 'components/Text';\r\nimport { Loading } from 'components/Loading';\r\nimport { InputText, Button } from 'components/Form';\r\nimport Head from 'components/Head';\r\n\r\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.md};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\n/**\r\n * Reset password page\r\n */\r\nconst ResetPassword = ({ history, location, refetch }) => {\r\n  const [values, setValues] = useState({ password: '', confirmPassword: '' });\r\n  const [error, setError] = useState('');\r\n  const [mutationError, setMutationError] = useState('');\r\n  const url = new URLSearchParams(location.search);\r\n  const email = url.get('email');\r\n  const token = url.get('token');\r\n  const { queryLoading, error: queryError } = useQuery(VERIFY_RESET_PASSWORD_TOKEN, {\r\n    variables: { email, token },\r\n  });\r\n  const { password, confirmPassword } = values;\r\n  const [resetPassword, { loading: mutationLoading }] = useMutation(RESET_PASSWORD);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!password || !confirmPassword) {\r\n      setError('Enter password and Confirm password.');\r\n      return;\r\n    } else if (password.length < 6) {\r\n      setError('Password min 6 characters');\r\n      return;\r\n    } else if (password !== confirmPassword) {\r\n      setError(\"Passwords don't match.\");\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setMutationError('');\r\n    try {\r\n      const response = await resetPassword({\r\n        variables: { input: { email, password, token } },\r\n      });\r\n      localStorage.setItem('token', response.data.resetPassword.token);\r\n      await refetch();\r\n      history.push(Routes.HOME);\r\n    } catch (error) {\r\n      setMutationError(error.graphQLErrors[0].message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Head title=\"Reset Password\" />\r\n\r\n      <Container>\r\n        <>\r\n          {queryLoading && <Loading top=\"lg\" />}\r\n          {mutationError || queryError ? (\r\n            <Spacing bottom=\"md\">\r\n              <Error>{mutationError ? mutationError : queryError.graphQLErrors[0].message}</Error>\r\n            </Spacing>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          <Spacing bottom=\"md\">\r\n            <H1>Password Reset</H1>\r\n          </Spacing>\r\n\r\n          <form onSubmit={(e) => handleSubmit(e, resetPassword)}>\r\n            <InputText\r\n              type=\"password\"\r\n              name=\"password\"\r\n              values={password}\r\n              onChange={handleChange}\r\n              placeholder=\"Password\"\r\n            />\r\n\r\n            <Spacing top=\"xs\" bottom=\"sm\">\r\n              <InputText\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                values={confirmPassword}\r\n                onChange={handleChange}\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n            </Spacing>\r\n\r\n            {error && (\r\n              <Spacing bottom=\"sm\" top=\"sm\">\r\n                <Error>{error}</Error>\r\n              </Spacing>\r\n            )}\r\n\r\n            <Button disabled={mutationLoading}>Reset Password</Button>\r\n          </form>\r\n        </>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nResetPassword.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(ResetPassword);\r\n","export default __webpack_public_path__ + \"static/media/background.d2bcb3ac.jpeg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Overlay } from 'components/Layout';\r\nimport { AuthHeader, SignUp, ForgotPassword, ResetPassword } from 'pages/Auth';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport backgroundImage from './background.jpeg';\r\n\r\nconst Root = styled.div`\r\n  background: url(${backgroundImage}) no-repeat top / cover;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: ${(p) => p.theme.zIndex.lg};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Pages = styled.div`\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-top: -120px;\r\n  }\r\n`;\r\n\r\n/**\r\n * Main Layout for the app, when user isn't authenticated\r\n */\r\nconst AuthLayout = ({ refetch }) => {\r\n  return (\r\n    <Root>\r\n      <Overlay transparency=\"0.5\" />\r\n\r\n      <Container>\r\n        <AuthHeader refetch={refetch} />\r\n\r\n        <Pages>\r\n          <Switch>\r\n            <Route exact path={Routes.HOME} render={() => <SignUp refetch={refetch} />} />\r\n            <Route exact path={Routes.FORGOT_PASSWORD} component={ForgotPassword} />\r\n            <Route exact path={Routes.RESET_PASSWORD} render={() => <ResetPassword refetch={refetch} />} />\r\n            <Redirect to={Routes.HOME} />\r\n          </Switch>\r\n        </Pages>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nAuthLayout.propTypes = {\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { A, H1, H2 } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport { NotFoundIcon } from 'components/icons';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n  text-align: center;\r\n`;\r\n\r\n/**\r\n * Component for displaying when we couldn't find the page\r\n */\r\nconst NotFound = ({ message, showHomePageLink }) => (\r\n  <Root>\r\n    <H1>Oops!</H1>\r\n\r\n    <Spacing top=\"sm\" bottom=\"md\">\r\n      <H2>{message}</H2>\r\n    </Spacing>\r\n\r\n    <NotFoundIcon width=\"100\" />\r\n\r\n    <Spacing bottom=\"md\" />\r\n\r\n    {showHomePageLink && <A to={Routes.HOME}>Go back to Home Page</A>}\r\n  </Root>\r\n);\r\n\r\nNotFound.propTypes = {\r\n  message: PropTypes.string,\r\n  showHomePageLink: PropTypes.bool,\r\n};\r\n\r\nNotFound.defaultProps = {\r\n  message: \"We can't seem to find the page you're looking for.\",\r\n  showHomePageLink: true,\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { UserIcon } from './icons';\r\n\r\nconst Root = styled.div`\r\n  width: ${(p) => (p.size ? `${p.size}px` : '30px')};\r\n  height: ${(p) => (p.size ? `${p.size}px` : '30px')};\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/**\r\n * Component for rendering user's image\r\n */\r\nconst Avatar = ({ size, image }) => (\r\n  <Root size={size}>{image ? <Image src={image} /> : <UserIcon width={size ? `${size}px` : 30} />}</Root>\r\n);\r\n\r\nAvatar.propTypes = {\r\n  size: PropTypes.number,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { SearchIcon } from 'components/icons';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  position: absolute;\r\n  top: 12px;\r\n  left: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: 0;\r\n  height: 40px;\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n  padding-left: ${(p) => (p.hideIcon ? p.theme.spacing.xs : p.theme.spacing.lg)};\r\n  padding-right: ${(p) => p.theme.spacing.lg};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  background-color: ${(p) => (p.backgroundColor ? p.theme.colors[p.backgroundColor] : p.theme.colors.grey[200])};\r\n  transition: border-color 0.1s;\r\n\r\n  &:focus {\r\n    &::placeholder {\r\n      color: ${(p) => p.theme.colors.grey[500]};\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for rendering search input\r\n */\r\nconst SearchInput = ({\r\n  onChange,\r\n  onFocus,\r\n  value,\r\n  inputRef,\r\n  backgroundColor,\r\n  placeholder,\r\n  hideIcon,\r\n  children,\r\n  autoFocus,\r\n}) => {\r\n  return (\r\n    <Root>\r\n      {!hideIcon && (\r\n        <IconContainer>\r\n          <SearchIcon />\r\n        </IconContainer>\r\n      )}\r\n\r\n      <Input\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        value={value}\r\n        ref={inputRef}\r\n        backgroundColor={backgroundColor}\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        hideIcon={hideIcon}\r\n        autoFocus={autoFocus}\r\n      />\r\n\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  onFocus: PropTypes.func,\r\n  value: PropTypes.string.isRequired,\r\n  ref: PropTypes.object,\r\n  backgroundColor: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  hideIcon: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { A } from 'components/Text';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  max-height: 350px;\r\n  min-height: 40px;\r\n  overflow: auto;\r\n  position: absolute;\r\n  top: 50px;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst StyledA = styled(A)`\r\n  display: block;\r\n\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n`;\r\n\r\nconst NoSearchResult = styled.div`\r\n  text-align: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n`;\r\n\r\n/**\r\n * Displays search result, meant to be used in Search component\r\n */\r\nconst SearchResult = ({ users, forMessage }) => {\r\n  if (users.length < 1) {\r\n    return (\r\n      <Root>\r\n        <NoSearchResult>No search results.</NoSearchResult>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      {users.map((user) => (\r\n        <StyledA\r\n          key={user.id}\r\n          to={\r\n            forMessage\r\n              ? generatePath(Routes.MESSAGES, { userId: user.id })\r\n              : generatePath(Routes.USER_PROFILE, { username: user.username })\r\n          }\r\n        >\r\n          <Item>\r\n            <Avatar image={user.image} size={34} />\r\n\r\n            <Spacing left=\"xs\">\r\n              <Name>{user.fullName}</Name>\r\n              <UserName>@{user.username}</UserName>\r\n            </Spacing>\r\n          </Item>\r\n        </StyledA>\r\n      ))}\r\n    </Root>\r\n  );\r\n};\r\n\r\nSearchResult.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  forMessage: PropTypes.bool,\r\n};\r\n\r\nexport default SearchResult;\r\n","import { useEffect } from 'react';\r\n\r\n/**\r\n * React hook that detects click outside an element\r\n *\r\n * @param {node} ref, element to detect click outside\r\n * @param {func} handler, function for invoking when click outside element is detected\r\n */\r\nexport const useClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, false);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, false);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      handler();\r\n    }\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useApolloClient } from '@apollo/client';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport SearchInput from './SearchInput';\r\nimport SearchResult from './SearchResult';\r\n\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\nimport { useDebounce } from 'hooks/useDebounce';\r\n\r\nimport { SEARCH_USERS } from 'graphql/user';\r\n\r\nconst StyledLoading = styled(Loading)`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 16px;\r\n`;\r\n\r\n/**\r\n * Renders search input\r\n */\r\nconst Search = ({ location, hideIcon, forMessage, backgroundColor, placeholder, autoFocus, ...others }) => {\r\n  const client = useApolloClient();\r\n\r\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Close search result on click outside\r\n  const inputRef = useRef(null);\r\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\r\n\r\n  // Debounce search query value\r\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\r\n\r\n  useEffect(() => {\r\n    // Clear search input value, after location change\r\n    setSearchQuery('');\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await client.query({\r\n        query: SEARCH_USERS,\r\n        variables: { searchQuery: debounceSearchQuery },\r\n      });\r\n\r\n      setUsers(data.searchUsers);\r\n      setLoading(false);\r\n\r\n      const openSearchResult = debounceSearchQuery !== '';\r\n      setIsOpenSearchResult(openSearchResult);\r\n    };\r\n\r\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\r\n\r\n    return () => setLoading(false);\r\n  }, [debounceSearchQuery, client]);\r\n\r\n  const handleInputChange = async (e) => {\r\n    // Trim white space only from beginning\r\n    const value = e.target.value.replace(/^\\s+/g, '');\r\n    setSearchQuery(value);\r\n    if (value) {\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\r\n\r\n  return (\r\n    <SearchInput\r\n      onChange={handleInputChange}\r\n      onFocus={handleInputFocus}\r\n      value={searchQuery}\r\n      inputRef={inputRef}\r\n      placeholder={placeholder}\r\n      hideIcon={hideIcon}\r\n      backgroundColor={backgroundColor}\r\n      autoFocus={autoFocus}\r\n      {...others}\r\n    >\r\n      {loading && <StyledLoading size=\"xxs\" />}\r\n\r\n      {isOpenSearchResult && <SearchResult users={users} forMessage={forMessage} />}\r\n    </SearchInput>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  hideIcon: PropTypes.bool,\r\n  forMessage: PropTypes.bool,\r\n  backgroundColor: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * React hook for debouncing\r\n */\r\nexport const useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useApolloClient } from '@apollo/client';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Button } from 'components/Form';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\nimport { CLEAR_AUTH_USER } from 'store/auth';\r\n\r\n/**\r\n * Component that signs out the user\r\n */\r\nconst SignOut = ({ history }) => {\r\n  const client = useApolloClient();\r\n  const [, dispatch] = useStore();\r\n\r\n  const handleSignOut = () => {\r\n    dispatch({ type: CLEAR_AUTH_USER });\r\n    localStorage.removeItem('token');\r\n    client.resetStore();\r\n    history.push(Routes.HOME);\r\n  };\r\n\r\n  return (\r\n    <Button text onClick={handleSignOut}>\r\n      Sign out\r\n    </Button>\r\n  );\r\n};\r\n\r\nSignOut.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(SignOut);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SignOut from 'components/App/SignOut';\r\nimport { A } from 'components/Text';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  text-align: center;\r\n  position: absolute;\r\n  background-color: white;\r\n  line-height: ${(p) => p.theme.spacing.md};\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n`;\r\n\r\nconst CSS = css`\r\n  transition: background-color 0.1s;\r\n  display: block;\r\n  padding: ${(p) => p.theme.spacing.sm} ${(p) => p.theme.spacing.xl};\r\n\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n    color: ${(p) => p.theme.colors.text.secondary};\r\n  }\r\n`;\r\n\r\nconst Link = styled(A)`\r\n  ${CSS};\r\n`;\r\n\r\nconst Item = styled.div`\r\n  ${CSS};\r\n`;\r\n\r\n/**\r\n * Component that renders Header User's dropdown\r\n */\r\nconst HeaderUserDropDown = ({ userRef }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root ref={userRef}>\r\n      <Link\r\n        to={generatePath(Routes.USER_PROFILE, {\r\n          username: auth.user.username,\r\n        })}\r\n      >\r\n        My Profile\r\n      </Link>\r\n\r\n      <Item>\r\n        <SignOut />\r\n      </Item>\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderUserDropDown.propTypes = {\r\n  userRef: PropTypes.object,\r\n};\r\n\r\nexport default HeaderUserDropDown;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useApolloClient } from '@apollo/client';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\n\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { UPDATE_NOTIFICATION_SEEN } from 'graphql/notification';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst NotificationItem = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n\r\n  &:last-child {\r\n    border-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n  margin-left: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst PostImage = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  display: block;\r\n`;\r\n\r\n/**\r\n * Renders user notifications\r\n */\r\nconst Notification = ({ notification, close }) => {\r\n  const [{ auth }] = useStore();\r\n  const client = useApolloClient();\r\n  const ref = React.useRef(null);\r\n\r\n  useClickOutside(ref, close);\r\n\r\n  useEffect(() => {\r\n    const updateNotificationSeen = async () => {\r\n      try {\r\n        await client.mutate({\r\n          mutation: UPDATE_NOTIFICATION_SEEN,\r\n          variables: {\r\n            input: {\r\n              userId: auth.user.id,\r\n            },\r\n          },\r\n          refetchQueries: () => [{ query: GET_AUTH_USER }],\r\n        });\r\n      } catch (err) {}\r\n    };\r\n\r\n    updateNotificationSeen();\r\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\r\n\r\n  if (!notification.follow && !notification.like && !notification.comment) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NotificationItem ref={ref}>\r\n      <A\r\n        to={generatePath(Routes.USER_PROFILE, {\r\n          username: notification.author.username,\r\n        })}\r\n      >\r\n        <LeftSide>\r\n          <Avatar image={notification.author.image} size={34} />\r\n\r\n          <Spacing left=\"xs\" />\r\n\r\n          <Name>{notification.author.fullName}</Name>\r\n        </LeftSide>\r\n      </A>\r\n\r\n      {notification.follow && <Action>started following you</Action>}\r\n\r\n      {notification.like && (\r\n        <Action>\r\n          likes your photo\r\n          <A to={generatePath(Routes.POST, { id: notification.like.post.id })}>\r\n            <PostImage>\r\n              <Image src={notification.like.post.image} />\r\n            </PostImage>\r\n          </A>\r\n        </Action>\r\n      )}\r\n\r\n      {notification.comment && (\r\n        <Action>\r\n          commented on your photo\r\n          <A to={generatePath(Routes.POST, { id: notification.comment.post.id })}>\r\n            <PostImage>\r\n              <Image src={notification.comment.post.image} />\r\n            </PostImage>\r\n          </A>\r\n        </Action>\r\n      )}\r\n    </NotificationItem>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  close: PropTypes.func,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification';\r\n\r\nconst Root = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 500px;\r\n    right: ${(p) => p.theme.spacing.lg};\r\n  }\r\n`;\r\n\r\nconst Empty = styled.div`\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Component that renders Header Notification's dropdown\r\n */\r\nconst HeaderNotificationDropDown = ({ notificationRef, dropdownData, closeDropDown }) => {\r\n  return (\r\n    <Root ref={notificationRef}>\r\n      {!dropdownData.length ? (\r\n        <Empty>No new notifications.</Empty>\r\n      ) : (\r\n        dropdownData.map((notification) => (\r\n          <Notification key={notification.id} notification={notification} close={closeDropDown} />\r\n        ))\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderNotificationDropDown.propTypes = {\r\n  notificationRef: PropTypes.object,\r\n  dropdownData: PropTypes.array,\r\n  closeDropDown: PropTypes.func,\r\n};\r\n\r\nexport default HeaderNotificationDropDown;\r\n","/**\r\n * Converts unix timestamp into a time ago string like 2 hours ago\r\n *\r\n * @param {string} date unix timestamp\r\n */\r\nexport const timeAgo = (unixTimestamp) => {\r\n  const date = new Date(parseInt(unixTimestamp));\r\n\r\n  const seconds = Math.floor((new Date() - date) / 1000);\r\n  let interval = Math.floor(seconds / 31536000);\r\n\r\n  if (interval > 1) {\r\n    return interval + ' years';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 2592000);\r\n  if (interval > 1) {\r\n    return interval + ' months';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 86400);\r\n  if (interval > 1) {\r\n    return interval + ' days';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval > 1) {\r\n    return interval + ' hours';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval > 1) {\r\n    return interval + ' mins';\r\n  }\r\n\r\n  return Math.floor(seconds) + ' seconds';\r\n};\r\n\r\n/**\r\n * Converts unix timestamp to current date\r\n *\r\n * @param {string} date unix timestamp\r\n */\r\nexport const currentDate = (unixTimestamp) => {\r\n  const date = new Date(parseInt(unixTimestamp));\r\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n  const month = months[date.getMonth() + 1];\r\n  const day = date.getDay();\r\n  const year = date.getFullYear();\r\n  const time = date.toLocaleString('en-US', {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: true,\r\n  });\r\n\r\n  return `${month} ${day}, ${year} ${time}`;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { NavLink, generatePath } from 'react-router-dom';\r\n\r\nimport Avatar from 'components/Avatar';\r\nimport { A } from 'components/Text';\r\n\r\nimport { timeAgo } from 'utils/date';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 500px;\r\n    right: 90px;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Link = styled(A)`\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.primary.main};\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  width: 100%;\r\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xxs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  margin-top: ${(p) => p.theme.spacing.xxs};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  color: ${(p) => p.theme.colors.grey[500]};\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst CreatedAt = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.tiny};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n`;\r\n\r\n/**\r\n * Component that renders Header Message's dropdown\r\n */\r\nconst HeaderMessageDropdown = ({ messageRef, dropdownData }) => {\r\n  return (\r\n    <Root ref={messageRef}>\r\n      <Heading>\r\n        <Link to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}>New Message</Link>\r\n      </Heading>\r\n\r\n      {dropdownData.map((user) => (\r\n        <User key={user.id} to={generatePath(Routes.MESSAGES, { userId: user.id })}>\r\n          <span>\r\n            <Avatar image={user.image} size={50} />\r\n          </span>\r\n\r\n          <Info>\r\n            <div>\r\n              <FullName>{user.fullName}</FullName>\r\n\r\n              <LastMessage>{user.lastMessage}</LastMessage>\r\n            </div>\r\n\r\n            <CreatedAt>{timeAgo(user.lastMessageCreatedAt)}</CreatedAt>\r\n          </Info>\r\n        </User>\r\n      ))}\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderMessageDropdown.propTypes = {\r\n  messageRef: PropTypes.object,\r\n  dropdownData: PropTypes.array,\r\n};\r\n\r\nexport default HeaderMessageDropdown;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HeaderUserDropDown from './HeaderUserDropDown';\r\nimport HeaderNotificationDropDown from './HeaderNotificationDropDown';\r\nimport HeaderMessageDropdown from './HeaderMessageDropdown';\r\n\r\n/**\r\n * Component that renders DropDown's of Header\r\n */\r\nconst HeaderDropDowns = ({ messageRef, notificationRef, userRef, dropdownOpen, dropdownData, closeDropDown }) => {\r\n  const DropDowns = {\r\n    USER: <HeaderUserDropDown userRef={userRef} />,\r\n    NOTIFICATION: (\r\n      <HeaderNotificationDropDown\r\n        notificationRef={notificationRef}\r\n        dropdownData={dropdownData}\r\n        closeDropDown={closeDropDown}\r\n      />\r\n    ),\r\n    MESSAGE: <HeaderMessageDropdown messageRef={messageRef} dropdownData={dropdownData} />,\r\n  };\r\n\r\n  return dropdownOpen ? DropDowns[dropdownOpen] : null;\r\n};\r\n\r\nHeaderDropDowns.propTypes = {\r\n  messageRef: PropTypes.object,\r\n  notificationRef: PropTypes.object,\r\n  userRef: PropTypes.object,\r\n  dropdownOpen: PropTypes.string,\r\n  dropdownData: PropTypes.array,\r\n  closeDropDown: PropTypes.func,\r\n};\r\n\r\nexport default HeaderDropDowns;\r\n","/**\r\n * Layout size constants\r\n */\r\n\r\nexport const SIDEBAR_DESKTOP_WIDTH = 180;\r\n\r\nexport const SIDEBAR_MOBILE_WIDTH = 240;\r\n\r\nexport const USER_SUGGESTIONS_WIDTH = 240;\r\n\r\nexport const HEADER_HEIGHT = 60;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { NotificationIcon, MenuIcon, EnvelopeOpenIcon } from 'components/icons';\r\nimport { Container, Spacing } from 'components/Layout';\r\nimport { A } from 'components/Text';\r\nimport { Button } from 'components/Form';\r\nimport Avatar from 'components/Avatar';\r\nimport Search from 'components/Search';\r\nimport HeaderDropDowns from './HeaderDropDowns';\r\n\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { HEADER_HEIGHT } from 'constants/Layout';\r\nimport SiteInfo from 'constants/SiteInfo.json';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled(Container)`\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  z-index: ${(p) => p.theme.zIndex.md};\r\n  height: ${HEADER_HEIGHT}px;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    z-index: ${(p) => p.theme.zIndex.md};\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: ${HEADER_HEIGHT}px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\r\n    width: ${(p) => p.theme.screen.lg};\r\n  }\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Hamburger = styled.div`\r\n  cursor: pointer;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(A)`\r\n  display: none;\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.primary.main};\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst RightSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst countCSS = css`\r\n  top: -6px;\r\n  position: absolute;\r\n  height: 22px;\r\n  width: 22px;\r\n  padding: 2px;\r\n  letter-spacing: -1px;\r\n  border-radius: 50%;\r\n  color: ${(p) => p.theme.colors.white};\r\n  background-color: ${(p) => p.theme.colors.error.main};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NotificationCount = styled.span`\r\n  ${countCSS};\r\n  right: 54px;\r\n`;\r\n\r\nconst MessageCount = styled.span`\r\n  ${countCSS};\r\n  right: 100px;\r\n`;\r\n\r\n/**\r\n * Header of the App when user is authenticated\r\n */\r\nconst Header = ({ location, toggleSideBar }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(null);\r\n  const [dropdownData, setDropdownData] = useState([]);\r\n\r\n  const messageRef = useRef(null);\r\n  const notificationRef = useRef(null);\r\n  const userRef = useRef(null);\r\n\r\n  const closeOnClickOutside = () => {\r\n    if (dropdownOpen) {\r\n      closeDropDown();\r\n    }\r\n  };\r\n\r\n  useClickOutside(messageRef, closeOnClickOutside);\r\n  useClickOutside(notificationRef, closeOnClickOutside);\r\n  useClickOutside(userRef, closeOnClickOutside);\r\n\r\n  const closeDropDown = () => {\r\n    setDropdownOpen(null);\r\n    setDropdownData([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => closeDropDown();\r\n  }, [location.pathname]);\r\n\r\n  const handleIconClick = (dropdownType) => {\r\n    if (dropdownOpen) {\r\n      closeDropDown();\r\n    } else {\r\n      if (dropdownType === 'NOTIFICATION') {\r\n        setDropdownData(auth.user.newNotifications);\r\n      } else if (dropdownType === 'MESSAGE') {\r\n        setDropdownData(auth.user.newConversations);\r\n      }\r\n\r\n      setDropdownOpen(dropdownType);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Wrapper>\r\n        <LeftSide>\r\n          <Hamburger onClick={toggleSideBar}>\r\n            <MenuIcon />\r\n          </Hamburger>\r\n\r\n          <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\r\n\r\n          <Spacing left=\"sm\" right=\"md\">\r\n            <Search location={location} placeholder=\"Search\" />\r\n          </Spacing>\r\n        </LeftSide>\r\n\r\n        <RightSide>\r\n          <Spacing right=\"md\">\r\n            <Button ghost onClick={() => handleIconClick('MESSAGE')}>\r\n              {auth.user.newConversations.length > 0 && (\r\n                <MessageCount>{auth.user.newConversations.length}</MessageCount>\r\n              )}\r\n\r\n              <EnvelopeOpenIcon />\r\n            </Button>\r\n          </Spacing>\r\n\r\n          <Spacing right=\"md\">\r\n            <Button ghost onClick={() => handleIconClick('NOTIFICATION')}>\r\n              {auth.user.newNotifications.length > 0 && (\r\n                <NotificationCount>{auth.user.newNotifications.length}</NotificationCount>\r\n              )}\r\n              <NotificationIcon />\r\n            </Button>\r\n          </Spacing>\r\n\r\n          <Button ghost onClick={() => handleIconClick('USER')}>\r\n            <Avatar image={auth.user.image} />\r\n          </Button>\r\n        </RightSide>\r\n\r\n        <HeaderDropDowns\r\n          messageRef={messageRef}\r\n          notificationRef={notificationRef}\r\n          userRef={userRef}\r\n          dropdownOpen={dropdownOpen}\r\n          dropdownData={dropdownData}\r\n          closeDropDown={closeDropDown}\r\n        />\r\n      </Wrapper>\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  toggleSideBar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport { NavLink, generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { ExploreIcon, NotificationIcon, HomeIcon, PeopleIcon, EnvelopeIcon } from 'components/icons';\r\n\r\nconst Link = styled(NavLink)`\r\n  text-decoration: none;\r\n  transition: color 0.1s;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  display: block;\r\n  padding-left: ${(p) => p.theme.spacing.xs};\r\n\r\n  &:hover,\r\n  &.selected {\r\n    color: ${(p) => p.theme.colors.primary.main};\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n\r\n    svg path {\r\n      fill: ${(p) => p.theme.colors.primary.main};\r\n    }\r\n\r\n    @media (min-width: ${(p) => p.theme.screen.md}) {\r\n      background-color: ${(p) => p.theme.colors.white};\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  line-height: 40px;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\n/**\r\n * Navigation component used in SideBar\r\n */\r\nconst Navigation = () => {\r\n  return (\r\n    <List>\r\n      <Link exact activeClassName=\"selected\" to={Routes.HOME}>\r\n        <ListItem>\r\n          <HomeIcon />\r\n          <Name>Home</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.EXPLORE}>\r\n        <ListItem>\r\n          <ExploreIcon width={20} />\r\n          <Name>Explore</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.PEOPLE}>\r\n        <ListItem>\r\n          <PeopleIcon />\r\n          <Name>People</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.NOTIFICATIONS}>\r\n        <ListItem>\r\n          <NotificationIcon width={18} />\r\n          <Name>Notifications</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}>\r\n        <ListItem>\r\n          <EnvelopeIcon width={18} />\r\n          <Name>Messages</Name>\r\n        </ListItem>\r\n      </Link>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath, withRouter, NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport Navigation from './Navigation';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { SIDEBAR_DESKTOP_WIDTH, SIDEBAR_MOBILE_WIDTH, HEADER_HEIGHT } from 'constants/Layout';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  padding-top: ${HEADER_HEIGHT + 40}px;\r\n  height: 100%;\r\n  width: ${SIDEBAR_MOBILE_WIDTH}px;\r\n  transition: margin-left 0.2s ease-in-out;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  z-index: ${(p) => p.theme.zIndex.sm};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    padding-top: 0;\r\n    position: sticky;\r\n    top: 100px;\r\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_DESKTOP_WIDTH}px`)};\r\n    flex-basis: ${SIDEBAR_DESKTOP_WIDTH}px;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    border: 0;\r\n    background-color: transparent;\r\n  }\r\n\r\n  @media (max-width: ${(p) => p.theme.screen.md}) {\r\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_MOBILE_WIDTH}px`)};\r\n  }\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  text-decoration: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  border: 1px solid transparent;\r\n\r\n  &:hover,\r\n  &.selected {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n\r\n    @media (min-width: ${(p) => p.theme.screen.md}) {\r\n      background-color: ${(p) => p.theme.colors.white};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  color: ${(p) => (p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary)};\r\n`;\r\n\r\n/**\r\n * Displays left side bar\r\n */\r\nconst SideBar = ({ location, isOpen, sideBarRef }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const isAuthUsersProfilePage = auth.user.username === location.pathname.substring(1);\r\n\r\n  return (\r\n    <Root isOpen={isOpen} ref={sideBarRef}>\r\n      <User exact to={generatePath(Routes.USER_PROFILE, { username: auth.user.username })} activeClassName=\"selected\">\r\n        <Avatar image={auth.user.image} size={20} />\r\n\r\n        <Spacing left=\"xxs\">\r\n          <FullName active={isAuthUsersProfilePage}>{auth.user.fullName}</FullName>\r\n        </Spacing>\r\n      </User>\r\n\r\n      <Spacing top=\"sm\" />\r\n\r\n      <Navigation />\r\n    </Root>\r\n  );\r\n};\r\n\r\nSideBar.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withRouter(SideBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { matchPath } from 'react-router';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport { H3, A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { USER_SUGGESTIONS } from 'graphql/user';\r\n\r\nimport { USER_SUGGESTIONS_WIDTH, HEADER_HEIGHT } from 'constants/Layout';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: none;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n  position: sticky;\r\n  top: ${HEADER_HEIGHT + 40}px;\r\n  right: 0;\r\n  height: 100%;\r\n  width: ${USER_SUGGESTIONS_WIDTH}px;\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  padding-top: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: ${(p) => p.theme.spacing.sm};\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  color: ${(p) => (p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary)};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  color: ${(p) => p.theme.colors.text.hint};\r\n`;\r\n\r\n/**\r\n * Displays user suggestions\r\n */\r\nconst UserSuggestions = ({ pathname }) => {\r\n  const [{ auth }] = useStore();\r\n  const { data, loading } = useQuery(USER_SUGGESTIONS, {\r\n    variables: { userId: auth.user.id },\r\n  });\r\n\r\n  const hideUserSuggestions = matchPath(pathname, {\r\n    path: [Routes.MESSAGES, Routes.PEOPLE, Routes.EXPLORE, Routes.USER_PROFILE],\r\n  });\r\n\r\n  if (hideUserSuggestions) return null;\r\n\r\n  if (loading) {\r\n    return (\r\n      <Root>\r\n        <Loading />\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  if (!data.suggestPeople.length > 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <H3>Suggestions For You</H3>\r\n\r\n      <List>\r\n        {data.suggestPeople.map((user) => {\r\n          if (!user.username) return null;\r\n\r\n          return (\r\n            <ListItem key={user.id}>\r\n              <A\r\n                to={generatePath(Routes.USER_PROFILE, {\r\n                  username: user.username,\r\n                })}\r\n              >\r\n                <Avatar image={user.image} />\r\n              </A>\r\n\r\n              <Spacing left=\"xs\">\r\n                <A\r\n                  to={generatePath(Routes.USER_PROFILE, {\r\n                    username: user.username,\r\n                  })}\r\n                >\r\n                  <FullName>{user.fullName}</FullName>\r\n                  <UserName>@{user.username}</UserName>\r\n                </A>\r\n              </Spacing>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Root>\r\n  );\r\n};\r\n\r\nUserSuggestions.propTypes = {\r\n  pathname: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default UserSuggestions;\r\n","import { gql } from '@apollo/client';\r\n\r\n/**\r\n * Creates a comment\r\n */\r\nexport const CREATE_COMMENT = gql`\r\n  mutation($input: CreateCommentInput!) {\r\n    createComment(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a comment\r\n */\r\nexport const DELETE_COMMENT = gql`\r\n  mutation($input: DeleteCommentInput!) {\r\n    deleteComment(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","/**\r\n * Available Notification types\r\n */\r\n\r\nexport const NotificationType = {\r\n  LIKE: 'LIKE',\r\n  FOLLOW: 'FOLLOW',\r\n  COMMENT: 'COMMENT',\r\n};\r\n","import { useApolloClient } from '@apollo/client';\r\nimport { CREATE_NOTIFICATION, DELETE_NOTIFICATION } from 'graphql/notification';\r\nimport { useStore } from 'store';\r\n\r\n/**\r\n * React hook that Creates or Deletes a notification after like, follow or comment\r\n */\r\nexport const useNotifications = () => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const client = useApolloClient();\r\n\r\n  /**\r\n   * Helper function for mutation\r\n   */\r\n  const mutate = async (mutation, variables) => {\r\n    try {\r\n      return await client.mutate({\r\n        mutation,\r\n        variables: { input: { ...variables } },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error while mutating a notification', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates a notification\r\n   */\r\n  const create = ({ user, postId, notificationType, notificationTypeId }) => {\r\n    return mutate(CREATE_NOTIFICATION, {\r\n      authorId: auth.user.id,\r\n      userId: user.id,\r\n      postId,\r\n      notificationType,\r\n      notificationTypeId,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Removes a notification\r\n   */\r\n  const remove = ({ notificationId }) => mutate(DELETE_NOTIFICATION, { id: notificationId });\r\n\r\n  /**\r\n   * Checks if user has already a notification and based on that Creates or Deletes a notification\r\n   */\r\n  const toggle = ({ user, postId, notificationType, notificationTypeId, hasDone }) => {\r\n    const type = notificationType.toLowerCase();\r\n    const isNotified = user.notifications.find((n) => n[type] && hasDone && n[type].id === hasDone.id);\r\n    const notificationId = isNotified ? isNotified.id : null;\r\n    const operation = notificationId ? 'delete' : 'create';\r\n    const options = {\r\n      create: {\r\n        mutation: CREATE_NOTIFICATION,\r\n        variables: {\r\n          authorId: auth.user.id,\r\n          userId: user.id,\r\n          postId,\r\n          notificationType,\r\n          notificationTypeId,\r\n        },\r\n      },\r\n      delete: {\r\n        mutation: DELETE_NOTIFICATION,\r\n        variables: { id: notificationId },\r\n      },\r\n    };\r\n\r\n    return mutate(options[operation].mutation, options[operation].variables);\r\n  };\r\n\r\n  return { create, remove, toggle };\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\r\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\r\nimport { CREATE_COMMENT } from 'graphql/comment';\r\n\r\nimport { Textarea, Button } from './Form';\r\n\r\nimport { NotificationType } from 'constants/NotificationType';\r\n\r\nimport { useNotifications } from 'hooks/useNotifications';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`;\r\n\r\n/**\r\n * Creates a comment for a post\r\n */\r\nconst CreateComment = ({ post, focus }) => {\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  const [comment, setComment] = useState('');\r\n  const buttonEl = useRef(null);\r\n  const TextareaEl = useRef(false);\r\n  const [createComment, { loading }] = useMutation(CREATE_COMMENT, {\r\n    refetchQueries: [\r\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n      { query: GET_USER, variables: { username: auth.user.username } },\r\n      { query: GET_AUTH_USER },\r\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n      { query: GET_POST, variables: { id: post.id } },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    focus && TextareaEl.current.focus();\r\n  }, [focus]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { data } = await createComment({\r\n      variables: { input: { comment, author: auth.user.id, postId: post.id } },\r\n    });\r\n    setComment('');\r\n\r\n    // Create notification on comment\r\n    if (auth.user.id !== post.author.id) {\r\n      notification.create({\r\n        user: post.author,\r\n        postId: post.id,\r\n        notificationType: NotificationType.COMMENT,\r\n        notificationTypeId: data.createComment.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      buttonEl.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Textarea\r\n        onChange={(e) => setComment(e.target.value)}\r\n        value={comment}\r\n        placeholder=\"Add a comment...\"\r\n        onKeyDown={onEnterPress}\r\n        ref={TextareaEl}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        color={comment ? 'primary.main' : 'grey[500]'}\r\n        weight=\"bold\"\r\n        text\r\n        ref={buttonEl}\r\n        disabled={!comment || loading}\r\n      >\r\n        Post\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCreateComment.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  focus: PropTypes.bool,\r\n};\r\n\r\nexport default CreateComment;\r\n","import { gql } from '@apollo/client';\r\n\r\n/**\r\n * Creates a following between two users\r\n */\r\nexport const CREATE_FOLLOW = gql`\r\n  mutation($input: CreateFollowInput!) {\r\n    createFollow(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * deletes a following\r\n */\r\nexport const DELETE_FOLLOW = gql`\r\n  mutation($input: DeleteFollowInput!) {\r\n    deleteFollow(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from '@apollo/client';\r\nimport styled from 'styled-components';\r\n\r\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\r\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\r\nimport { CREATE_FOLLOW, DELETE_FOLLOW } from 'graphql/follow';\r\n\r\nimport { NotificationType } from 'constants/NotificationType';\r\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { useNotifications } from 'hooks/useNotifications';\r\n\r\nconst Button = styled.button`\r\n  height: 27px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  transition: background-color 0.2s, border-color 0.1s;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  color: ${(p) => !p.isFollowing && p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\r\n  border: ${(p) => (p.isFollowing ? `1px solid ${p.theme.colors.border.main}` : '0')};\r\n  background-color: ${(p) => (p.isFollowing ? 'transparent' : p.theme.colors.primary.main)};\r\n\r\n  &:hover {\r\n    border-color: ${(p) => p.theme.colors.border.dark};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for rendering follow button\r\n */\r\nconst Follow = ({ user }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  const isFollowing = auth.user.following.find((f) => f.user === user.id);\r\n  // Detect which mutation to use\r\n  const operation = isFollowing ? 'delete' : 'create';\r\n  const options = {\r\n    create: {\r\n      mutation: CREATE_FOLLOW,\r\n      variables: { userId: user.id, followerId: auth.user.id },\r\n    },\r\n    delete: {\r\n      mutation: DELETE_FOLLOW,\r\n      variables: { id: isFollowing ? isFollowing.id : null },\r\n    },\r\n  };\r\n  const [mutate] = useMutation(options[operation].mutation, {\r\n    refetchQueries: [\r\n      { query: GET_AUTH_USER },\r\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n      {\r\n        query: GET_FOLLOWED_POSTS,\r\n        variables: {\r\n          userId: auth.user.id,\r\n          skip: 0,\r\n          limit: HOME_PAGE_POSTS_LIMIT,\r\n        },\r\n      },\r\n      { query: GET_USER, variables: { username: user.username } },\r\n    ],\r\n  });\r\n\r\n  const handleClickFollow = async () => {\r\n    setLoading(true);\r\n    const { data } = await mutate({\r\n      variables: { input: { ...options[operation].variables } },\r\n    });\r\n\r\n    // Create or Delete mutation for follow\r\n    if (auth.user.id === user.id) return setLoading(false);\r\n    await notification.toggle({\r\n      user,\r\n      hasDone: isFollowing,\r\n      notificationType: NotificationType.FOLLOW,\r\n      notificationTypeId: data.createFollow ? data.createFollow.id : null,\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handleClickFollow} disabled={loading} isFollowing={isFollowing}>\r\n      {isFollowing ? 'Following' : 'Follow'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nFollow.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Follow;\r\n","/**\r\n * Data limit constants for infinite scroll\r\n */\r\n\r\nexport const HOME_PAGE_POSTS_LIMIT = 6;\r\n\r\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\r\n\r\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\r\n\r\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\r\n\r\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport { A } from 'components/Text';\r\nimport Follow from 'components/Follow';\r\nimport { Spacing } from 'components/Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst Author = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-right: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  max-width: 100%;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\n/**\r\n * Author info for PostPopup component\r\n */\r\nconst PostPopupInfo = ({ author }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root>\r\n      <Author>\r\n        <A to={generatePath(Routes.USER_PROFILE, { username: author.username })}>\r\n          <Avatar image={author.image} />\r\n        </A>\r\n\r\n        <Spacing left=\"xs\" inline>\r\n          <A\r\n            to={generatePath(Routes.USER_PROFILE, {\r\n              username: author.username,\r\n            })}\r\n          >\r\n            <UserName>{author.fullName}</UserName>\r\n          </A>\r\n        </Spacing>\r\n      </Author>\r\n\r\n      {auth.user.id !== author.id && <Follow user={author} />}\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostPopupInfo.propTypes = {\r\n  author: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostPopupInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { CloseIcon } from 'components/icons';\r\nimport { A } from './Text';\r\nimport { Spacing } from './Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\r\nimport { DELETE_COMMENT } from 'graphql/comment';\r\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport { useNotifications } from '../hooks/useNotifications';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst DeleteButton = styled.button`\r\n  cursor: pointer;\r\n  display: none;\r\n  background-color: transparent;\r\n  border: 0;\r\n  outline: 0;\r\n  position: absolute;\r\n  right: 7px;\r\n  top: 6px;\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: ${(p) => p.theme.spacing.xxs} 0;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n\r\n  &:hover ${DeleteButton} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst CommentSection = styled.div`\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  padding: 0 ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\r\n  background-color: ${(p) => p.theme.colors.grey[100]};\r\n  border-radius: ${(p) => p.theme.radius.lg};\r\n  margin-left: ${(p) => p.theme.spacing.xxs};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n`;\r\n\r\n/**\r\n * Renders comments UI\r\n */\r\nconst Comment = ({ comment, postId, postAuthor }) => {\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  const [deleteComment] = useMutation(DELETE_COMMENT, {\r\n    refetchQueries: [\r\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n      { query: GET_USER, variables: { username: comment.author.username } },\r\n      { query: GET_AUTH_USER },\r\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n      { query: GET_POST, variables: { id: postId } },\r\n    ],\r\n  });\r\n\r\n  const handleDeleteComment = async () => {\r\n    await deleteComment({ variables: { input: { id: comment.id } } });\r\n\r\n    // Delete notification after comment deletion\r\n    if (auth.user.id !== postAuthor.id) {\r\n      const isNotified = postAuthor.notifications.find((n) => n.comment && n.comment.id === comment.id);\r\n      notification.remove({\r\n        notificationId: isNotified.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <A\r\n        to={generatePath(Routes.USER_PROFILE, {\r\n          username: comment.author.username,\r\n        })}\r\n      >\r\n        <Avatar image={comment.author.image} />\r\n      </A>\r\n\r\n      <CommentSection>\r\n        {comment.author.id === auth.user.id && (\r\n          <DeleteButton onClick={handleDeleteComment}>\r\n            <CloseIcon width=\"10\" />\r\n          </DeleteButton>\r\n        )}\r\n\r\n        <Spacing top=\"xxs\" />\r\n\r\n        <Spacing inline right=\"xxs\">\r\n          <A\r\n            to={generatePath(Routes.USER_PROFILE, {\r\n              username: comment.author.username,\r\n            })}\r\n          >\r\n            <UserName>{comment.author.fullName}</UserName>\r\n          </A>\r\n        </Spacing>\r\n\r\n        {comment.comment}\r\n      </CommentSection>\r\n    </Root>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Comment from 'components/Comment';\r\nimport { Spacing } from 'components/Layout';\r\n\r\nconst Root = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: ${(p) => p.theme.spacing.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    max-height: 400px;\r\n  }\r\n`;\r\n\r\nconst Comments = styled.div`\r\n  max-height: ${(p) => (p.usedInModal ? '100%' : '350px')};\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  box-sizing: content-box;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Comments for PostPopup component\r\n */\r\nconst PostPopupComments = ({ comments, postId, postAuthor, usedInModal }) => (\r\n  <Root usedInModal={usedInModal}>\r\n    <Spacing top=\"xs\" />\r\n\r\n    <Comments usedInModal={usedInModal}>\r\n      {comments.map((comment) => (\r\n        <Comment key={comment.id} comment={comment} postId={postId} postAuthor={postAuthor} />\r\n      ))}\r\n    </Comments>\r\n  </Root>\r\n);\r\n\r\nPostPopupComments.propTypes = {\r\n  comments: PropTypes.array.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostPopupComments;\r\n","import { gql } from '@apollo/client';\r\n\r\n/**\r\n * Creates a like\r\n */\r\nexport const CREATE_LIKE = gql`\r\n  mutation($input: CreateLikeInput!) {\r\n    createLike(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a like\r\n */\r\nexport const DELETE_LIKE = gql`\r\n  mutation($input: DeleteLikeInput!) {\r\n    deleteLike(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { LikeIcon } from 'components/icons';\r\nimport { Spacing } from './Layout';\r\nimport { Button } from './Form';\r\n\r\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\r\n\r\nimport { NotificationType } from 'constants/NotificationType';\r\n\r\nimport { useNotifications } from 'hooks/useNotifications';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: ${(p) => p.theme.spacing.xs} 0;\r\n`;\r\n\r\n/**\r\n * Component for rendering Like button\r\n */\r\nconst Like = ({ postId, user, likes, withText, fullWidth }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  // Detect which mutation to use\r\n  const hasLiked = likes.find((l) => l.user === auth.user.id && l.post === postId);\r\n  const operation = hasLiked ? 'delete' : 'create';\r\n  const options = {\r\n    create: {\r\n      mutation: CREATE_LIKE,\r\n      variables: { postId, userId: auth.user.id },\r\n    },\r\n    delete: {\r\n      mutation: DELETE_LIKE,\r\n      variables: { id: hasLiked ? hasLiked.id : null },\r\n    },\r\n  };\r\n  const [mutate] = useMutation(options[operation].mutation, {\r\n    refetchQueries: [\r\n      { query: GET_AUTH_USER },\r\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n    ],\r\n  });\r\n\r\n  const handleButtonClick = async () => {\r\n    setLoading(true);\r\n    const { data } = await mutate({\r\n      variables: { input: { ...options[operation].variables } },\r\n    });\r\n\r\n    // Create or delete notification for like\r\n    if (auth.user.id === user.id) return setLoading(false);\r\n    await notification.toggle({\r\n      user,\r\n      postId,\r\n      hasDone: hasLiked,\r\n      notificationType: NotificationType.LIKE,\r\n      notificationTypeId: data.createLike ? data.createLike.id : null,\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <StyledButton\r\n      fullWidth={fullWidth && fullWidth}\r\n      disabled={loading}\r\n      text\r\n      onClick={() => handleButtonClick(mutate)}\r\n      color={hasLiked && 'primary.main'}\r\n    >\r\n      <LikeIcon color={hasLiked && 'primary.main'} />\r\n      <Spacing inline left=\"xxs\" />\r\n      {withText && <b>Like</b>}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nLike.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  likes: PropTypes.array,\r\n  withText: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n};\r\n\r\nexport default Like;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport Like from 'components/Like';\r\nimport { PostCommentIcon } from 'components/icons';\r\n\r\nconst Root = styled.div`\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  padding-bottom: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Count = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  padding-left: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\n/**\r\n * Options for PostPopup component\r\n */\r\nconst PostPopupOptions = ({ postId, postAuthor, postLikes }) => {\r\n  return (\r\n    <Root>\r\n      <Icons>\r\n        <Like postId={postId} user={postAuthor} likes={postLikes} />\r\n        <Spacing right=\"sm\" />\r\n        <PostCommentIcon />\r\n      </Icons>\r\n\r\n      <Count>{postLikes.length} likes</Count>\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostPopupOptions.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n  postLikes: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PostPopupOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport { CloseIcon } from 'components/icons';\r\nimport CreateComment from 'components/CreateComment';\r\nimport { Spacing } from 'components/Layout';\r\nimport NotFound from 'components/NotFound';\r\nimport Head from 'components/Head';\r\nimport PostPopupInfo from './PostPopupInfo';\r\nimport PostPopupComments from './PostPopupComments';\r\nimport PostPopupOptions from './PostPopupOptions';\r\n\r\nimport { GET_POST } from 'graphql/post';\r\n\r\nconst Root = styled.div`\r\n  margin: 0 auto;\r\n  margin: ${(p) => !p.usedInModal && p.theme.spacing.lg} 0;\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  z-index: ${(p) => (p.usedInModal ? p.theme.zIndex.xl : 'inherit')};\r\n  overflow: hidden;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-height: ${(p) => (p.usedInModal ? '600px' : 'auto')};\r\n  overflow-y: ${(p) => (p.usedInModal ? 'auto' : 'inherit')};\r\n  max-width: 1300px;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    flex-direction: ${(p) => (p.usedInModal ? 'row' : 'column')};\r\n    max-height: ${(p) => (p.usedInModal ? '600px' : 'auto')};\r\n    overflow-y: inherit;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: ${(p) => (p.usedInModal ? 'center' : 'flex-start')};\r\n  justify-content: center;\r\n  background-color: ${(p) => p.theme.colors.black};\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    max-width: 1000px;\r\n    min-width: 500px;\r\n    height: ${(p) => (p.usedInModal ? '600px' : 'auto')};\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  max-width: 100%;\r\n  width: ${(p) => !p.usedInModal && '100%'};\r\n  max-height: ${(p) => (p.usedInModal ? '600px' : '100%')};\r\n`;\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: ${(p) => (p.usedInModal ? '360px' : '100%')};\r\n    min-width: 360px;\r\n  }\r\n`;\r\n\r\nconst CloseModal = styled.div`\r\n  display: block;\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.light};\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Displays post with comments and options\r\n * Meant to be used in Modal or Page component\r\n */\r\nconst PostPopup = ({ id, closeModal, usedInModal }) => {\r\n  const { data, loading, error } = useQuery(GET_POST, {\r\n    variables: { id },\r\n  });\r\n\r\n  if (loading) return <Loading top=\"lg\" />;\r\n  if (error) return <NotFound />;\r\n\r\n  const post = data.getPost;\r\n\r\n  return (\r\n    <Root usedInModal={usedInModal}>\r\n      <Head title={post.title ? post.title : `${post.author.username}'s post`} />\r\n\r\n      {closeModal && (\r\n        <CloseModal onClick={closeModal}>\r\n          <CloseIcon width=\"16\" color=\"white\" />\r\n        </CloseModal>\r\n      )}\r\n\r\n      <Container usedInModal={usedInModal}>\r\n        <Left usedInModal={usedInModal}>\r\n          <Image src={post.image} usedInModal={usedInModal} />\r\n        </Left>\r\n\r\n        <Right usedInModal={usedInModal}>\r\n          <Spacing>\r\n            <PostPopupInfo author={post.author} />\r\n\r\n            {post.title && <Title>{post.title}</Title>}\r\n\r\n            <PostPopupComments\r\n              usedInModal={usedInModal}\r\n              comments={post.comments}\r\n              postId={post.id}\r\n              postAuthor={post.author}\r\n            />\r\n          </Spacing>\r\n\r\n          <Spacing>\r\n            <PostPopupOptions postId={post.id} postAuthor={post.author} postLikes={post.likes} />\r\n\r\n            <CreateComment post={post} />\r\n          </Spacing>\r\n        </Right>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostPopup.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func,\r\n  usedInModal: PropTypes.bool.isRequired,\r\n};\r\n\r\nPostPopup.defaultProps = {\r\n  usedInModal: true,\r\n};\r\n\r\nexport default withRouter(PostPopup);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Button } from './Form';\r\nimport { Spacing } from './Layout';\r\n\r\nconst Root = styled.div`\r\n  margin: auto;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  z-index: ${(p) => p.theme.zIndex.sm};\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n`;\r\n\r\n/**\r\n * Confirmation component, meant to be rendered inside Modal component\r\n */\r\nconst Confirm = ({ title, onCancel, onOk, cancelText, okText }) => (\r\n  <Root>\r\n    <div>{title}</div>\r\n\r\n    <Spacing top=\"md\" />\r\n\r\n    <ButtonContainer>\r\n      <Button onClick={onCancel}>{cancelText}</Button>\r\n\r\n      <Spacing left=\"xs\">\r\n        <Button color=\"red\" onClick={onOk}>\r\n          {okText}\r\n        </Button>\r\n      </Spacing>\r\n    </ButtonContainer>\r\n  </Root>\r\n);\r\n\r\nConfirm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  onOk: PropTypes.func.isRequired,\r\n  cancelText: PropTypes.string.isRequired,\r\n  okText: PropTypes.string.isRequired,\r\n};\r\n\r\nConfirm.defaultProps = {\r\n  title: 'Do you really want to delete this item?',\r\n  cancelText: 'Cancel',\r\n  okText: 'Delete',\r\n};\r\n\r\nexport default Confirm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Confirm from './Confirm';\r\nimport { Overlay } from './Layout';\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: ${(p) => p.theme.spacing.sm};\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: ${(p) => p.theme.zIndex.lg};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    align-items: center;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\n/**\r\n * Main component for rendering Modals\r\n */\r\nconst Modal = ({ children, open, onClose, type, ...otherProps }) => {\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <Root>\r\n      <Overlay onClick={onClose} />\r\n\r\n      {type === 'confirm' ? <Confirm {...otherProps} /> : children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  type: PropTypes.oneOf(['', 'confirm']),\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'components/Form';\r\nimport Follow from 'components/Follow';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  z-index: ${(p) => p.theme.zIndex.lg};\r\n  box-shadow: ${(p) => p.theme.shadows.xl};\r\n`;\r\n\r\nconst FollowItem = styled.div`\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n  text-align: center;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main} !important;\r\n\r\n  &:first-child {\r\n    border-top: 0 !important ;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n    color: ${(p) => p.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Post Card options, meant to be used in PostCard components Modal\r\n */\r\nconst PostCardOption = ({ postId, author, closeOption, deletePost }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const copyToClipboard = () => {\r\n    try {\r\n      navigator.clipboard.writeText(\r\n        `${process.env.REACT_APP_FRONTEND_URL}${generatePath(Routes.POST, {\r\n          id: postId,\r\n        })}`\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to read clipboard contents: ', error);\r\n    }\r\n\r\n    closeOption();\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      {auth.user.id !== author.id && (\r\n        <FollowItem>\r\n          <Follow user={author} />\r\n        </FollowItem>\r\n      )}\r\n\r\n      <StyledButton fullWidth text onClick={copyToClipboard}>\r\n        Copy link\r\n      </StyledButton>\r\n\r\n      {auth.user.id === author.id && (\r\n        <StyledButton fullWidth text onClick={deletePost}>\r\n          Delete post\r\n        </StyledButton>\r\n      )}\r\n\r\n      <StyledButton fullWidth onClick={closeOption} text>\r\n        Cancel\r\n      </StyledButton>\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostCardOption.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  author: PropTypes.object.isRequired,\r\n  closeOption: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostCardOption;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useApolloClient } from '@apollo/client';\r\n\r\nimport Comment from 'components/Comment';\r\nimport CreateComment from 'components/CreateComment';\r\nimport Like from 'components/Like';\r\nimport { DotsIcon, PostCommentIcon } from 'components/icons';\r\nimport { Spacing } from 'components/Layout';\r\nimport { A, H3 } from 'components/Text';\r\nimport { Button } from 'components/Form';\r\nimport PostCardOption from 'components/PostCard/PostCardOption';\r\nimport Modal from 'components/Modal';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { GET_FOLLOWED_POSTS, DELETE_POST } from 'graphql/post';\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { GET_USER_POSTS } from 'graphql/user';\r\n\r\nimport { HOME_PAGE_POSTS_LIMIT, PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { timeAgo } from 'utils/date';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  padding-bottom: ${(p) => p.theme.spacing.xs};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\nconst TopRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst CreatedAt = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  color: ${(p) => p.theme.colors.text.hint};\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.text.secondary};\r\n  border: 0;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst Author = styled(A)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  object-fit: cover;\r\n  cursor: pointer;\r\n  margin-bottom: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Title = styled.div`\r\n  word-break: break-word;\r\n  white-space: pre-line;\r\n`;\r\n\r\nconst BottomRow = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CountAndIcons = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Count = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-bottom: ${(p) => p.theme.spacing.xs};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\nconst Comments = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0;\r\n  padding-left: 4px;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n`;\r\n\r\nconst CommentLine = styled.div`\r\n  margin-bottom: 5px;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\n/**\r\n * Component for rendering user post\r\n */\r\nconst PostCard = ({ author, imagePublicId, comments, title, createdAt, image, likes, postId, openModal }) => {\r\n  const [{ auth }] = useStore();\r\n  const client = useApolloClient();\r\n  const [isCommentOpen, setIsCommentOpen] = useState(false);\r\n  const [isOptionOpen, setIsOptionOpen] = useState(false);\r\n\r\n  const toggleCreateComment = () => {\r\n    setIsCommentOpen(true);\r\n  };\r\n\r\n  const toggleComment = () => {\r\n    setIsCommentOpen(!isCommentOpen);\r\n  };\r\n\r\n  const closeOption = () => setIsOptionOpen(false);\r\n\r\n  const openOption = () => setIsOptionOpen(true);\r\n\r\n  const deletePost = async () => {\r\n    try {\r\n      await client.mutate({\r\n        mutation: DELETE_POST,\r\n        variables: { input: { id: postId, imagePublicId } },\r\n        refetchQueries: () => [\r\n          {\r\n            query: GET_FOLLOWED_POSTS,\r\n            variables: {\r\n              userId: auth.user.id,\r\n              skip: 0,\r\n              limit: HOME_PAGE_POSTS_LIMIT,\r\n            },\r\n          },\r\n          { query: GET_AUTH_USER },\r\n          {\r\n            query: GET_USER_POSTS,\r\n            variables: {\r\n              username: auth.user.username,\r\n              skip: 0,\r\n              limit: PROFILE_PAGE_POSTS_LIMIT,\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {}\r\n\r\n    setIsOptionOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Root>\r\n        <Modal onClose={closeOption} open={isOptionOpen}>\r\n          <PostCardOption postId={postId} closeOption={closeOption} author={author} deletePost={deletePost} />\r\n        </Modal>\r\n\r\n        <TopRow>\r\n          <Author\r\n            to={generatePath(Routes.USER_PROFILE, {\r\n              username: author.username,\r\n            })}\r\n          >\r\n            <Avatar image={author.image} />\r\n\r\n            <Spacing left=\"xs\">\r\n              <Name>{author.fullName}</Name>\r\n              <CreatedAt>{timeAgo(createdAt)}</CreatedAt>\r\n            </Spacing>\r\n          </Author>\r\n\r\n          <Button ghost onClick={openOption}>\r\n            <DotsIcon />\r\n          </Button>\r\n        </TopRow>\r\n\r\n        <Spacing left=\"sm\" bottom=\"sm\" top=\"xs\" right=\"sm\">\r\n          <Title>\r\n            <H3>{title}</H3>\r\n          </Title>\r\n        </Spacing>\r\n\r\n        {image && <Poster src={image} onClick={openModal} />}\r\n\r\n        <BottomRow>\r\n          <CountAndIcons>\r\n            <Count>\r\n              {likes.length} likes\r\n              <Spacing />\r\n              <StyledButton onClick={toggleComment} text>\r\n                {comments.length} comments\r\n              </StyledButton>\r\n            </Count>\r\n\r\n            <Icons>\r\n              <Like fullWidth withText user={author} postId={postId} likes={likes} />\r\n\r\n              <Button fullWidth text onClick={toggleCreateComment}>\r\n                <PostCommentIcon /> <Spacing inline left=\"xxs\" /> <b>Comment</b>\r\n              </Button>\r\n            </Icons>\r\n          </CountAndIcons>\r\n\r\n          {isCommentOpen && (\r\n            <>\r\n              <Spacing top=\"xs\">\r\n                <CommentLine />\r\n                <CreateComment post={{ id: postId, author }} focus={isCommentOpen} />\r\n              </Spacing>\r\n\r\n              {comments.length > 0 && <CommentLine />}\r\n\r\n              <Comments>\r\n                {comments.map((comment) => (\r\n                  <Comment key={comment.id} comment={comment} postId={postId} postAuthor={author} />\r\n                ))}\r\n              </Comments>\r\n            </>\r\n          )}\r\n        </BottomRow>\r\n      </Root>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  author: PropTypes.object.isRequired,\r\n  imagePublicId: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  image: PropTypes.string,\r\n  likes: PropTypes.array.isRequired,\r\n  comments: PropTypes.array,\r\n  createdAt: PropTypes.string.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n","import { useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get, uniqBy, setWith, clone } from 'lodash';\r\n\r\n/**\r\n * Component that adds Infinite scroll functionality to UI\r\n */\r\nconst InfiniteScroll = ({ data, dataKey, fetchMore, variables, count, children }) => {\r\n  const handleScroll = useMemo(\r\n    () => async () => {\r\n      const loadMore = () => {\r\n        return fetchMore({\r\n          variables: { ...variables, skip: data.length },\r\n          updateQuery: (prev, { fetchMoreResult }) => {\r\n            const previousData = get(prev, dataKey);\r\n            const fetchMoreData = get(fetchMoreResult, dataKey);\r\n            return setWith(clone(prev), dataKey, uniqBy([...previousData, ...fetchMoreData], 'id'), clone);\r\n          },\r\n        });\r\n      };\r\n\r\n      const windowHeight = window.innerHeight;\r\n      const scrollTop = document.documentElement.scrollTop;\r\n      const offsetHeight = document.documentElement.offsetHeight;\r\n      const scrolled = windowHeight + scrollTop > offsetHeight - offsetHeight / 3;\r\n\r\n      // Stop event listener if all the data has been loaded\r\n      if (data.length >= count) {\r\n        window.removeEventListener('scroll', handleScroll);\r\n        return;\r\n      }\r\n\r\n      // Load more data if user has scrolled to bottom and if there's still data in db to display\r\n      if (scrolled) {\r\n        window.removeEventListener('scroll', handleScroll);\r\n        loadMore();\r\n      }\r\n    },\r\n    [count, data.length, dataKey, fetchMore, variables]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [handleScroll]);\r\n\r\n  return children(data);\r\n};\r\n\r\nInfiniteScroll.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  dataKey: PropTypes.string.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  fetchMore: PropTypes.func.isRequired,\r\n  variables: PropTypes.object.isRequired,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: ${(p) => p.width && `${p.width}px`};\r\n  height: ${(p) => p.height && `${p.height}px`};\r\n  display: ${(p) => p.inline && `inline-block`};\r\n  margin-top: ${(p) => p.theme.spacing[p.top]};\r\n  margin-left: ${(p) => p.theme.spacing[p.left]};\r\n  margin-right: ${(p) => p.theme.spacing[p.right]};\r\n  margin-bottom: ${(p) => p.theme.spacing[p.bottom]};\r\n  background-color: ${(p) => p.theme.colors.grey[200]};\r\n  border-radius: ${(p) => (p.radius ? p.theme.radius[p.radius] : p.theme.radius.sm)};\r\n`;\r\n\r\n/**\r\n * Renders an UI block to inform a user, that content will be shown here after loading\r\n */\r\nconst Skeleton = ({ count, width, height, inline, top, right, bottom, left, radius }) => {\r\n  const loopSkeleton = () => {\r\n    let skeleton = [];\r\n    for (let i = 0; i < count; i++) {\r\n      skeleton.push(\r\n        <Container\r\n          key={i}\r\n          top={top}\r\n          left={left}\r\n          right={right}\r\n          width={width}\r\n          height={height}\r\n          inline={inline}\r\n          bottom={bottom}\r\n          radius={radius}\r\n        />\r\n      );\r\n    }\r\n    return skeleton;\r\n  };\r\n\r\n  return loopSkeleton();\r\n};\r\n\r\nSkeleton.propTypes = {\r\n  inline: PropTypes.bool,\r\n  count: PropTypes.number,\r\n  width: PropTypes.number,\r\n  left: PropTypes.string,\r\n  top: PropTypes.string,\r\n  right: PropTypes.string,\r\n  bottom: PropTypes.string,\r\n  height: PropTypes.number,\r\n};\r\n\r\nSkeleton.defaultProps = {\r\n  count: 1,\r\n};\r\n\r\nexport default Skeleton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { UploadImageIcon } from 'components/icons';\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 9px 14px;\r\n  cursor: pointer;\r\n  transition: background-color 0.1s;\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  border-radius: ${(p) => p.theme.radius.lg};\r\n  background-color: ${(p) => p.theme.colors.grey[100]};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[300]};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for uploading post image\r\n */\r\nconst PostImageUpload = ({ handleChange, label }) => (\r\n  <>\r\n    <Input name=\"image\" onChange={handleChange} type=\"file\" id=\"post-image\" accept=\"image/x-png,image/jpeg\" />\r\n\r\n    <Label htmlFor=\"post-image\">\r\n      <UploadImageIcon />\r\n\r\n      {label && <Spacing left=\"xs\">{label}</Spacing>}\r\n    </Label>\r\n  </>\r\n);\r\n\r\nPostImageUpload.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string,\r\n};\r\n\r\nexport default PostImageUpload;\r\n","/**\r\n * Maximum image size constants when uploading\r\n */\r\n\r\nexport const MAX_POST_IMAGE_SIZE = 3000000;\r\n\r\nexport const MAX_USER_COVER_IMAGE_SIZE = 5000000;\r\n\r\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\r\n","import { useStore } from 'store';\r\nimport { SET_MESSAGE } from 'store/message';\r\nimport { MessageType } from 'constants/MessageType';\r\n\r\n/**\r\n * React hook for dispatching global messages\r\n */\r\nexport const useGlobalMessage = () => {\r\n  const [, dispatch] = useStore();\r\n\r\n  const dispatchAction = (text, messageType, autoClose) => {\r\n    dispatch({\r\n      type: SET_MESSAGE,\r\n      payload: {\r\n        type: messageType,\r\n        text: text,\r\n        autoClose,\r\n      },\r\n    });\r\n  };\r\n\r\n  const success = (text, autoClose) => dispatchAction(text, MessageType.SUCCESS, autoClose);\r\n\r\n  const info = (text, autoClose) => dispatchAction(text, MessageType.INFO, autoClose);\r\n\r\n  const warning = (text, autoClose) => dispatchAction(text, MessageType.WARNING, autoClose);\r\n\r\n  const error = (text, autoClose) => dispatchAction(text, MessageType.ERROR, autoClose);\r\n\r\n  return { success, info, warning, error };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing, Overlay, Container } from 'components/Layout';\r\nimport { Error } from 'components/Text';\r\nimport { Button } from 'components/Form';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport PostImageUpload from 'pages/Home/PostImageUpload';\r\n\r\nimport { GET_FOLLOWED_POSTS, CREATE_POST } from 'graphql/post';\r\nimport { GET_AUTH_USER, GET_USER_POSTS } from 'graphql/user';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\nimport { MAX_POST_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nconst Root = styled(Container)`\r\n  border: 0;\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  margin: 0 ${(p) => p.theme.spacing.xs};\r\n  padding-left: ${(p) => p.theme.spacing.sm};\r\n  padding-top: ${(p) => p.theme.spacing.xs};\r\n  border: 0;\r\n  outline: none;\r\n  resize: none;\r\n  transition: 0.1s ease-out;\r\n  height: ${(p) => (p.focus ? '80px' : '40px')};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  background-color: ${(p) => p.theme.colors.grey[100]};\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n`;\r\n\r\nconst ImagePreviewContainer = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Options = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\n/**\r\n * Component for creating a post\r\n */\r\nconst CreatePost = () => {\r\n  const [{ auth }] = useStore();\r\n  const [title, setTitle] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [apiError, setApiError] = useState(false);\r\n  const message = useGlobalMessage();\r\n  const [createPost, { loading }] = useMutation(CREATE_POST, {\r\n    refetchQueries: [\r\n      {\r\n        query: GET_FOLLOWED_POSTS,\r\n        variables: {\r\n          userId: auth.user.id,\r\n          skip: 0,\r\n          limit: HOME_PAGE_POSTS_LIMIT,\r\n        },\r\n      },\r\n      { query: GET_AUTH_USER },\r\n      {\r\n        query: GET_USER_POSTS,\r\n        variables: {\r\n          username: auth.user.username,\r\n          skip: 0,\r\n          limit: PROFILE_PAGE_POSTS_LIMIT,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const handleReset = () => {\r\n    setTitle('');\r\n    setImage('');\r\n    setIsFocused(false);\r\n    setError('');\r\n    setApiError(false);\r\n  };\r\n\r\n  const handleOnFocus = () => setIsFocused(true);\r\n\r\n  const handlePostImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_POST_IMAGE_SIZE) {\r\n      message.error(`File size should be less then ${MAX_POST_IMAGE_SIZE / 1000000}MB`);\r\n      return;\r\n    }\r\n\r\n    setImage(file);\r\n\r\n    setIsFocused(true);\r\n    e.target.value = null;\r\n  };\r\n\r\n  const handleTitleChange = (e) => setTitle(e.target.value);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createPost({\r\n        variables: { input: { title, image, authorId: auth.user.id } },\r\n      });\r\n      handleReset();\r\n    } catch (error) {\r\n      setApiError(true);\r\n    }\r\n  };\r\n\r\n  const isShareDisabled = loading || (!loading && !image && !title);\r\n\r\n  return (\r\n    <>\r\n      {isFocused && <Overlay onClick={handleReset} />}\r\n\r\n      <Root zIndex={isFocused ? 'md' : 'xs'} color=\"white\" radius=\"sm\" padding=\"sm\">\r\n        <form onSubmit={handleSubmit}>\r\n          <Wrapper>\r\n            <Avatar image={auth.user.image} size={40} />\r\n\r\n            <Textarea\r\n              type=\"textarea\"\r\n              name=\"title\"\r\n              focus={isFocused}\r\n              value={title}\r\n              onFocus={handleOnFocus}\r\n              onChange={handleTitleChange}\r\n              placeholder=\"Add a post\"\r\n            />\r\n\r\n            {!isFocused && <PostImageUpload handleChange={handlePostImageUpload} />}\r\n          </Wrapper>\r\n\r\n          {image && (\r\n            <Spacing bottom=\"sm\">\r\n              <ImagePreviewContainer>\r\n                <ImagePreview src={URL.createObjectURL(image)} />\r\n              </ImagePreviewContainer>\r\n            </Spacing>\r\n          )}\r\n\r\n          {isFocused && (\r\n            <Options>\r\n              <PostImageUpload label=\"Photo\" handleChange={handlePostImageUpload} />\r\n\r\n              <Buttons>\r\n                <Button text type=\"button\" onClick={handleReset}>\r\n                  Cancel\r\n                </Button>\r\n                <Button disabled={isShareDisabled} type=\"submit\">\r\n                  Share\r\n                </Button>\r\n              </Buttons>\r\n            </Options>\r\n          )}\r\n\r\n          {apiError ||\r\n            (error && (\r\n              <Spacing top=\"xs\" bottom=\"sm\">\r\n                <Error size=\"xs\">{apiError ? 'Something went wrong, please try again.' : error}</Error>\r\n              </Spacing>\r\n            ))}\r\n        </form>\r\n      </Root>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React, { useState, Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { A } from 'components/Text';\r\nimport PostPopup from 'components/PostPopup';\r\nimport Modal from 'components/Modal';\r\nimport PostCard from 'components/PostCard';\r\nimport { Spacing, Container } from 'components/Layout';\r\nimport { Loading } from 'components/Loading';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Skeleton from 'components/Skeleton';\r\nimport CreatePost from 'components/CreatePost';\r\nimport Head from 'components/Head';\r\n\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Empty = styled.div`\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst StyledA = styled(A)`\r\n  text-decoration: underline;\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\n/**\r\n * Home page of the app\r\n */\r\nconst Home = () => {\r\n  const [{ auth }] = useStore();\r\n  const [modalPostId, setModalPostId] = useState(null);\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: HOME_PAGE_POSTS_LIMIT,\r\n  };\r\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_FOLLOWED_POSTS, {\r\n    variables,\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState('', '', '/');\r\n    setModalPostId(null);\r\n  };\r\n\r\n  const openModal = (postId) => {\r\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (loading && networkStatus === 1) {\r\n      return <Skeleton height={500} bottom=\"lg\" top=\"lg\" count={HOME_PAGE_POSTS_LIMIT} />;\r\n    }\r\n\r\n    const { posts, count } = data.getFollowedPosts;\r\n    if (!posts.length) {\r\n      return (\r\n        <Empty>\r\n          <StyledA to={generatePath(Routes.EXPLORE)}>Explore new posts</StyledA> or{' '}\r\n          <StyledA to={generatePath(Routes.PEOPLE)}>Find new people</StyledA>\r\n        </Empty>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <InfiniteScroll\r\n        data={posts}\r\n        dataKey=\"getFollowedPosts.posts\"\r\n        count={parseInt(count)}\r\n        variables={variables}\r\n        fetchMore={fetchMore}\r\n      >\r\n        {(data) => {\r\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\r\n\r\n          return (\r\n            <Fragment>\r\n              {data.map((post) => (\r\n                <Fragment key={post.id}>\r\n                  <Modal open={modalPostId === post.id} onClose={closeModal}>\r\n                    <PostPopup id={post.id} closeModal={closeModal} />\r\n                  </Modal>\r\n\r\n                  <Spacing bottom=\"lg\" top=\"lg\">\r\n                    <PostCard\r\n                      author={post.author}\r\n                      imagePublicId={post.imagePublicId}\r\n                      postId={post.id}\r\n                      comments={post.comments}\r\n                      createdAt={post.createdAt}\r\n                      title={post.title}\r\n                      image={post.image}\r\n                      likes={post.likes}\r\n                      openModal={() => openModal(post.id)}\r\n                    />\r\n                  </Spacing>\r\n                </Fragment>\r\n              ))}\r\n\r\n              {showNextLoading && <Loading top=\"lg\" />}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </InfiniteScroll>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Head />\r\n\r\n      <Spacing top=\"lg\" />\r\n\r\n      <CreatePost />\r\n\r\n      {renderContent()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useApolloClient } from '@apollo/client';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport { UserIcon } from 'components/icons';\r\n\r\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  visibility: hidden;\r\n  border-radius: 50%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: ${(p) => p.theme.colors.white};\r\n  opacity: 0;\r\n  transition: visibility 0.2s linear, opacity 0.2s linear;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  width: 180px;\r\n  height: 180px;\r\n  display: block;\r\n  overflow: hidden;\r\n  cursor: ${(p) => p.authUser && 'pointer'};\r\n  border-radius: 50%;\r\n  border: 4px solid ${(p) => p.theme.colors.border.main};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/**\r\n * Displays and Updates user profile image\r\n */\r\nconst ProfileImageUpload = ({ userId, image, imagePublicId, username }) => {\r\n  const [{ auth }] = useStore();\r\n  const client = useApolloClient();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleImageChange = async (e) => {\r\n    setLoading(true);\r\n\r\n    const file = e.target.files[0];\r\n    e.target.value = '';\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_USER_PROFILE_IMAGE_SIZE) {\r\n      setLoading(false);\r\n      message.error(`File size should be less then ${MAX_USER_PROFILE_IMAGE_SIZE / 1000000}MB`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPLOAD_PHOTO,\r\n        variables: { input: { id: auth.user.id, image: file, imagePublicId } },\r\n        refetchQueries: () => [\r\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n          { query: GET_AUTH_USER },\r\n          { query: GET_USER, variables: { username: auth.user.username } },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      message.error(err.graphQLErrors[0].message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const renderProfileImage = () => {\r\n    if (loading) {\r\n      return <Loading top=\"xl\" />;\r\n    }\r\n\r\n    return image ? <Image src={image} alt=\"profile\" accept=\"image/x-png,image/jpeg\" /> : <UserIcon width=\"172\" />;\r\n  };\r\n\r\n  const authUser = auth.user.id === userId;\r\n\r\n  return (\r\n    <>\r\n      {authUser && (\r\n        <Input name=\"image\" type=\"file\" id=\"image\" accept=\"image/x-png,image/jpeg\" onChange={handleImageChange} />\r\n      )}\r\n\r\n      <Label authUser={authUser} htmlFor=\"image\">\r\n        {authUser && <Overlay>{image ? 'Update' : 'Upload'}</Overlay>}\r\n\r\n        {renderProfileImage()}\r\n      </Label>\r\n    </>\r\n  );\r\n};\r\n\r\nProfileImageUpload.propTypes = {\r\n  image: PropTypes.string,\r\n  imagePublicId: PropTypes.string,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProfileImageUpload;\r\n","export default __webpack_public_path__ + \"static/media/background.276b499d.jpg\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useApolloClient } from '@apollo/client';\r\n\r\nimport { UploadImageIcon } from 'components/icons';\r\nimport { Loading } from 'components/Loading';\r\n\r\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport defaultBackgroundImage from './background.jpg';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  height: 350px;\r\n  position: relative;\r\n  background-image: url(${(p) => (p.image ? p.image : defaultBackgroundImage)});\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-bottom-left-radius: ${(p) => p.theme.radius.md};\r\n  border-bottom-right-radius: ${(p) => p.theme.radius.md};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: absolute;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  left: ${(p) => p.theme.spacing.sm};\r\n  top: ${(p) => p.theme.spacing.sm};\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  transition: background-color 0.4s;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\n/**\r\n * Displays and Updates user Cover image\r\n */\r\nconst ProfileCoverUpload = ({ coverImagePublicId, coverImage, userId }) => {\r\n  const [{ auth }] = useStore();\r\n  const client = useApolloClient();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleImageChange = async (e) => {\r\n    setLoading(true);\r\n\r\n    const file = e.target.files[0];\r\n    e.target.value = '';\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_USER_COVER_IMAGE_SIZE) {\r\n      message.error(`File size should be less then ${MAX_USER_COVER_IMAGE_SIZE / 1000000}MB`);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPLOAD_PHOTO,\r\n        variables: {\r\n          input: {\r\n            id: auth.user.id,\r\n            image: file,\r\n            imagePublicId: coverImagePublicId,\r\n            isCover: true,\r\n          },\r\n        },\r\n        refetchQueries: () => [\r\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n          { query: GET_AUTH_USER },\r\n          { query: GET_USER, variables: { username: auth.user.username } },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      message.error(err.graphQLErrors[0].message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Root image={coverImage}>\r\n      <Input\r\n        name=\"coverImage\"\r\n        type=\"file\"\r\n        id=\"coverImage\"\r\n        onChange={handleImageChange}\r\n        accept=\"image/x-png,image/jpeg\"\r\n      />\r\n\r\n      {loading && <Loading top=\"xl\" size=\"xl\" />}\r\n\r\n      {auth.user.id === userId && (\r\n        <Label htmlFor=\"coverImage\">\r\n          <UploadImageIcon width=\"14\" color=\"white\" />\r\n        </Label>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfileCoverUpload.propTypes = {\r\n  userId: PropTypes.string.isRequired,\r\n  coverImagePublicId: PropTypes.string,\r\n  coverImage: PropTypes.string,\r\n};\r\n\r\nexport default ProfileCoverUpload;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link, generatePath } from 'react-router-dom';\r\nimport { useSubscription } from '@apollo/client';\r\n\r\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\r\n\r\nimport { H1 } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Follow from 'components/Follow';\r\nimport ProfileImageUpload from './ProfileImageUpload';\r\nimport ProfileCoverUpload from './ProfileCoverUpload';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileImage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: -140px;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n  position: relative;\r\n\r\n  ${H1} {\r\n    font-size: ${(p) => p.theme.font.size.lg};\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    ${H1} {\r\n      font-size: ${(p) => p.theme.font.size.xl};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FollowAndMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Message = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\nconst Online = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${(p) => p.theme.colors.success};\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst List = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n  color: ${(p) => p.theme.colors.grey[800]};\r\n  white-space: nowrap;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    padding: 0 ${(p) => p.theme.spacing.lg};\r\n  }\r\n`;\r\n\r\n/**\r\n * Renders user information in profile page\r\n */\r\nconst ProfileInfo = ({ user }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\r\n    variables: { authUserId: auth.user.id, userId: user.id },\r\n  });\r\n\r\n  let isUserOnline = user.isOnline;\r\n  if (!loading && data) {\r\n    isUserOnline = data.isUserOnline.isOnline;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <ProfileCoverUpload userId={user.id} coverImage={user.coverImage} coverImagePublicId={user.coverImagePublicId} />\r\n\r\n      <ProfileImage>\r\n        <ProfileImageUpload\r\n          userId={user.id}\r\n          image={user.image}\r\n          imagePublicId={user.imagePublicId}\r\n          username={user.username}\r\n        />\r\n\r\n        <FullName>\r\n          <H1>{user.fullName}</H1>\r\n\r\n          {isUserOnline && auth.user.id !== user.id && <Online />}\r\n\r\n          {auth.user.id !== user.id && (\r\n            <FollowAndMessage>\r\n              <Follow user={user} />\r\n\r\n              <Spacing left=\"sm\" />\r\n              <Message to={generatePath(Routes.MESSAGES, { userId: user.id })}>Message</Message>\r\n            </FollowAndMessage>\r\n          )}\r\n        </FullName>\r\n      </ProfileImage>\r\n\r\n      <Info>\r\n        <List>\r\n          <b>{user.posts.length} </b> posts\r\n        </List>\r\n        <List>\r\n          <b>{user.followers.length} </b> followers\r\n        </List>\r\n        <List>\r\n          <b>{user.following.length} </b> following\r\n        </List>\r\n      </Info>\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfileInfo.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { EmptyIcon } from 'components/icons';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n/**\r\n * Component for displaying when there is no data provided\r\n */\r\nconst Empty = ({ text }) => (\r\n  <Container>\r\n    <EmptyIcon />\r\n\r\n    {text}\r\n  </Container>\r\n);\r\n\r\nEmpty.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Empty;\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery } from '@apollo/client';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport Skeleton from 'components/Skeleton';\r\nimport Modal from 'components/Modal';\r\nimport PostPopup from 'components/PostPopup';\r\nimport PostCard from 'components/PostCard';\r\nimport { Spacing } from 'components/Layout';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport { Loading } from 'components/Loading';\r\nimport Empty from 'components/Empty';\r\n\r\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { GET_USER_POSTS } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\n/**\r\n * Renders posts in profile page\r\n */\r\nconst ProfilePosts = ({ username }) => {\r\n  const [isPostPopupOpen, setIsPostPopupOpen] = useState(false);\r\n  const [modalPostId, setModalPostId] = useState('');\r\n  const variables = { username, skip: 0, limit: PROFILE_PAGE_POSTS_LIMIT };\r\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USER_POSTS, {\r\n    variables,\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  const openModal = (postId) => {\r\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n    setIsPostPopupOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState('', '', generatePath(Routes.USER_PROFILE, { username }));\r\n    setIsPostPopupOpen(false);\r\n  };\r\n\r\n  if (loading && networkStatus === 1) {\r\n    return <Skeleton height={500} bottom=\"lg\" top=\"lg\" count={PROFILE_PAGE_POSTS_LIMIT} />;\r\n  }\r\n\r\n  const { posts, count } = data.getUserPosts;\r\n  if (!posts.length > 0) {\r\n    return (\r\n      <Spacing bottom=\"lg\">\r\n        <Empty text=\"No posts yet.\" />\r\n      </Spacing>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      data={posts}\r\n      dataKey=\"getUserPosts.posts\"\r\n      count={parseInt(count)}\r\n      variables={variables}\r\n      fetchMore={fetchMore}\r\n    >\r\n      {(data) => {\r\n        return data.map((post, i) => {\r\n          const showNextLoading = loading && networkStatus === 3 && data.length - 1 === i;\r\n\r\n          return (\r\n            <Fragment key={post.id}>\r\n              {modalPostId === post.id && (\r\n                <Modal open={isPostPopupOpen} onClose={closeModal}>\r\n                  <PostPopup id={post.id} closeModal={closeModal} />\r\n                </Modal>\r\n              )}\r\n\r\n              <Spacing bottom=\"lg\">\r\n                <PostCard\r\n                  author={post.author}\r\n                  postId={post.id}\r\n                  imagePublicId={post.imagePublicId}\r\n                  comments={post.comments}\r\n                  title={post.title}\r\n                  image={post.image}\r\n                  likes={post.likes}\r\n                  createdAt={post.createdAt}\r\n                  openModal={() => openModal(post.id)}\r\n                />\r\n              </Spacing>\r\n\r\n              {showNextLoading && <Loading top=\"lg\" />}\r\n            </Fragment>\r\n          );\r\n        });\r\n      }}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\nProfilePosts.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProfilePosts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport styled from 'styled-components';\r\n\r\nimport Skeleton from 'components/Skeleton';\r\nimport { Container, Spacing } from 'components/Layout';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport CreatePost from 'components/CreatePost';\r\nimport ProfilePosts from './ProfilePosts';\r\nimport NotFound from 'components/NotFound';\r\nimport Head from 'components/Head';\r\n\r\nimport { GET_USER } from 'graphql/user';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\n/**\r\n * User Profile Page\r\n */\r\nconst Profile = ({ match }) => {\r\n  const [{ auth }] = useStore();\r\n  const { username } = match.params;\r\n  const { data, loading, error } = useQuery(GET_USER, {\r\n    variables: { username },\r\n  });\r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <Container padding=\"xxs\">\r\n          <Skeleton height={350} />\r\n          <Container maxWidth=\"sm\">\r\n            <Spacing top=\"lg\" bottom=\"lg\">\r\n              <Skeleton height={82} />\r\n            </Spacing>\r\n          </Container>\r\n        </Container>\r\n      );\r\n    }\r\n\r\n    if (error || !data.getUser) return <NotFound />;\r\n\r\n    return (\r\n      <Container padding=\"xxs\">\r\n        <ProfileInfo user={data.getUser} />\r\n\r\n        <Container maxWidth=\"sm\">\r\n          <Spacing top=\"lg\" bottom=\"lg\">\r\n            {username === auth.user.username && <CreatePost />}\r\n          </Spacing>\r\n\r\n          <ProfilePosts username={username} />\r\n        </Container>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Head title={username} />\r\n\r\n      {renderContent()}\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(Profile);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { LikeIcon, PostCommentIcon } from 'components/icons';\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  opacity: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: opacity 0.3s, visibility 0.3s;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  cursor: pointer;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  overflow: hidden;\r\n\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Photo = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-color: ${(p) => p.theme.colors.grey[300]};\r\n`;\r\n\r\n/**\r\n * Card component, meant to be used in Explore page\r\n */\r\nconst ExploreCard = ({ openPostPopup, image, countLikes, countComments }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const img = new Image();\r\n    img.src = image;\r\n\r\n    img.onload = () => {\r\n      setImageLoaded(true);\r\n    };\r\n\r\n    return () => {\r\n      img.onload = null;\r\n    };\r\n  }, [image]);\r\n\r\n  return (\r\n    <Root>\r\n      <Photo style={imageLoaded ? { backgroundImage: `url(${image})` } : {}} />\r\n\r\n      <Overlay onClick={openPostPopup}>\r\n        <LikeIcon color=\"white\" />\r\n\r\n        <Spacing left=\"xs\" right=\"lg\">\r\n          {countLikes}\r\n        </Spacing>\r\n\r\n        <PostCommentIcon color=\"white\" />\r\n\r\n        <Spacing left=\"xs\">{countComments}</Spacing>\r\n      </Overlay>\r\n    </Root>\r\n  );\r\n};\r\n\r\nExploreCard.propTypes = {\r\n  openPostPopup: PropTypes.func.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  countLikes: PropTypes.number.isRequired,\r\n  countComments: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ExploreCard;\r\n","import React, { useState, Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { Container } from 'components/Layout';\r\nimport ExploreCard from './ExploreCard';\r\nimport Skeleton from 'components/Skeleton';\r\nimport PostPopup from 'components/PostPopup';\r\nimport Modal from 'components/Modal';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Empty from 'components/Empty';\r\nimport { Loading } from 'components/Loading';\r\nimport Head from 'components/Head';\r\n\r\nimport { GET_POSTS } from 'graphql/post';\r\n\r\nimport { EXPLORE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n  margin-bottom: ${(p) => p.theme.spacing.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst PostsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\r\n  grid-auto-rows: auto;\r\n  grid-gap: 20px;\r\n`;\r\n\r\n/**\r\n * Explore page\r\n */\r\nconst Explore = () => {\r\n  const [{ auth }] = useStore();\r\n  const [modalPostId, setModalPostId] = useState(null);\r\n  const variables = {\r\n    authUserId: auth.user.id,\r\n    skip: 0,\r\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\r\n  };\r\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_POSTS, {\r\n    variables,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState('', '', '/explore');\r\n    setModalPostId(null);\r\n  };\r\n\r\n  const openModal = (postId) => {\r\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (loading && networkStatus === 1) {\r\n      return (\r\n        <PostsContainer>\r\n          <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\r\n        </PostsContainer>\r\n      );\r\n    }\r\n\r\n    const { posts, count } = data.getPosts;\r\n    if (!posts.length > 0) return <Empty text=\"No posts yet.\" />;\r\n\r\n    return (\r\n      <InfiniteScroll\r\n        data={posts}\r\n        dataKey=\"getPosts.posts\"\r\n        count={parseInt(count)}\r\n        variables={variables}\r\n        fetchMore={fetchMore}\r\n      >\r\n        {(data) => {\r\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\r\n\r\n          return (\r\n            <Fragment>\r\n              <PostsContainer>\r\n                {data.map((post) => (\r\n                  <Fragment key={post.id}>\r\n                    <Modal open={modalPostId === post.id} onClose={closeModal}>\r\n                      <PostPopup id={post.id} closeModal={closeModal} />\r\n                    </Modal>\r\n\r\n                    <ExploreCard\r\n                      image={post.image}\r\n                      countLikes={post.likes.length}\r\n                      countComments={post.comments.length}\r\n                      openPostPopup={() => openModal(post.id)}\r\n                    />\r\n                  </Fragment>\r\n                ))}\r\n              </PostsContainer>\r\n\r\n              {showNextLoading && <Loading top=\"lg\" />}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </InfiniteScroll>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Root maxWidth=\"md\">\r\n      <Head title=\"Explore New Posts and Users\" />\r\n\r\n      {renderContent()}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Follow from 'components/Follow';\r\nimport theme from 'theme';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 280px;\r\n  background-color: white;\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n  transition: border-color 0.1s;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InitialLetters = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-transform: uppercase;\r\n  color: ${(p) => p.theme.colors.white};\r\n  font-size: ${(p) => p.theme.font.size.lg};\r\n  background-color: ${(p) => p.color};\r\n`;\r\n\r\nconst FullName = styled.span`\r\n  max-width: 200px;\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst UserName = styled.span`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\n/**\r\n * Card component for rendering user info, meant to be used in Peoples page\r\n */\r\nconst PeopleCard = ({ user }) => {\r\n  const [color, setColor] = useState('');\r\n\r\n  const { fullName, username, image } = user;\r\n\r\n  useEffect(() => {\r\n    const { primary, secondary, success, error } = theme.colors;\r\n    const colors = [primary.main, secondary.main, success, error.main];\r\n    const randomColor = Math.floor(Math.random() * colors.length);\r\n    setColor(colors[randomColor]);\r\n  }, []);\r\n\r\n  const splitFullName = () => {\r\n    // If a fullName contains more word than two, take first two word\r\n    const splitWords = fullName.split(' ').slice(0, 2).join(' ');\r\n\r\n    // Take only first letters from split words\r\n    const firstLetters = splitWords\r\n      .split(' ')\r\n      .map((a) => a.charAt(0))\r\n      .join(' ');\r\n\r\n    return firstLetters;\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <A to={generatePath(Routes.USER_PROFILE, { username })}>\r\n        <ImageContainer>\r\n          {image ? <Image src={image} /> : <InitialLetters color={color}>{splitFullName()}</InitialLetters>}\r\n        </ImageContainer>\r\n      </A>\r\n\r\n      <Spacing top=\"sm\" bottom=\"xs\">\r\n        <A to={generatePath(Routes.USER_PROFILE, { username })}>\r\n          <FullName>{fullName}</FullName>\r\n        </A>\r\n      </Spacing>\r\n\r\n      <UserName>@{username}</UserName>\r\n\r\n      <Spacing top=\"lg\" />\r\n\r\n      <Follow user={user} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nPeopleCard.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PeopleCard;\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Container } from 'components/Layout';\r\nimport Skeleton from 'components/Skeleton';\r\nimport { Loading } from 'components/Loading';\r\nimport Empty from 'components/Empty';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Head from 'components/Head';\r\nimport PeopleCard from './PeopleCard';\r\n\r\nimport { GET_USERS } from 'graphql/user';\r\n\r\nimport { PEOPLE_PAGE_USERS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { useQuery } from '@apollo/client';\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst PeopleContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\r\n  grid-auto-rows: auto;\r\n  grid-gap: 20px;\r\n  margin-bottom: ${(p) => p.theme.spacing.lg};\r\n`;\r\n\r\n/**\r\n * People page\r\n */\r\nconst People = () => {\r\n  const [{ auth }] = useStore();\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: PEOPLE_PAGE_USERS_LIMIT,\r\n  };\r\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USERS, {\r\n    variables,\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  const renderContent = () => {\r\n    if (loading && networkStatus === 1) {\r\n      return (\r\n        <PeopleContainer>\r\n          <Skeleton height={280} count={PEOPLE_PAGE_USERS_LIMIT} />\r\n        </PeopleContainer>\r\n      );\r\n    }\r\n\r\n    const { users, count } = data.getUsers;\r\n    if (!users.length > 0) return <Empty text=\"No people yet.\" />;\r\n\r\n    return (\r\n      <InfiniteScroll\r\n        data={users}\r\n        dataKey=\"getUsers.users\"\r\n        count={parseInt(count)}\r\n        variables={variables}\r\n        fetchMore={fetchMore}\r\n      >\r\n        {(data) => {\r\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\r\n\r\n          return (\r\n            <Fragment>\r\n              <PeopleContainer>\r\n                {data.map((user) => (\r\n                  <PeopleCard key={user.id} user={user} />\r\n                ))}\r\n              </PeopleContainer>\r\n\r\n              {showNextLoading && <Loading top=\"lg\" />}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </InfiniteScroll>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Root maxWidth=\"md\">\r\n      <Head title=\"Find new People\" />\r\n\r\n      {renderContent()}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { Container, Content } from 'components/Layout';\r\nimport { Loading } from 'components/Loading';\r\nimport Skeleton from 'components/Skeleton';\r\nimport Notification from 'components/App/Notification';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Empty from 'components/Empty';\r\nimport Head from 'components/Head';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { GET_USER_NOTIFICATION } from 'graphql/notification';\r\n\r\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from 'constants/DataLimit';\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n`;\r\n\r\nconst List = styled.div`\r\n  overflow: hidden;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\n/**\r\n * Notifications page\r\n */\r\nconst Notifications = () => {\r\n  const [{ auth }] = useStore();\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT,\r\n  };\r\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USER_NOTIFICATION, {\r\n    variables,\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  const renderContent = () => {\r\n    if (loading && networkStatus === 1) {\r\n      return <Skeleton height={56} bottom=\"xxs\" count={NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT} />;\r\n    }\r\n\r\n    const { notifications, count } = data.getUserNotifications;\r\n    if (!notifications.length) {\r\n      return <Empty text=\"No notifications yet.\" />;\r\n    }\r\n\r\n    return (\r\n      <InfiniteScroll\r\n        data={notifications}\r\n        dataKey=\"getUserNotifications.notifications\"\r\n        count={parseInt(count)}\r\n        variables={variables}\r\n        fetchMore={fetchMore}\r\n      >\r\n        {(data) => {\r\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\r\n\r\n          return (\r\n            <>\r\n              <List>\r\n                {data.map((notification) => (\r\n                  <Notification key={notification.id} notification={notification} close={() => false} />\r\n                ))}\r\n              </List>\r\n\r\n              {showNextLoading && <Loading top=\"lg\" />}\r\n            </>\r\n          );\r\n        }}\r\n      </InfiniteScroll>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <Root maxWidth=\"md\">\r\n        <Head title={`${auth.user.username}'s Notifications`} />\r\n\r\n        {renderContent()}\r\n      </Root>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Content } from 'components/Layout';\r\nimport PostPopup from 'components/PostPopup';\r\n\r\n/**\r\n * Post detail page\r\n */\r\nconst Post = ({ match }) => {\r\n  return (\r\n    <Content>\r\n      <PostPopup usedInModal={false} id={match.params.id} />\r\n    </Content>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(Post);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { NavLink, generatePath, withRouter } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { GET_CONVERSATIONS } from 'graphql/user';\r\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\r\n\r\nimport Search from 'components/Search';\r\nimport { PencilIcon } from 'components/icons';\r\nimport { LoadingDots } from 'components/Loading';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 80px;\r\n  height: 100%;\r\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    width: 330px;\r\n  }\r\n`;\r\n\r\nconst HeadingContainer = styled.div`\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  height: 60px;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  display: none;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  margin: 0;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst NewMessage = styled(NavLink)`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: ${(p) => p.theme.colors.grey[200]};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: none;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n  padding: 0 ${(p) => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  width: 100%;\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\r\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n\r\n  @media (max-width: ${(p) => p.theme.screen.lg}) {\r\n    ${(p) =>\r\n      !p.seen &&\r\n      `\r\n        background-color: ${p.theme.colors.primary.light};\r\n      `};\r\n  }\r\n\r\n  &.selected {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  display: none;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst FullNameUnSeen = styled.div`\r\n  width: 100%;\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n`;\r\n\r\nconst UnSeen = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${(p) => p.theme.colors.primary.light};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  margin-top: ${(p) => p.theme.spacing.xxs};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  color: ${(p) => p.theme.colors.grey[500]};\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\n/**\r\n * Component that renders users, with whom auth user had a chat\r\n */\r\nconst MessagesUsers = ({ location, authUser }) => {\r\n  const { subscribeToMore, data, loading } = useQuery(GET_CONVERSATIONS, {\r\n    variables: { authUserId: authUser.id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const { newConversation } = subscriptionData.data;\r\n        const oldConversations = prev.getConversations;\r\n\r\n        if (oldConversations.some((u) => u.id === newConversation.id)) {\r\n          return prev;\r\n        }\r\n\r\n        // Merge conversations\r\n        const conversations = newConversation;\r\n        delete conversations['receiverId'];\r\n        const mergedConversations = [newConversation, ...oldConversations];\r\n\r\n        return { getConversations: mergedConversations };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  return (\r\n    <Root>\r\n      <HeadingContainer>\r\n        <Heading>Chats</Heading>\r\n\r\n        <NewMessage\r\n          exact\r\n          activeClassName=\"selected\"\r\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\r\n        >\r\n          <PencilIcon />\r\n        </NewMessage>\r\n      </HeadingContainer>\r\n\r\n      <SearchContainer>\r\n        <Search location={location} backgroundColor=\"white\" forMessage placeholder=\"Search message\" />\r\n      </SearchContainer>\r\n\r\n      {loading && <LoadingDots top=\"xl\" />}\r\n\r\n      {!loading && (\r\n        <UserContainer>\r\n          {data.getConversations.map((user) => {\r\n            const unseen = !user.lastMessageSender && !user.seen;\r\n\r\n            return (\r\n              <User key={user.id} activeClassName=\"selected\" to={`/messages/${user.id}`} seen={unseen ? 0 : 1}>\r\n                <span>\r\n                  <Avatar image={user.image} size={50} />\r\n                </span>\r\n\r\n                <Info>\r\n                  <FullNameUnSeen>\r\n                    <FullName>{user.fullName}</FullName>\r\n\r\n                    {unseen && <UnSeen />}\r\n                  </FullNameUnSeen>\r\n\r\n                  <LastMessage>\r\n                    {user.lastMessageSender && 'You:'} {user.lastMessage}\r\n                  </LastMessage>\r\n                </Info>\r\n              </User>\r\n            );\r\n          })}\r\n        </UserContainer>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesUsers.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(MessagesUsers);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { Button, Textarea } from 'components/Form';\r\nimport { SendIcon } from 'components/icons';\r\nimport Avatar from 'components/Avatar';\r\nimport { Spacing } from 'components/Layout';\r\n\r\nimport { CREATE_MESSAGE } from 'graphql/messages';\r\nimport { GET_CONVERSATIONS } from 'graphql/user';\r\n\r\nimport { currentDate } from 'utils/date';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n  overflow-y: auto;\r\n  height: 100vh;\r\n  margin-top: -120px;\r\n  padding-top: 120px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: ${(p) => p.theme.colors.grey[500]};\r\n    border-radius: ${(p) => p.theme.radius.lg};\r\n    visibility: hidden;\r\n\r\n    &:hover {\r\n      background-color: ${(p) => p.theme.colors.grey[600]};\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    ::-webkit-scrollbar-thumb {\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Conversation = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst MessageDate = styled.span`\r\n  position: absolute;\r\n  bottom: -${(p) => p.theme.spacing.sm};\r\n  left: ${(p) => !p.userMessage && p.theme.spacing.lg};\r\n  right: -${(p) => p.userMessage && 0};\r\n  display: none;\r\n  font-size: ${(p) => p.theme.font.size.tiny};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n`;\r\n\r\nconst MessageWrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  justify-content: ${(p) => p.userMessage && 'flex-end'};\r\n  margin: ${(p) => p.theme.spacing.md} 0;\r\n\r\n  &:hover ${MessageDate} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Message = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: relative;\r\n  max-width: 300px;\r\n  line-height: 21px;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\r\n  border-radius: ${(p) => p.theme.radius.lg};\r\n  color: ${(p) => p.userMessage && p.theme.colors.white};\r\n  background-color: ${(p) => (p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200])};\r\n`;\r\n\r\nconst Form = styled.form`\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: ${(p) => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst StyledTextarea = styled(Textarea)`\r\n  height: 38px;\r\n  border-radius: ${(p) => p.theme.radius.lg};\r\n  background-color: ${(p) => p.theme.colors.grey[200]};\r\n`;\r\n\r\nconst SendButton = styled(Button)`\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n  align-self: center;\r\n`;\r\n\r\n/**\r\n * Component that renders messages conversations UI\r\n */\r\nconst MessagesChatConversation = ({ messages, authUser, chatUser, data, match }) => {\r\n  const bottomRef = useRef(null);\r\n\r\n  const [messageText, setMessageText] = useState('');\r\n\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n\r\n  useEffect(() => {\r\n    if (bottomRef.current) {\r\n      bottomRef.current.scrollIntoView();\r\n    }\r\n  }, [bottomRef, data]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!messageText) return;\r\n\r\n    setMessageText('');\r\n    createMessage({\r\n      variables: {\r\n        input: {\r\n          sender: authUser.id,\r\n          receiver: chatUser ? chatUser.id : null,\r\n          message: messageText,\r\n        },\r\n      },\r\n      refetchQueries: ({ data }) => {\r\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\r\n          return [\r\n            {\r\n              query: GET_CONVERSATIONS,\r\n              variables: { authUserId: authUser.id },\r\n            },\r\n          ];\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      sendMessage(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Conversation>\r\n        {messages.map((message) => {\r\n          const isAuthUserReceiver = authUser.id === message.sender.id;\r\n\r\n          return (\r\n            <MessageWrapper userMessage={isAuthUserReceiver} key={message.id}>\r\n              {!isAuthUserReceiver && (\r\n                <Spacing right=\"xs\">\r\n                  <Avatar image={message.sender.image} />\r\n                </Spacing>\r\n              )}\r\n\r\n              <Message userMessage={isAuthUserReceiver}>{message.message}</Message>\r\n\r\n              <MessageDate userMessage={isAuthUserReceiver}>{currentDate(message.createdAt)}</MessageDate>\r\n            </MessageWrapper>\r\n          );\r\n        })}\r\n        <div ref={bottomRef} />\r\n      </Conversation>\r\n\r\n      {match.params.userId !== Routes.NEW_ID_VALUE && chatUser && (\r\n        <Form onSubmit={sendMessage}>\r\n          <StyledTextarea\r\n            placeholder=\"Type a message\"\r\n            value={messageText}\r\n            onChange={(e) => setMessageText(e.target.value)}\r\n            onKeyDown={onEnterPress}\r\n          />\r\n\r\n          <SendButton type=\"submit\" ghost>\r\n            <SendIcon width=\"28\" />\r\n          </SendButton>\r\n        </Form>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesChatConversation.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n  chatUser: PropTypes.object,\r\n  data: PropTypes.any,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MessagesChatConversation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath, withRouter, Link } from 'react-router-dom';\r\nimport { useSubscription } from '@apollo/client';\r\n\r\nimport Search from 'components/Search';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 60px;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  z-index: 1;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\nconst To = styled.div`\r\n  margin-top: 1px;\r\n`;\r\n\r\nconst User = styled(Link)`\r\n  margin: 0 ${(p) => p.theme.spacing.xxs};\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  padding-left: ${(p) => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst Online = styled.div`\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${(p) => p.theme.colors.success};\r\n  margin-left: ${(p) => p.theme.spacing.xs};\r\n  border-radius: 50%;\r\n`;\r\n\r\n/**\r\n * Heading component for messages chat\r\n */\r\nconst MessagesChatHeading = ({ location, match, chatUser }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\r\n    variables: {\r\n      authUserId: auth.user.id,\r\n      userId: chatUser ? chatUser.id : null,\r\n    },\r\n    skip: !chatUser,\r\n  });\r\n\r\n  // Update user's isOnline field in real time\r\n  if (!loading && data && chatUser) {\r\n    chatUser.isOnline = data.isUserOnline.isOnline;\r\n  }\r\n\r\n  if (match.params.userId === Routes.NEW_ID_VALUE || !chatUser) {\r\n    return (\r\n      <Root>\r\n        <InputContainer>\r\n          <To>To:</To>\r\n          <Search\r\n            location={location}\r\n            backgroundColor=\"white\"\r\n            hideIcon\r\n            forMessage\r\n            placeholder=\"Type the name of a person\"\r\n            autoFocus\r\n          />\r\n        </InputContainer>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  if (chatUser) {\r\n    return (\r\n      <Root>\r\n        <User\r\n          to={generatePath(Routes.USER_PROFILE, {\r\n            username: chatUser.username,\r\n          })}\r\n        >\r\n          <Avatar image={chatUser.image} size={40} />\r\n\r\n          <Info>\r\n            <FullName>{chatUser.fullName}</FullName>\r\n\r\n            {chatUser.isOnline && <Online />}\r\n          </Info>\r\n        </User>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nMessagesChatHeading.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  chatUser: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(MessagesChatHeading);\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useApolloClient } from '@apollo/client';\r\n\r\nimport { LoadingDots } from 'components/Loading';\r\nimport MessagesChatConversation from './MessagesChatConversation';\r\nimport MessagesChatHeading from './MessagesChatHeading';\r\n\r\nimport { GET_MESSAGES, GET_MESSAGES_SUBSCRIPTION, UPDATE_MESSAGE_SEEN } from 'graphql/messages';\r\nimport { GET_USER, GET_CONVERSATIONS, GET_AUTH_USER } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\n/**\r\n * Messages chat wrapper\r\n */\r\nconst MessagesChat = ({ match, authUser }) => {\r\n  const { userId } = match.params;\r\n\r\n  const client = useApolloClient();\r\n\r\n  const { data, loading } = useQuery(GET_USER, {\r\n    variables: { id: userId },\r\n    skip: userId === Routes.NEW_ID_VALUE,\r\n  });\r\n\r\n  const { subscribeToMore, data: messages, loading: messagesLoading } = useQuery(GET_MESSAGES, {\r\n    variables: { authUserId: authUser.id, userId },\r\n    skip: userId === Routes.NEW_ID_VALUE,\r\n    fetchPolicy: 'network-only',\r\n  });\r\n\r\n  const updateMessageSeen = useCallback(async () => {\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPDATE_MESSAGE_SEEN,\r\n        variables: {\r\n          input: {\r\n            receiver: authUser.id,\r\n            sender: userId,\r\n          },\r\n        },\r\n        refetchQueries: () => [\r\n          {\r\n            query: GET_CONVERSATIONS,\r\n            variables: { authUserId: authUser.id },\r\n          },\r\n          { query: GET_AUTH_USER },\r\n        ],\r\n      });\r\n    } catch (err) {}\r\n  }, [authUser.id, client, userId]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_MESSAGES_SUBSCRIPTION,\r\n      variables: { authUserId: authUser.id, userId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        updateMessageSeen();\r\n\r\n        const newMessage = subscriptionData.data.messageCreated;\r\n        const mergedMessages = [...prev.getMessages, newMessage];\r\n\r\n        return { getMessages: mergedMessages };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [authUser.id, userId, subscribeToMore, updateMessageSeen]);\r\n\r\n  useEffect(() => {\r\n    if (userId !== Routes.NEW_ID_VALUE) {\r\n      updateMessageSeen();\r\n    }\r\n  }, [userId, updateMessageSeen]);\r\n\r\n  if (loading || messagesLoading) {\r\n    return (\r\n      <Root>\r\n        <LoadingDots />\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  let chatUser = null;\r\n  if (data && data.getUser) {\r\n    chatUser = data.getUser;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <MessagesChatHeading match={match} chatUser={chatUser} />\r\n\r\n      <MessagesChatConversation\r\n        authUser={authUser}\r\n        messages={messages ? messages.getMessages : []}\r\n        chatUser={chatUser}\r\n        data={messages}\r\n        match={match}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesChat.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MessagesChat;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { HEADER_HEIGHT } from 'constants/Layout';\r\n\r\nimport MessagesUsers from './MessagesUsers';\r\nimport MessagesChat from './MessagesChat';\r\n\r\nconst Root = styled.div`\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  position: relative;\r\n  margin-top: -${HEADER_HEIGHT}px;\r\n  padding-top: ${HEADER_HEIGHT}px;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    border-left: 1px solid ${(p) => p.theme.colors.border.main};\r\n    border-right: 1px solid ${(p) => p.theme.colors.border.main};\r\n  }\r\n`;\r\n\r\n/**\r\n * Messages page\r\n */\r\nconst Messages = ({ match }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root>\r\n      <MessagesUsers authUser={auth.user} match={match} />\r\n\r\n      <MessagesChat match={match} authUser={auth.user} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Header from 'components/App/Header';\r\nimport NotFound from 'components/NotFound';\r\nimport SideBar from './SideBar';\r\nimport UserSuggestions from './UserSuggestions';\r\n\r\nimport Home from 'pages/Home';\r\nimport Profile from 'pages/Profile';\r\nimport Explore from 'pages/Explore';\r\nimport People from 'pages/People';\r\nimport Notifications from 'pages/Notifications';\r\nimport Post from 'pages/Post';\r\nimport Messages from 'pages/Messages';\r\n\r\nimport { useWindowSize } from 'hooks/useWindowSize';\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport theme from 'theme';\r\n\r\nimport { useStore } from 'store';\r\nimport { SET_AUTH_USER } from 'store/auth';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: ${(p) => p.theme.screen.md};\r\n  }\r\n\r\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\r\n    width: ${(p) => p.theme.screen.lg};\r\n  }\r\n`;\r\n\r\n/**\r\n * Main layout of the app, when user is authenticated\r\n */\r\nconst AppLayout = ({ location, authUser }) => {\r\n  const [{ auth }, dispatch] = useStore();\r\n\r\n  const windowSize = useWindowSize();\r\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\r\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\r\n\r\n  const sideBarRef = useRef('');\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\r\n  }, [dispatch, authUser]);\r\n\r\n  useClickOutside(sideBarRef, () => {\r\n    if (!isDesktop && isSideBarOpen) {\r\n      setIsSidebarOpen(false);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsSidebarOpen(isDesktop);\r\n  }, [isDesktop]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isDesktop) {\r\n        setIsSidebarOpen(false);\r\n      }\r\n    };\r\n  }, [location.pathname, isDesktop]);\r\n\r\n  if (!auth.user) return null;\r\n\r\n  return (\r\n    <>\r\n      <Header toggleSideBar={() => setIsSidebarOpen(!isSideBarOpen)} />\r\n\r\n      <Root>\r\n        <SideBar isOpen={isSideBarOpen} sideBarRef={sideBarRef} />\r\n\r\n        <Switch>\r\n          <Route exact path={Routes.HOME} component={Home} />\r\n\r\n          <Route exact path={Routes.EXPLORE} component={Explore} />\r\n\r\n          <Route exact path={Routes.PEOPLE} component={People} />\r\n\r\n          <Route exact path={Routes.NOTIFICATIONS} component={Notifications} />\r\n\r\n          <Route exact path={Routes.MESSAGES} component={Messages} />\r\n\r\n          <Route exact path={Routes.USER_PROFILE} component={Profile} />\r\n\r\n          <Route exact path={Routes.POST} component={Post} />\r\n\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n\r\n        <UserSuggestions pathname={location.pathname} />\r\n      </Root>\r\n    </>\r\n  );\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(AppLayout);\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\n/**\r\n * React hook for detecting window resizing\r\n */\r\nexport const useWindowSize = () => {\r\n  const isClient = typeof window === 'object';\r\n\r\n  const getSize = useCallback(() => {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  }, [isClient]);\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [getSize, isClient]);\r\n\r\n  return windowSize;\r\n};\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/**\r\n * Scrolls to top on route change\r\n */\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return children || null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { GlobalStyle } from './GlobalStyles';\r\n\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\r\nimport { NOTIFICATION_CREATED_OR_DELETED } from 'graphql/notification';\r\n\r\nimport Message from 'components/Message';\r\nimport { Loading } from 'components/Loading';\r\nimport AuthLayout from 'pages/Auth/AuthLayout';\r\nimport NotFound from 'components/NotFound';\r\nimport AppLayout from './AppLayout';\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nimport { useStore } from 'store';\r\n\r\n/**\r\n * Root component of the app\r\n */\r\nconst App = () => {\r\n  const [{ message }] = useStore();\r\n\r\n  const { loading, subscribeToMore, data, error, refetch } = useQuery(GET_AUTH_USER);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: NOTIFICATION_CREATED_OR_DELETED,\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const oldNotifications = prev.getAuthUser.newNotifications;\r\n        const { operation, notification } = subscriptionData.data.notificationCreatedOrDeleted;\r\n\r\n        let newNotifications;\r\n\r\n        if (operation === 'CREATE') {\r\n          // Don't show message notification in Header if user already is on notifications page\r\n          if (window.location.href.split('/')[3] === 'notifications') {\r\n            return prev;\r\n          }\r\n\r\n          // Add new notification\r\n          newNotifications = [notification, ...oldNotifications];\r\n        } else {\r\n          // Remove from notifications\r\n          const notifications = oldNotifications;\r\n          const index = notifications.findIndex((n) => n.id === notification.id);\r\n          if (index > -1) {\r\n            notifications.splice(index, 1);\r\n          }\r\n\r\n          newNotifications = notifications;\r\n        }\r\n\r\n        // Attach new notifications to authUser\r\n        const authUser = prev.getAuthUser;\r\n        authUser.newNotifications = newNotifications;\r\n\r\n        return { getAuthUser: authUser };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const oldConversations = prev.getAuthUser.newConversations;\r\n        const { newConversation } = subscriptionData.data;\r\n\r\n        // Don't show message notification in Header if user already is on messages page\r\n        if (window.location.href.split('/')[3] === 'messages') {\r\n          return prev;\r\n        }\r\n\r\n        // If authUser already has unseen message from that user,\r\n        // remove old message, so we can show the new one\r\n        const index = oldConversations.findIndex((u) => u.id === newConversation.id);\r\n        if (index > -1) {\r\n          oldConversations.splice(index, 1);\r\n        }\r\n\r\n        // Merge conversations\r\n        const mergeConversations = [newConversation, ...oldConversations];\r\n\r\n        // Attach new conversation to authUser\r\n        const authUser = prev.getAuthUser;\r\n        authUser.newConversations = mergeConversations;\r\n\r\n        return { getAuthUser: authUser };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  if (loading) return <Loading top=\"xl\" />;\r\n  if (error) {\r\n    const isDevelopment = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n    if (isDevelopment) {\r\n      console.error(error);\r\n    }\r\n    const devErrorMessage =\r\n      'Sorry, something went wrong. Please open the browser console to view the detailed error message.';\r\n    const prodErrorMessage = \"Sorry, something went wrong. We're working on getting this fixed as soon as we can.\";\r\n    return <NotFound message={isDevelopment ? devErrorMessage : prodErrorMessage} showHomePageLink={false} />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <GlobalStyle />\r\n\r\n      <ScrollToTop>\r\n        <Switch>\r\n          {data.getAuthUser ? (\r\n            <Route exact render={() => <AppLayout authUser={data.getAuthUser} />} />\r\n          ) : (\r\n            <Route exact render={() => <AuthLayout refetch={refetch} />} />\r\n          )}\r\n        </Switch>\r\n      </ScrollToTop>\r\n\r\n      {message.content.text && (\r\n        <Message type={message.content.type} autoClose={message.content.autoClose}>\r\n          {message.content.text}\r\n        </Message>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { createApolloClient } from 'utils/apollo-client';\r\nimport { StoreProvider } from 'store';\r\n\r\nimport 'normalize.css';\r\nimport theme from 'theme';\r\n\r\nimport App from 'components/App/App';\r\n\r\n// GraphQL HTTP URL\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// GraphQL WebSocket (subscriptions) URL.\r\n// If its url is not set in .env then it has same url, host and pathname\r\nconst WEBSOCKET_API_URL = process.env.REACT_APP_WEBSOCKET_API_URL;\r\nconst websocketApiUrl = WEBSOCKET_API_URL\r\n  ? WEBSOCKET_API_URL\r\n  : API_URL.replace('https://', 'ws://').replace('http://', 'ws://');\r\n\r\n// Create a Apollo client\r\nconst apolloClient = createApolloClient(API_URL, websocketApiUrl);\r\n\r\nrender(\r\n  <ApolloProvider client={apolloClient}>\r\n    <ThemeProvider theme={theme}>\r\n      <StoreProvider>\r\n        <App />\r\n      </StoreProvider>\r\n    </ThemeProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}